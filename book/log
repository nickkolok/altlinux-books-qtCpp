
XSMP открывает соединение
chdir(/etc/vim)
fchdir() to previous dir
считывание сценария "/etc/vim/vimrc"
строка 1: " System-wide vimrc file for ALTLinux distribution
строка 2: "
строка 3: " Maintainer:^IVim Development Team <vim@packages.altlinux.ru>
строка 4: " Last change:^I2003 Apr 25 by Sir Raorn <raorn@altlinux.ru>
строка 5: "
строка 6: " When started as "evim", evim.vim will already have done these settings.
строка 7: if v:progname =~? "evim"
строка 8: ^Ifinish
строка 9: endif
строка 10: 
строка 11: " Use Vim settings, rather then Vi settings (much better!).
строка 12: " This must be first, because it changes other options as a side effect.
строка 13: set nocompatible
строка 14: 
строка 15: " allow backspacing over everything in insert mode
строка 16: set backspace=indent,eol,start
строка 17: 
строка 18: set autoindent^I^I" always set autoindenting on
строка 19: set backup^I^I" keep a backup file
строка 20: set history=50^I^I" keep 50 lines of command line history
строка 21: set ruler^I^I" show the cursor position all the time
строка 22: set showcmd^I^I" show partial command in status line
строка 23: set noeightbitmeta^I" Meta-Sends-Escape
строка 24: if has("extra_search")
строка 25:     set incsearch^I" turn on incremental search
строка 26: endif
строка 27: 
строка 28: set viminfo='50,r/mnt/floppy,r/mnt/zip,r/media,%,n~/.viminfo
строка 29: 
строка 30: " Don't use Ex mode, use Q for formatting
строка 31: map Q gq
строка 32: 
строка 33: " Switch syntax highlighting on, when the terminal has colors
строка 34: " Also switch on highlighting the last used search pattern.
строка 35: if &t_Co > 2 || has("gui_running")
строка 36: ^Isyntax on
строка 36: so $VIMRUNTIME/syntax/syntax.vim
chdir(/usr/share/vim/syntax)
fchdir() to previous dir
строка 36: считывание "/usr/share/vim/syntax/syntax.vim"
строка 1: " Vim syntax support file
строка 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>
строка 3: " Last Change:^I2001 Sep 04
строка 4: 
строка 5: " This file is used for ":syntax on".
строка 6: " It installs the autocommands and starts highlighting for all buffers.
строка 7: 
строка 8: if !has("syntax")
строка 9:   finish
строка 10: endif
строка 11: 
строка 12: " If Syntax highlighting appears to be on already, turn it off first, so that
строка 13: " any leftovers are cleared.
строка 14: if exists("syntax_on") || exists("syntax_manual")
строка 15:   so <sfile>:p:h/nosyntax.vim
строка 16: endif
строка 17: 
строка 18: " Load the Syntax autocommands and set the default methods for highlighting.
строка 19: runtime syntax/synload.vim
Поиск "syntax/synload.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/syntax/synload.vim"
Поиск "/usr/share/vim/vimfiles/syntax/synload.vim"
Поиск "/usr/share/vim/syntax/synload.vim"
chdir(/usr/share/vim/syntax)
fchdir() to previous dir
строка 19: считывание "/usr/share/vim/syntax/synload.vim"
строка 1: " Vim syntax support file
строка 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>
строка 3: " Last Change:^I2010 Aug 08
строка 4: 
строка 5: " This file sets up for syntax highlighting.
строка 6: " It is loaded from "syntax.vim" and "manual.vim".
строка 7: " 1. Set the default highlight groups.
строка 8: " 2. Install Syntax autocommands for all the available syntax files.
строка 9: 
строка 10: if !has("syntax")
строка 11:   finish
строка 12: endif
строка 13: 
строка 14: " let others know that syntax has been switched on
строка 15: let syntax_on = 1
строка 16: 
строка 17: " Set the default highlighting colors.  Use a color scheme if specified.
строка 18: if exists("colors_name")
строка 19:   exe "colors " . colors_name
строка 20: else
строка 21:   runtime! syntax/syncolor.vim
Поиск "syntax/syncolor.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/syntax/syncolor.vim"
Поиск "/usr/share/vim/vimfiles/syntax/syncolor.vim"
Поиск "/usr/share/vim/syntax/syncolor.vim"
chdir(/usr/share/vim/syntax)
fchdir() to previous dir
строка 21: считывание "/usr/share/vim/syntax/syncolor.vim"
строка 1: " Vim syntax support file
строка 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>
строка 3: " Last Change:^I2001 Sep 12
строка 4: 
строка 5: " This file sets up the default methods for highlighting.
строка 6: " It is loaded from "synload.vim" and from Vim for ":syntax reset".
строка 7: " Also used from init_highlight().
строка 8: 
строка 9: if !exists("syntax_cmd") || syntax_cmd == "on"
строка 10:   " ":syntax on" works like in Vim 5.7: set colors but keep links
строка 11:   command -nargs=* SynColor hi <args>
строка 12:   command -nargs=* SynLink hi link <args>
строка 13: else
строка 14:   if syntax_cmd == "enable"
строка 15:     " ":syntax enable" keeps any existing colors
строка 16:     command -nargs=* SynColor hi def <args>
строка 17:     command -nargs=* SynLink hi def link <args>
строка 18:   elseif syntax_cmd == "reset"
строка 19:     " ":syntax reset" resets all colors to the default
строка 20:     command -nargs=* SynColor hi <args>
строка 21:     command -nargs=* SynLink hi! link <args>
строка 22:   else
строка 23:     " User defined syncolor file has already set the colors.
строка 24:     finish
строка 25:   endif
строка 26: endif
строка 27: 
строка 28: " Many terminals can only use six different colors (plus black and white).
строка 29: " Therefore the number of colors used is kept low. It doesn't look nice with
строка 30: " too many colors anyway.
строка 31: " Careful with "cterm=bold", it changes the color to bright for some terminals.
строка 32: " There are two sets of defaults: for a dark and a light background.
строка 33: if &background == "dark"
строка 34:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#80a0ff guibg=NONE
строка 35:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=Magenta ctermbg=NONE gui=NONE guifg=#ffa0a0 guibg=NONE
строка 36:   SynColor Special^Iterm=bold cterm=NONE ctermfg=LightRed ctermbg=NONE gui=NONE guifg=Orange guibg=NONE
строка 37:   SynColor Identifier^Iterm=underline cterm=bold ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#40ffff guibg=NONE
строка 38:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Yellow ctermbg=NONE gui=bold guifg=#ffff60 guibg=NONE
строка 39:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=LightBlue ctermbg=NONE gui=NONE guifg=#ff80ff guibg=NONE
строка 40:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=LightGreen ctermbg=NONE gui=bold guifg=#60ff60 guibg=NONE
строка 41:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=LightBlue gui=underline guifg=#80a0ff
строка 42:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=black ctermbg=NONE gui=NONE guifg=bg guibg=NONE
строка 43: else
строка 44:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=DarkBlue ctermbg=NONE gui=NONE guifg=Blue guibg=NONE
строка 44: hi Comment^Iterm=bold cterm=NONE ctermfg=DarkBlue ctermbg=NONE gui=NONE guifg=Blue guibg=NONE
строка 45:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=DarkRed ctermbg=NONE gui=NONE guifg=Magenta guibg=NONE
строка 45: hi Constant^Iterm=underline cterm=NONE ctermfg=DarkRed ctermbg=NONE gui=NONE guifg=Magenta guibg=NONE
строка 46:   SynColor Special^Iterm=bold cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=SlateBlue guibg=NONE
строка 46: hi Special^Iterm=bold cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=SlateBlue guibg=NONE
строка 47:   SynColor Identifier^Iterm=underline cterm=NONE ctermfg=DarkCyan ctermbg=NONE gui=NONE guifg=DarkCyan guibg=NONE
строка 47: hi Identifier^Iterm=underline cterm=NONE ctermfg=DarkCyan ctermbg=NONE gui=NONE guifg=DarkCyan guibg=NONE
строка 48:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Brown ctermbg=NONE gui=bold guifg=Brown guibg=NONE
строка 48: hi Statement^Iterm=bold cterm=NONE ctermfg=Brown ctermbg=NONE gui=bold guifg=Brown guibg=NONE
строка 49:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=Purple guibg=NONE
строка 49: hi PreProc^Iterm=underline cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=Purple guibg=NONE
строка 50:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=DarkGreen ctermbg=NONE gui=bold guifg=SeaGreen guibg=NONE
строка 50: hi Type^I^Iterm=underline cterm=NONE ctermfg=DarkGreen ctermbg=NONE gui=bold guifg=SeaGreen guibg=NONE
строка 51:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=DarkMagenta gui=underline guifg=SlateBlue
строка 51: hi Underlined^Iterm=underline cterm=underline ctermfg=DarkMagenta gui=underline guifg=SlateBlue
строка 52:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=white ctermbg=NONE gui=NONE guifg=bg guibg=NONE
строка 52: hi Ignore^Iterm=NONE cterm=NONE ctermfg=white ctermbg=NONE gui=NONE guifg=bg guibg=NONE
строка 53: endif
строка 54: SynColor Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red
строка 54: hi Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red
строка 55: SynColor Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow
строка 55: hi Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow
строка 56: 
строка 57: " Common groups that link to default highlighting.
строка 58: " You can specify other highlighting easily.
строка 59: SynLink String^I^IConstant
строка 59: hi link String^I^IConstant
строка 60: SynLink Character^IConstant
строка 60: hi link Character^IConstant
строка 61: SynLink Number^I^IConstant
строка 61: hi link Number^I^IConstant
строка 62: SynLink Boolean^I^IConstant
строка 62: hi link Boolean^I^IConstant
строка 63: SynLink Float^I^INumber
строка 63: hi link Float^I^INumber
строка 64: SynLink Function^IIdentifier
строка 64: hi link Function^IIdentifier
строка 65: SynLink Conditional^IStatement
строка 65: hi link Conditional^IStatement
строка 66: SynLink Repeat^I^IStatement
строка 66: hi link Repeat^I^IStatement
строка 67: SynLink Label^I^IStatement
строка 67: hi link Label^I^IStatement
строка 68: SynLink Operator^IStatement
строка 68: hi link Operator^IStatement
строка 69: SynLink Keyword^I^IStatement
строка 69: hi link Keyword^I^IStatement
строка 70: SynLink Exception^IStatement
строка 70: hi link Exception^IStatement
строка 71: SynLink Include^I^IPreProc
строка 71: hi link Include^I^IPreProc
строка 72: SynLink Define^I^IPreProc
строка 72: hi link Define^I^IPreProc
строка 73: SynLink Macro^I^IPreProc
строка 73: hi link Macro^I^IPreProc
строка 74: SynLink PreCondit^IPreProc
строка 74: hi link PreCondit^IPreProc
строка 75: SynLink StorageClass^IType
строка 75: hi link StorageClass^IType
строка 76: SynLink Structure^IType
строка 76: hi link Structure^IType
строка 77: SynLink Typedef^I^IType
строка 77: hi link Typedef^I^IType
строка 78: SynLink Tag^I^ISpecial
строка 78: hi link Tag^I^ISpecial
строка 79: SynLink SpecialChar^ISpecial
строка 79: hi link SpecialChar^ISpecial
строка 80: SynLink Delimiter^ISpecial
строка 80: hi link Delimiter^ISpecial
строка 81: SynLink SpecialComment^ISpecial
строка 81: hi link SpecialComment^ISpecial
строка 82: SynLink Debug^I^ISpecial
строка 82: hi link Debug^I^ISpecial
строка 83: 
строка 84: delcommand SynColor
строка 85: delcommand SynLink
считывание сценария /usr/share/vim/syntax/syncolor.vim завершено
продолжение в /usr/share/vim/syntax/synload.vim
Поиск "/usr/share/vim/vimfiles/after/syntax/syncolor.vim"
Поиск "/home/black/.vim/after/syntax/syncolor.vim"
строка 22: endif
строка 23: 
строка 24: " Line continuation is used here, remove 'C' from 'cpoptions'
строка 25: let s:cpo_save = &cpo
строка 26: set cpo&vim
строка 27: 
строка 28: " First remove all old syntax autocommands.
строка 29: au! Syntax
строка 30: 
строка 31: au Syntax *^I^Icall s:SynSet()
строка 32: 
строка 33: fun! s:SynSet()
строка 59: 
строка 60: 
строка 61: " Handle adding doxygen to other languages (C, C++, C#, IDL)
строка 66: au Syntax c,cpp,cs,idl if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
строка 67: 
строка 68: 
строка 69: " Source the user-specified syntax highlighting file
строка 70: if exists("mysyntaxfile") && filereadable(expand(mysyntaxfile))
строка 71:   execute "source " . mysyntaxfile
строка 72: endif
строка 73: 
строка 74: " Restore 'cpoptions'
строка 75: let &cpo = s:cpo_save
строка 76: unlet s:cpo_save
считывание сценария /usr/share/vim/syntax/synload.vim завершено
продолжение в /usr/share/vim/syntax/syntax.vim
строка 20: 
строка 21: " Load the FileType autocommands if not done yet.
строка 22: if exists("did_load_filetypes")
строка 23:   let s:did_ft = 1
строка 24: else
строка 25:   filetype on
Поиск "filetype.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/filetype.vim"
Поиск "/usr/share/vim/vimfiles/filetype.vim"
Поиск "/usr/share/vim/filetype.vim"
chdir(/usr/share/vim)
fchdir() to previous dir
строка 25: считывание "/usr/share/vim/filetype.vim"
строка 1: " Vim support file to detect file types
строка 2: "
строка 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
строка 4: " Last Change:^I2011 Oct 08
строка 5: 
строка 6: " Listen very carefully, I will say this only once
строка 7: if exists("did_load_filetypes")
строка 8:   finish
строка 9: endif
строка 10: let did_load_filetypes = 1
строка 11: 
строка 12: " Line continuation is used here, remove 'C' from 'cpoptions'
строка 13: let s:cpo_save = &cpo
строка 14: set cpo&vim
строка 15: 
строка 16: augroup filetypedetect
строка 17: 
строка 18: " Ignored extensions
строка 19: if exists("*fnameescape")
строка 21: au BufNewFile,BufRead ?\+.orig,?\+.bak,?\+.old,?\+.new,?\+.dpkg-dist,?\+.dpkg-old,?\+.rpmsave,?\+.rpmnew exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
строка 28: au BufNewFile,BufRead *~ let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
строка 32: au BufNewFile,BufRead ?\+.in if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
строка 33: elseif &verbose > 0
строка 34:   echomsg "Warning: some filetypes will not be recognized because this version of Vim does not have fnameescape()"
строка 35: endif
строка 36: 
строка 37: " Pattern used to match file names which should not be inspected.
строка 38: " Currently finds compressed files.
строка 39: if !exists("g:ft_ignore_pat")
строка 40:   let g:ft_ignore_pat = '\.\(Z\|gz\|bz2\|zip\|tgz\)$'
строка 41: endif
строка 42: 
строка 43: " Function used for patterns that end in a star: don't set the filetype if the
строка 44: " file name matches ft_ignore_pat.
строка 45: func! s:StarSetf(ft)
строка 50: 
строка 51: " Abaqus or Trasys
строка 52: au BufNewFile,BufRead *.inp^I^I^Icall s:Check_inp()
строка 53: 
строка 54: func! s:Check_inp()
строка 73: 
строка 74: " A-A-P recipe
строка 75: au BufNewFile,BufRead *.aap^I^I^Isetf aap
строка 76: 
строка 77: " A2ps printing utility
строка 78: au BufNewFile,BufRead */etc/a2ps.cfg,*/etc/a2ps/*.cfg,a2psrc,.a2psrc setf a2ps
строка 79: 
строка 80: " ABAB/4
строка 81: au BufNewFile,BufRead *.abap^I^I^Isetf abap
строка 82: 
строка 83: " ABC music notation
строка 84: au BufNewFile,BufRead *.abc^I^I^Isetf abc
строка 85: 
строка 86: " ABEL
строка 87: au BufNewFile,BufRead *.abl^I^I^Isetf abel
строка 88: 
строка 89: " AceDB
строка 90: au BufNewFile,BufRead *.wrm^I^I^Isetf acedb
строка 91: 
строка 92: " Ada (83, 9X, 95)
строка 93: au BufNewFile,BufRead *.adb,*.ads,*.ada^I^Isetf ada
строка 94: if has("vms")
строка 95:   au BufNewFile,BufRead *.gpr,*.ada_m,*.adc^Isetf ada
строка 96: else
строка 97:   au BufNewFile,BufRead *.gpr^I^I^Isetf ada
строка 98: endif
строка 99: 
строка 100: " AHDL
строка 101: au BufNewFile,BufRead *.tdf^I^I^Isetf ahdl
строка 102: 
строка 103: " AMPL
строка 104: au BufNewFile,BufRead *.run^I^I^Isetf ampl
строка 105: 
строка 106: " Ant
строка 107: au BufNewFile,BufRead build.xml^I^I^Isetf ant
строка 108: 
строка 109: " Apache style config file
строка 110: au BufNewFile,BufRead proftpd.conf*^I^Icall s:StarSetf('apachestyle')
строка 111: 
строка 112: " Apache config file
строка 113: au BufNewFile,BufRead .htaccess,*/etc/httpd/*.conf^I^Isetf apache
строка 114: 
строка 115: " XA65 MOS6510 cross assembler
строка 116: au BufNewFile,BufRead *.a65^I^I^Isetf a65
строка 117: 
строка 118: " Applescript
строка 119: au BufNewFile,BufRead *.scpt^I^I^Isetf applescript
строка 120: 
строка 121: " Applix ELF
строка 123: au BufNewFile,BufRead *.am if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
строка 124: 
строка 125: " ALSA configuration
строка 126: au BufNewFile,BufRead .asoundrc,*/usr/share/alsa/alsa.conf,*/etc/asound.conf setf alsaconf
строка 127: 
строка 128: " Arc Macro Language
строка 129: au BufNewFile,BufRead *.aml^I^I^Isetf aml
строка 130: 
строка 131: " Arch Inventory file
строка 132: au BufNewFile,BufRead .arch-inventory,=tagging-method^Isetf arch
строка 133: 
строка 134: " ART*Enterprise (formerly ART-IM)
строка 135: au BufNewFile,BufRead *.art^I^I^Isetf art
строка 136: 
строка 137: " ASN.1
строка 138: au BufNewFile,BufRead *.asn,*.asn1^I^Isetf asn
строка 139: 
строка 140: " Active Server Pages (with Visual Basic Script)
строка 146: au BufNewFile,BufRead *.asa if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
строка 147: 
строка 148: " Active Server Pages (with Perl or Visual Basic Script)
строка 156: au BufNewFile,BufRead *.asp if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
строка 157: 
строка 158: " Grub (must be before catch *.lst)
строка 159: au BufNewFile,BufRead */boot/grub/menu.lst,*/boot/grub/grub.conf,*/etc/grub.conf setf grub
строка 160: 
строка 161: " Assembly (all kinds)
строка 162: " *.lst is not pure assembly, it has two extra columns (address, byte codes)
строка 163: au BufNewFile,BufRead *.asm,*.[sS],*.[aA],*.mac,*.lst^Icall s:FTasm()
строка 164: 
строка 165: " This function checks for the kind of assembly that is wanted by the user, or
строка 166: " can be detected from the first five lines of the file.
строка 167: func! s:FTasm()
строка 188: 
строка 189: func! s:FTasmsyntax()
строка 201: 
строка 202: " Macro (VAX)
строка 203: au BufNewFile,BufRead *.mar^I^I^Isetf vmasm
строка 204: 
строка 205: " Atlas
строка 206: au BufNewFile,BufRead *.atl,*.as^I^Isetf atlas
строка 207: 
строка 208: " Autoit v3
строка 209: au BufNewFile,BufRead *.au3^I^I^Isetf autoit
строка 210: 
строка 211: " Autohotkey
строка 212: au BufNewFile,BufRead *.ahk^I^I^Isetf autohotkey
строка 213: 
строка 214: " Automake
строка 215: au BufNewFile,BufRead [mM]akefile.am,GNUmakefile.am^Isetf automake
строка 216: 
строка 217: " Autotest .at files are actually m4
строка 218: au BufNewFile,BufRead *.at^I^I^Isetf m4
строка 219: 
строка 220: " Avenue
строка 221: au BufNewFile,BufRead *.ave^I^I^Isetf ave
строка 222: 
строка 223: " Awk
строка 224: au BufNewFile,BufRead *.awk^I^I^Isetf awk
строка 225: 
строка 226: " B
строка 227: au BufNewFile,BufRead *.mch,*.ref,*.imp^I^Isetf b
строка 228: 
строка 229: " BASIC or Visual Basic
строка 230: au BufNewFile,BufRead *.bas^I^I^Icall s:FTVB("basic")
строка 231: 
строка 232: " Check if one of the first five lines contains "VB_Name".  In that case it is
строка 233: " probably a Visual Basic file.  Otherwise it's assumed to be "alt" filetype.
строка 234: func! s:FTVB(alt)
строка 241: 
строка 242: " Visual Basic Script (close to Visual Basic)
строка 243: au BufNewFile,BufRead *.vbs,*.dsm,*.ctl^I^Isetf vb
строка 244: 
строка 245: " IBasic file (similar to QBasic)
строка 246: au BufNewFile,BufRead *.iba,*.ibi^I^Isetf ibasic
строка 247: 
строка 248: " FreeBasic file (similar to QBasic)
строка 249: au BufNewFile,BufRead *.fb,*.bi^I^I^Isetf freebasic
строка 250: 
строка 251: " Batch file for MSDOS.
строка 252: au BufNewFile,BufRead *.bat,*.sys^I^Isetf dosbatch
строка 253: " *.cmd is close to a Batch file, but on OS/2 Rexx files also use *.cmd.
строка 255: au BufNewFile,BufRead *.cmd if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
строка 256: 
строка 257: " Batch file for 4DOS
строка 258: au BufNewFile,BufRead *.btm^I^I^Icall s:FTbtm()
строка 259: func! s:FTbtm()
строка 266: 
строка 267: " BC calculator
строка 268: au BufNewFile,BufRead *.bc^I^I^Isetf bc
строка 269: 
строка 270: " BDF font
строка 271: au BufNewFile,BufRead *.bdf^I^I^Isetf bdf
строка 272: 
строка 273: " BibTeX bibliography database file
строка 274: au BufNewFile,BufRead *.bib^I^I^Isetf bib
строка 275: 
строка 276: " BibTeX Bibliography Style
строка 277: au BufNewFile,BufRead *.bst^I^I^Isetf bst
строка 278: 
строка 279: " BIND configuration
строка 280: au BufNewFile,BufRead named.conf,rndc.conf^Isetf named
строка 281: 
строка 282: " BIND zone
строка 283: au BufNewFile,BufRead named.root^I^Isetf bindzone
строка 284: au BufNewFile,BufRead *.db^I^I^Icall s:BindzoneCheck('')
строка 285: 
строка 286: func! s:BindzoneCheck(default)
строка 293: 
строка 294: " Blank
строка 295: au BufNewFile,BufRead *.bl^I^I^Isetf blank
строка 296: 
строка 297: " Blkid cache file
строка 298: au BufNewFile,BufRead */etc/blkid.tab,*/etc/blkid.tab.old   setf xml
строка 299: 
строка 300: " C or lpc
строка 301: au BufNewFile,BufRead *.c^I^I^Icall s:FTlpc()
строка 302: 
строка 303: func! s:FTlpc()
строка 316: 
строка 317: " Calendar
строка 318: au BufNewFile,BufRead calendar^I^I^Isetf calendar
строка 319: 
строка 320: " C#
строка 321: au BufNewFile,BufRead *.cs^I^I^Isetf cs
строка 322: 
строка 323: " Cabal
строка 324: au BufNewFile,BufRead *.cabal^I^I^Isetf cabal
строка 325: 
строка 326: " Cdrdao TOC
строка 327: au BufNewFile,BufRead *.toc^I^I^Isetf cdrtoc
строка 328: 
строка 329: " Cdrdao config
строка 330: au BufNewFile,BufRead */etc/cdrdao.conf,*/etc/defaults/cdrdao,*/etc/default/cdrdao,.cdrdao^Isetf cdrdaoconf
строка 331: 
строка 332: " Cfengine
строка 333: au BufNewFile,BufRead cfengine.conf^I^Isetf cfengine
строка 334: 
строка 335: " ChaiScript
строка 336: au BufRead,BufNewFile *.chai^I^I^Isetf chaiscript
строка 337: 
строка 338: " Comshare Dimension Definition Language
строка 339: au BufNewFile,BufRead *.cdl^I^I^Isetf cdl
строка 340: 
строка 341: " Conary Recipe
строка 342: au BufNewFile,BufRead *.recipe^I^I^Isetf conaryrecipe
строка 343: 
строка 344: " Controllable Regex Mutilator
строка 345: au BufNewFile,BufRead *.crm^I^I^Isetf crm
строка 346: 
строка 347: " Cyn++
строка 348: au BufNewFile,BufRead *.cyn^I^I^Isetf cynpp
строка 349: 
строка 350: " Cynlib
строка 351: " .cc and .cpp files can be C++ or Cynlib.
строка 353: au BufNewFile,BufRead *.cc if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
строка 355: au BufNewFile,BufRead *.cpp if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
строка 356: 
строка 357: " C++
строка 358: au BufNewFile,BufRead *.cxx,*.c++,*.hh,*.hxx,*.hpp,*.ipp,*.moc,*.tcc,*.inl setf cpp
строка 359: if has("fname_case")
строка 360:   au BufNewFile,BufRead *.C,*.H setf cpp
строка 361: endif
строка 362: 
строка 363: " .h files can be C, Ch C++, ObjC or ObjC++.
строка 364: " Set c_syntax_for_h if you want C, ch_syntax_for_h if you want Ch. ObjC is
строка 365: " detected automatically.
строка 366: au BufNewFile,BufRead *.h^I^I^Icall s:FTheader()
строка 367: 
строка 368: func! s:FTheader()
строка 379: 
строка 380: " Ch (CHscript)
строка 381: au BufNewFile,BufRead *.chf^I^I^Isetf ch
строка 382: 
строка 383: " TLH files are C++ headers generated by Visual C++'s #import from typelibs
строка 384: au BufNewFile,BufRead *.tlh^I^I^Isetf cpp
строка 385: 
строка 386: " Cascading Style Sheets
строка 387: au BufNewFile,BufRead *.css^I^I^Isetf css
строка 388: 
строка 389: " Century Term Command Scripts (*.cmd too)
строка 390: au BufNewFile,BufRead *.con^I^I^Isetf cterm
строка 391: 
строка 392: " Changelog
строка 394: au BufNewFile,BufRead changelog.Debian,changelog.dch,NEWS.Debian,NEWS.dch^Isetf debchangelog
строка 395: 
строка 401: au BufNewFile,BufRead [cC]hange[lL]og  if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
строка 402: 
строка 406: au BufNewFile,BufRead NEWS  if getline(1) =~ '; urgency='|   setf debchangelog| endif
строка 407: 
строка 408: " CHILL
строка 409: au BufNewFile,BufRead *..ch^I^I^Isetf chill
строка 410: 
строка 411: " Changes for WEB and CWEB or CHILL
строка 412: au BufNewFile,BufRead *.ch^I^I^Icall s:FTchange()
строка 413: 
строка 414: " This function checks if one of the first ten lines start with a '@'.  In
строка 415: " that case it is probably a change file.
строка 416: " If the first line starts with # or ! it's probably a ch file.
строка 417: " If a line has "main", "include", "//" ir "/*" it's probably ch.
строка 418: " Otherwise CHILL is assumed.
строка 419: func! s:FTchange()
строка 442: 
строка 443: " ChordPro
строка 444: au BufNewFile,BufRead *.chopro,*.crd,*.cho,*.crdpro,*.chordpro^Isetf chordpro
строка 445: 
строка 446: " Clean
строка 447: au BufNewFile,BufRead *.dcl,*.icl^I^Isetf clean
строка 448: 
строка 449: " Clever
строка 450: au BufNewFile,BufRead *.eni^I^I^Isetf cl
строка 451: 
строка 452: " Clever or dtd
строка 453: au BufNewFile,BufRead *.ent^I^I^Icall s:FTent()
строка 454: 
строка 455: func! s:FTent()
строка 474: 
строка 475: " Clipper (or FoxPro; could also be eviews)
строка 481: au BufNewFile,BufRead *.prg if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
строка 482: 
строка 483: " Cmake
строка 484: au BufNewFile,BufRead CMakeLists.txt,*.cmake,*.cmake.in^I^Isetf cmake
строка 485: 
строка 486: " Cmusrc
строка 487: au BufNewFile,BufRead */.cmus/{autosave,rc,command-history,*.theme} setf cmusrc
строка 488: au BufNewFile,BufRead */cmus/{rc,*.theme}^I^I^Isetf cmusrc
строка 489: 
строка 490: " Cobol
строка 491: au BufNewFile,BufRead *.cbl,*.cob,*.lib^Isetf cobol
строка 492: "   cobol or zope form controller python script? (heuristic)
строка 498: au BufNewFile,BufRead *.cpy if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
строка 499: 
строка 500: " Coco/R
строка 501: au BufNewFile,BufRead *.atg^I^I^Isetf coco
строка 502: 
строка 503: " Cold Fusion
строка 504: au BufNewFile,BufRead *.cfm,*.cfi,*.cfc^I^Isetf cf
строка 505: 
строка 506: " Configure scripts
строка 507: au BufNewFile,BufRead configure.in,configure.ac setf config
строка 508: 
строка 509: " CUDA  Cumpute Unified Device Architecture
строка 510: au BufNewFile,BufRead *.cu^I^I^Isetf cuda
строка 511: 
строка 512: " WildPackets EtherPeek Decoder
строка 513: au BufNewFile,BufRead *.dcd^I^I^Isetf dcd
строка 514: 
строка 515: " Enlightenment configuration files
строка 516: au BufNewFile,BufRead *enlightenment/*.cfg^Isetf c
строка 517: 
строка 518: " Eterm
строка 519: au BufNewFile,BufRead *Eterm/*.cfg^I^Isetf eterm
строка 520: 
строка 521: " Lynx config files
строка 522: au BufNewFile,BufRead lynx.cfg^I^I^Isetf lynx
строка 523: 
строка 524: " Quake
строка 525: au BufNewFile,BufRead *baseq[2-3]/*.cfg,*id1/*.cfg^Isetf quake
строка 526: au BufNewFile,BufRead *quake[1-3]/*.cfg^I^I^Isetf quake
строка 527: 
строка 528: " Quake C
строка 529: au BufNewFile,BufRead *.qc^I^I^Isetf c
строка 530: 
строка 531: " Configure files
строка 532: au BufNewFile,BufRead *.cfg^I^I^Isetf cfg
строка 533: 
строка 534: " Cucumber
строка 535: au BufNewFile,BufRead *.feature^I^I^Isetf cucumber
строка 536: 
строка 537: " Communicating Sequential Processes
строка 538: au BufNewFile,BufRead *.csp,*.fdr^I^Isetf csp
строка 539: 
строка 540: " CUPL logic description and simulation
строка 541: au BufNewFile,BufRead *.pld^I^I^Isetf cupl
строка 542: au BufNewFile,BufRead *.si^I^I^Isetf cuplsim
строка 543: 
строка 544: " Debian Control
строка 545: au BufNewFile,BufRead */debian/control^I^Isetf debcontrol
строка 549: au BufNewFile,BufRead control  if getline(1) =~ '^Source:'|   setf debcontrol| endif
строка 550: 
строка 551: " Debian Sources.list
строка 552: au BufNewFile,BufRead */etc/apt/sources.list^I^Isetf debsources
строка 553: au BufNewFile,BufRead */etc/apt/sources.list.d/*.list^Isetf debsources
строка 554: 
строка 555: " Deny hosts
строка 556: au BufNewFile,BufRead denyhosts.conf^I^Isetf denyhosts
строка 557: 
строка 558: " dnsmasq(8) configuration files
строка 559: au BufNewFile,BufRead */etc/dnsmasq.conf^Isetf dnsmasq
строка 560: 
строка 561: " ROCKLinux package description
строка 562: au BufNewFile,BufRead *.desc^I^I^Isetf desc
строка 563: 
строка 564: " the D language or dtrace
строка 565: au BufNewFile,BufRead *.d^I^I^Icall s:DtraceCheck()
строка 566: 
строка 567: func! s:DtraceCheck()
строка 575: 
строка 576: " Desktop files
строка 577: au BufNewFile,BufRead *.desktop,.directory^Isetf desktop
строка 578: 
строка 579: " Dict config
строка 580: au BufNewFile,BufRead dict.conf,.dictrc^I^Isetf dictconf
строка 581: 
строка 582: " Dictd config
строка 583: au BufNewFile,BufRead dictd.conf^I^Isetf dictdconf
строка 584: 
строка 585: " Diff files
строка 586: au BufNewFile,BufRead *.diff,*.rej,*.patch^Isetf diff
строка 587: 
строка 588: " Dircolors
строка 589: au BufNewFile,BufRead .dir_colors,.dircolors,*/etc/DIR_COLORS^Isetf dircolors
строка 590: 
строка 591: " Diva (with Skill) or InstallShield
строка 597: au BufNewFile,BufRead *.rul if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
строка 598: 
строка 599: " DCL (Digital Command Language - vms) or DNS zone file
строка 600: au BufNewFile,BufRead *.com^I^I^Icall s:BindzoneCheck('dcl')
строка 601: 
строка 602: " DOT
строка 603: au BufNewFile,BufRead *.dot^I^I^Isetf dot
строка 604: 
строка 605: " Dylan - lid files
строка 606: au BufNewFile,BufRead *.lid^I^I^Isetf dylanlid
строка 607: 
строка 608: " Dylan - intr files (melange)
строка 609: au BufNewFile,BufRead *.intr^I^I^Isetf dylanintr
строка 610: 
строка 611: " Dylan
строка 612: au BufNewFile,BufRead *.dylan^I^I^Isetf dylan
строка 613: 
строка 614: " Microsoft Module Definition
строка 615: au BufNewFile,BufRead *.def^I^I^Isetf def
строка 616: 
строка 617: " Dracula
строка 618: au BufNewFile,BufRead *.drac,*.drc,*lvs,*lpe^Isetf dracula
строка 619: 
строка 620: " Datascript
строка 621: au BufNewFile,BufRead *.ds^I^I^Isetf datascript
строка 622: 
строка 623: " dsl
строка 624: au BufNewFile,BufRead *.dsl^I^I^Isetf dsl
строка 625: 
строка 626: " DTD (Document Type Definition for XML)
строка 627: au BufNewFile,BufRead *.dtd^I^I^Isetf dtd
строка 628: 
строка 629: " EDIF (*.edf,*.edif,*.edn,*.edo)
строка 630: au BufNewFile,BufRead *.ed\(f\|if\|n\|o\)^Isetf edif
строка 631: 
строка 632: " Embedix Component Description
строка 633: au BufNewFile,BufRead *.ecd^I^I^Isetf ecd
строка 634: 
строка 635: " Eiffel or Specman
строка 636: au BufNewFile,BufRead *.e,*.E^I^I^Icall s:FTe()
строка 637: 
строка 638: " Elinks configuration
строка 639: au BufNewFile,BufRead */etc/elinks.conf,*/.elinks/elinks.conf^Isetf elinks
строка 640: 
строка 641: func! s:FTe()
строка 652: 
строка 653: " ERicsson LANGuage; Yaws is erlang too
строка 654: au BufNewFile,BufRead *.erl,*.hrl,*.yaws^Isetf erlang
строка 655: 
строка 656: " Elm Filter Rules file
строка 657: au BufNewFile,BufRead filter-rules^I^Isetf elmfilt
строка 658: 
строка 659: " ESMTP rc file
строка 660: au BufNewFile,BufRead *esmtprc^I^I^Isetf esmtprc
строка 661: 
строка 662: " ESQL-C
строка 663: au BufNewFile,BufRead *.ec,*.EC^I^I^Isetf esqlc
строка 664: 
строка 665: " Esterel
строка 666: au BufNewFile,BufRead *.strl^I^I^Isetf esterel
строка 667: 
строка 668: " Essbase script
строка 669: au BufNewFile,BufRead *.csc^I^I^Isetf csc
строка 670: 
строка 671: " Exim
строка 672: au BufNewFile,BufRead exim.conf^I^I^Isetf exim
строка 673: 
строка 674: " Expect
строка 675: au BufNewFile,BufRead *.exp^I^I^Isetf expect
строка 676: 
строка 677: " Exports
строка 678: au BufNewFile,BufRead exports^I^I^Isetf exports
строка 679: 
строка 680: " Falcon
строка 681: au BufNewFile,BufRead *.fal^I^I^Isetf falcon
строка 682: 
строка 683: " Fantom
строка 684: au BufNewFile,BufRead *.fan,*.fwt^I^Isetf fan
строка 685: 
строка 686: " Factor
строка 687: au BufNewFile,BufRead *.factor^I^I^Isetf factor
строка 688: 
строка 689: " Fetchmail RC file
строка 690: au BufNewFile,BufRead .fetchmailrc^I^Isetf fetchmail
строка 691: 
строка 692: " FlexWiki - disabled, because it has side effects when a .wiki file
строка 693: " is not actually FlexWiki
строка 694: "au BufNewFile,BufRead *.wiki^I^I^Isetf flexwiki
строка 695: 
строка 696: " Focus Executable
строка 697: au BufNewFile,BufRead *.fex,*.focexec^I^Isetf focexec
строка 698: 
строка 699: " Focus Master file (but not for auto.master)
строка 700: au BufNewFile,BufRead auto.master^I^Isetf conf
строка 701: au BufNewFile,BufRead *.mas,*.master^I^Isetf master
строка 702: 
строка 703: " Forth
строка 704: au BufNewFile,BufRead *.fs,*.ft^I^I^Isetf forth
строка 705: 
строка 706: " Reva Forth
строка 707: au BufNewFile,BufRead *.frt^I^I^Isetf reva
строка 708: 
строка 709: " Fortran
строка 710: if has("fname_case")
строка 711:   au BufNewFile,BufRead *.F,*.FOR,*.FPP,*.FTN,*.F77,*.F90,*.F95,*.F03,*.F08^I setf fortran
строка 712: endif
строка 713: au BufNewFile,BufRead   *.f,*.for,*.fortran,*.fpp,*.ftn,*.f77,*.f90,*.f95,*.f03,*.f08  setf fortran
строка 714: 
строка 715: " Framescript
строка 716: au BufNewFile,BufRead *.fsl^I^I^Isetf framescript
строка 717: 
строка 718: " FStab
строка 719: au BufNewFile,BufRead fstab,mtab^I^Isetf fstab
строка 720: 
строка 721: " GDB command files
строка 722: au BufNewFile,BufRead .gdbinit^I^I^Isetf gdb
строка 723: 
строка 724: " GDMO
строка 725: au BufNewFile,BufRead *.mo,*.gdmo^I^Isetf gdmo
строка 726: 
строка 727: " Gedcom
строка 728: au BufNewFile,BufRead *.ged,lltxxxxx.txt^Isetf gedcom
строка 729: 
строка 730: " Git
строка 731: au BufNewFile,BufRead *.git/COMMIT_EDITMSG setf gitcommit
строка 732: au BufNewFile,BufRead *.git/config,.gitconfig,.gitmodules setf gitconfig
строка 733: au BufNewFile,BufRead git-rebase-todo      setf gitrebase
строка 737: au BufNewFile,BufRead .msg.[0-9]* if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
строка 741: au BufNewFile,BufRead *.git/** if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
строка 742: 
строка 743: " Gkrellmrc
строка 744: au BufNewFile,BufRead gkrellmrc,gkrellmrc_?^Isetf gkrellmrc
строка 745: 
строка 746: " GP scripts (2.0 and onward)
строка 747: au BufNewFile,BufRead *.gp,.gprc^I^Isetf gp
строка 748: 
строка 749: " GPG
строка 750: au BufNewFile,BufRead */.gnupg/options^I^Isetf gpg
строка 751: au BufNewFile,BufRead */.gnupg/gpg.conf^I^Isetf gpg
строка 752: au BufNewFile,BufRead */usr/**/gnupg/options.skel setf gpg
строка 753: 
строка 754: " gnash(1) configuration files
строка 755: au BufNewFile,BufRead gnashrc,.gnashrc,gnashpluginrc,.gnashpluginrc setf gnash
строка 756: 
строка 757: " Gitolite
строка 758: au BufNewFile,BufRead gitolite.conf^I^Isetf gitolite
строка 759: au BufNewFile,BufRead */gitolite-admin/conf/*^Icall s:StarSetf('gitolite')
строка 760: au BufNewFile,BufRead {,.}gitolite.rc,example.gitolite.rc ^Isetf perl
строка 761: 
строка 762: " Gnuplot scripts
строка 763: au BufNewFile,BufRead *.gpi^I^I^Isetf gnuplot
строка 764: 
строка 765: " GrADS scripts
строка 766: au BufNewFile,BufRead *.gs^I^I^Isetf grads
строка 767: 
строка 768: " Gretl
строка 769: au BufNewFile,BufRead *.gretl^I^I^Isetf gretl
строка 770: 
строка 771: " Groovy
строка 772: au BufNewFile,BufRead *.groovy^I^I^Isetf groovy
строка 773: 
строка 774: " GNU Server Pages
строка 775: au BufNewFile,BufRead *.gsp^I^I^Isetf gsp
строка 776: 
строка 777: " Group file
строка 778: au BufNewFile,BufRead */etc/group,*/etc/group-,*/etc/group.edit,*/etc/gshadow,*/etc/gshadow-,*/etc/gshadow.edit,*/var/backups/group.bak,*/var/backups/gshadow.bak  setf group
строка 779: 
строка 780: " GTK RC
строка 781: au BufNewFile,BufRead .gtkrc,gtkrc^I^Isetf gtkrc
строка 782: 
строка 783: " Haml
строка 784: au BufNewFile,BufRead *.haml^I^I^Isetf haml
строка 785: 
строка 786: " Hamster Classic | Playground files
строка 787: au BufNewFile,BufRead *.hsc,*.hsm^I^Isetf hamster
строка 788: 
строка 789: " Haskell
строка 790: au BufNewFile,BufRead *.hs,*.hs-boot^I^Isetf haskell
строка 791: au BufNewFile,BufRead *.lhs^I^I^Isetf lhaskell
строка 792: au BufNewFile,BufRead *.chs^I^I^Isetf chaskell
строка 793: 
строка 794: " Haste
строка 795: au BufNewFile,BufRead *.ht^I^I^Isetf haste
строка 796: au BufNewFile,BufRead *.htpp^I^I^Isetf hastepreproc
строка 797: 
строка 798: " Hercules
строка 799: au BufNewFile,BufRead *.vc,*.ev,*.rs,*.sum,*.errsum^Isetf hercules
строка 800: 
строка 801: " HEX (Intel)
строка 802: au BufNewFile,BufRead *.hex,*.h32^I^Isetf hex
строка 803: 
строка 804: " Tilde (must be before HTML)
строка 805: au BufNewFile,BufRead *.t.html^I^I^Isetf tilde
строка 806: 
строка 807: " HTML (.shtml and .stm for server side)
строка 808: au BufNewFile,BufRead *.html,*.htm,*.shtml,*.stm  call s:FThtml()
строка 809: 
строка 810: " Distinguish between HTML, XHTML and Django
строка 811: func! s:FThtml()
строка 826: 
строка 827: " HTML with Ruby - eRuby
строка 828: au BufNewFile,BufRead *.erb,*.rhtml^I^Isetf eruby
строка 829: 
строка 830: " HTML with M4
строка 831: au BufNewFile,BufRead *.html.m4^I^I^Isetf htmlm4
строка 832: 
строка 833: " HTML Cheetah template
строка 834: au BufNewFile,BufRead *.tmpl^I^I^Isetf htmlcheetah
строка 835: 
строка 836: " Host config
строка 837: au BufNewFile,BufRead */etc/host.conf^I^Isetf hostconf
строка 838: 
строка 839: " Hosts access
строка 840: au BufNewFile,BufRead */etc/hosts.allow,*/etc/hosts.deny  setf hostsaccess
строка 841: 
строка 842: " Hyper Builder
строка 843: au BufNewFile,BufRead *.hb^I^I^Isetf hb
строка 844: 
строка 845: " Icon
строка 846: au BufNewFile,BufRead *.icn^I^I^Isetf icon
строка 847: 
строка 848: " IDL (Interface Description Language)
строка 849: au BufNewFile,BufRead *.idl^I^I^Icall s:FTidl()
строка 850: 
строка 851: " Distinguish between standard IDL and MS-IDL
строка 852: func! s:FTidl()
строка 863: 
строка 864: " Microsoft IDL (Interface Description Language)  Also *.idl
строка 865: " MOF = WMI (Windows Management Instrumentation) Managed Object Format
строка 866: au BufNewFile,BufRead *.odl,*.mof^I^Isetf msidl
строка 867: 
строка 868: " Icewm menu
строка 869: au BufNewFile,BufRead */.icewm/menu^I^Isetf icemenu
строка 870: 
строка 871: " Indent profile (must come before IDL *.pro!)
строка 872: au BufNewFile,BufRead .indent.pro^I^Isetf indent
строка 873: au BufNewFile,BufRead indent.pro^I^Icall s:ProtoCheck('indent')
строка 874: 
строка 875: " IDL (Interactive Data Language)
строка 876: au BufNewFile,BufRead *.pro^I^I^Icall s:ProtoCheck('idlang')
строка 877: 
строка 878: " Distinguish between "default" and Cproto prototype file. */
строка 879: func! s:ProtoCheck(default)
строка 891: 
строка 892: 
строка 893: " Indent RC
строка 894: au BufNewFile,BufRead indentrc^I^I^Isetf indent
строка 895: 
строка 896: " Inform
строка 897: au BufNewFile,BufRead *.inf,*.INF^I^Isetf inform
строка 898: 
строка 899: " Initng
строка 900: au BufNewFile,BufRead */etc/initng/**/*.i,*.ii^Isetf initng
строка 901: 
строка 902: " Ipfilter
строка 903: au BufNewFile,BufRead ipf.conf,ipf6.conf,ipf.rules^Isetf ipfilter
строка 904: 
строка 905: " Informix 4GL (source - canonical, include file, I4GL+M4 preproc.)
строка 906: au BufNewFile,BufRead *.4gl,*.4gh,*.m4gl^Isetf fgl
строка 907: 
строка 908: " .INI file for MSDOS
строка 909: au BufNewFile,BufRead *.ini^I^I^Isetf dosini
строка 910: 
строка 911: " SysV Inittab
строка 912: au BufNewFile,BufRead inittab^I^I^Isetf inittab
строка 913: 
строка 914: " Inno Setup
строка 915: au BufNewFile,BufRead *.iss^I^I^Isetf iss
строка 916: 
строка 917: " JAL
строка 918: au BufNewFile,BufRead *.jal,*.JAL^I^Isetf jal
строка 919: 
строка 920: " Jam
строка 921: au BufNewFile,BufRead *.jpl,*.jpr^I^Isetf jam
строка 922: 
строка 923: " Java
строка 924: au BufNewFile,BufRead *.java,*.jav^I^Isetf java
строка 925: 
строка 926: " JavaCC
строка 927: au BufNewFile,BufRead *.jj,*.jjt^I^Isetf javacc
строка 928: 
строка 929: " JavaScript, ECMAScript
строка 930: au BufNewFile,BufRead *.js,*.javascript,*.es,*.jsx,*.json   setf javascript
строка 931: 
строка 932: " Java Server Pages
строка 933: au BufNewFile,BufRead *.jsp^I^I^Isetf jsp
строка 934: 
строка 935: " Java Properties resource file (note: doesn't catch font.properties.pl)
строка 936: au BufNewFile,BufRead *.properties,*.properties_??,*.properties_??_??^Isetf jproperties
строка 937: au BufNewFile,BufRead *.properties_??_??_*^Icall s:StarSetf('jproperties')
строка 938: 
строка 939: " Jess
строка 940: au BufNewFile,BufRead *.clp^I^I^Isetf jess
строка 941: 
строка 942: " Jgraph
строка 943: au BufNewFile,BufRead *.jgr^I^I^Isetf jgraph
строка 944: 
строка 945: " Jovial
строка 946: au BufNewFile,BufRead *.jov,*.j73,*.jovial^Isetf jovial
строка 947: 
строка 948: " Kixtart
строка 949: au BufNewFile,BufRead *.kix^I^I^Isetf kix
строка 950: 
строка 951: " Kimwitu[++]
строка 952: au BufNewFile,BufRead *.k^I^I^Isetf kwt
строка 953: 
строка 954: " KDE script
строка 955: au BufNewFile,BufRead *.ks^I^I^Isetf kscript
строка 956: 
строка 957: " Kconfig
строка 958: au BufNewFile,BufRead Kconfig,Kconfig.debug^Isetf kconfig
строка 959: 
строка 960: " Lace (ISE)
строка 961: au BufNewFile,BufRead *.ace,*.ACE^I^Isetf lace
строка 962: 
строка 963: " Latte
строка 964: au BufNewFile,BufRead *.latte,*.lte^I^Isetf latte
строка 965: 
строка 966: " Limits
строка 967: au BufNewFile,BufRead */etc/limits,*/etc/*limits.conf,*/etc/*limits.d/*.conf^Isetf limits
строка 968: 
строка 969: " LambdaProlog (*.mod too, see Modsim)
строка 970: au BufNewFile,BufRead *.sig^I^I^Isetf lprolog
строка 971: 
строка 972: " LDAP LDIF
строка 973: au BufNewFile,BufRead *.ldif^I^I^Isetf ldif
строка 974: 
строка 975: " Ld loader
строка 976: au BufNewFile,BufRead *.ld^I^I^Isetf ld
строка 977: 
строка 978: " Lex
строка 979: au BufNewFile,BufRead *.lex,*.l^I^I^Isetf lex
строка 980: 
строка 981: " Libao
строка 982: au BufNewFile,BufRead */etc/libao.conf,*/.libao^Isetf libao
строка 983: 
строка 984: " Libsensors
строка 985: au BufNewFile,BufRead */etc/sensors.conf,*/etc/sensors3.conf^Isetf sensors
строка 986: 
строка 987: " LFTP
строка 988: au BufNewFile,BufRead lftp.conf,.lftprc,*lftp/rc^Isetf lftp
строка 989: 
строка 990: " Lifelines (or Lex for C++!)
строка 991: au BufNewFile,BufRead *.ll^I^I^Isetf lifelines
строка 992: 
строка 993: " Lilo: Linux loader
строка 994: au BufNewFile,BufRead lilo.conf^I^I^Isetf lilo
строка 995: 
строка 996: " Lisp (*.el = ELisp, *.cl = Common Lisp, *.jl = librep Lisp)
строка 997: if has("fname_case")
строка 998:   au BufNewFile,BufRead *.lsp,*.lisp,*.el,*.cl,*.jl,*.L,.emacs,.sawfishrc setf lisp
строка 999: else
строка 1000:   au BufNewFile,BufRead *.lsp,*.lisp,*.el,*.cl,*.jl,.emacs,.sawfishrc setf lisp
строка 1001: endif
строка 1002: 
строка 1003: " SBCL implementation of Common Lisp
строка 1004: au BufNewFile,BufRead sbclrc,.sbclrc^I^Isetf lisp
строка 1005: 
строка 1006: " Liquid
строка 1007: au BufNewFile,BufRead *.liquid^I^I^Isetf liquid
строка 1008: 
строка 1009: " Lite
строка 1010: au BufNewFile,BufRead *.lite,*.lt^I^Isetf lite
строка 1011: 
строка 1012: " LiteStep RC files
строка 1013: au BufNewFile,BufRead */LiteStep/*/*.rc^I^Isetf litestep
строка 1014: 
строка 1015: " Login access
строка 1016: au BufNewFile,BufRead */etc/login.access^Isetf loginaccess
строка 1017: 
строка 1018: " Login defs
строка 1019: au BufNewFile,BufRead */etc/login.defs^I^Isetf logindefs
строка 1020: 
строка 1021: " Logtalk
строка 1022: au BufNewFile,BufRead *.lgt^I^I^Isetf logtalk
строка 1023: 
строка 1024: " LOTOS
строка 1025: au BufNewFile,BufRead *.lot,*.lotos^I^Isetf lotos
строка 1026: 
строка 1027: " Lout (also: *.lt)
строка 1028: au BufNewFile,BufRead *.lou,*.lout^I^Isetf lout
строка 1029: 
строка 1030: " Lua
строка 1031: au BufNewFile,BufRead *.lua^I^I^Isetf lua
строка 1032: 
строка 1033: " Linden Scripting Language (Second Life)
строка 1034: au BufNewFile,BufRead *.lsl^I^I^Isetf lsl
строка 1035: 
строка 1036: " Lynx style file (or LotusScript!)
строка 1037: au BufNewFile,BufRead *.lss^I^I^Isetf lss
строка 1038: 
строка 1039: " M4
строка 1041: au BufNewFile,BufRead *.m4 if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
строка 1042: 
строка 1043: " MaGic Point
строка 1044: au BufNewFile,BufRead *.mgp^I^I^Isetf mgp
строка 1045: 
строка 1046: " Mail (for Elm, trn, mutt, muttng, rn, slrn)
строка 1047: au BufNewFile,BufRead snd.\d\+,.letter,.letter.\d\+,.followup,.article,.article.\d\+,pico.\d\+,mutt{ng,}-*-\w\+,mutt[[:alnum:]_-]\{6\},ae\d\+.txt,/tmp/SLRN[0-9A-Z.]\+,*.eml setf mail
строка 1048: 
строка 1049: " Mail aliases
строка 1050: au BufNewFile,BufRead */etc/mail/aliases,*/etc/aliases^Isetf mailaliases
строка 1051: 
строка 1052: " Mailcap configuration file
строка 1053: au BufNewFile,BufRead .mailcap,mailcap^I^Isetf mailcap
строка 1054: 
строка 1055: " Makefile
строка 1056: au BufNewFile,BufRead *[mM]akefile,*.mk,*.mak,*.dsp setf make
строка 1057: 
строка 1058: " MakeIndex
строка 1059: au BufNewFile,BufRead *.ist,*.mst^I^Isetf ist
строка 1060: 
строка 1061: " Manpage
строка 1062: au BufNewFile,BufRead *.man^I^I^Isetf man
строка 1063: 
строка 1064: " Man config
строка 1065: au BufNewFile,BufRead */etc/man.conf,man.config^Isetf manconf
строка 1066: 
строка 1067: " Maple V
строка 1068: au BufNewFile,BufRead *.mv,*.mpl,*.mws^I^Isetf maple
строка 1069: 
строка 1070: " Map (UMN mapserver config file)
строка 1071: au BufNewFile,BufRead *.map^I^I^Isetf map
строка 1072: 
строка 1073: " Markdown
строка 1074: au BufNewFile,BufRead *.markdown,*.mdown,*.mkd,*.mkdn,README.md  setf markdown
строка 1075: 
строка 1076: " Mason
строка 1077: au BufNewFile,BufRead *.mason,*.mhtml^I^Isetf mason
строка 1078: 
строка 1079: " Matlab or Objective C
строка 1080: au BufNewFile,BufRead *.m^I^I^Icall s:FTm()
строка 1081: 
строка 1082: func! s:FTm()
строка 1106: 
строка 1107: " Mathematica notebook
строка 1108: au BufNewFile,BufRead *.nb^I^I^Isetf mma
строка 1109: 
строка 1110: " Maya Extension Language
строка 1111: au BufNewFile,BufRead *.mel^I^I^Isetf mel
строка 1112: 
строка 1113: " Mercurial config (looks like generic config file)
строка 1114: au BufNewFile,BufRead *.hgrc,*hgrc^I^Isetf cfg
строка 1115: 
строка 1116: " Messages (logs mostly)
строка 1117: au BufNewFile,BufRead */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*} setf messages
строка 1118: 
строка 1119: " Metafont
строка 1120: au BufNewFile,BufRead *.mf^I^I^Isetf mf
строка 1121: 
строка 1122: " MetaPost
строка 1123: au BufNewFile,BufRead *.mp^I^I^Isetf mp
строка 1124: 
строка 1125: " MGL
строка 1126: au BufNewFile,BufRead *.mgl^I^I^Isetf mgl
строка 1127: 
строка 1128: " MMIX or VMS makefile
строка 1129: au BufNewFile,BufRead *.mms^I^I^Icall s:FTmms()
строка 1130: 
строка 1131: " Symbian meta-makefile definition (MMP)
строка 1132: au BufNewFile,BufRead *.mmp^I^I^Isetf mmp
строка 1133: 
строка 1134: func! s:FTmms()
строка 1150: 
строка 1151: 
строка 1152: " Modsim III (or LambdaProlog)
строка 1158: au BufNewFile,BufRead *.mod if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
строка 1159: 
строка 1160: " Modula 2
строка 1161: au BufNewFile,BufRead *.m2,*.DEF,*.MOD,*.md,*.mi setf modula2
строка 1162: 
строка 1163: " Modula 3 (.m3, .i3, .mg, .ig)
строка 1164: au BufNewFile,BufRead *.[mi][3g]^I^Isetf modula3
строка 1165: 
строка 1166: " Monk
строка 1167: au BufNewFile,BufRead *.isc,*.monk,*.ssc,*.tsc^Isetf monk
строка 1168: 
строка 1169: " MOO
строка 1170: au BufNewFile,BufRead *.moo^I^I^Isetf moo
строка 1171: 
строка 1172: " Modconf
строка 1173: au BufNewFile,BufRead */etc/modules.conf,*/etc/modules,*/etc/conf.modules setf modconf
строка 1174: 
строка 1175: " Mplayer config
строка 1176: au BufNewFile,BufRead mplayer.conf,*/.mplayer/config^Isetf mplayerconf
строка 1177: 
строка 1178: " Moterola S record
строка 1179: au BufNewFile,BufRead *.s19,*.s28,*.s37^I^Isetf srec
строка 1180: 
строка 1181: " Mrxvtrc
строка 1182: au BufNewFile,BufRead mrxvtrc,.mrxvtrc^I^Isetf mrxvtrc
строка 1183: 
строка 1184: " Msql
строка 1185: au BufNewFile,BufRead *.msql^I^I^Isetf msql
строка 1186: 
строка 1187: " Mysql
строка 1188: au BufNewFile,BufRead *.mysql^I^I^Isetf mysql
строка 1189: 
строка 1190: " Mutt setup files (must be before catch *.rc)
строка 1191: au BufNewFile,BufRead */etc/Muttrc.d/*^I^Icall s:StarSetf('muttrc')
строка 1192: 
строка 1193: " M$ Resource files
строка 1194: au BufNewFile,BufRead *.rc^I^I^Isetf rc
строка 1195: 
строка 1196: " MuPAD source
строка 1197: au BufRead,BufNewFile *.mu^I^I^Isetf mupad
строка 1198: 
строка 1199: " Mush
строка 1200: au BufNewFile,BufRead *.mush^I^I^Isetf mush
строка 1201: 
строка 1202: " Mutt setup file (also for Muttng)
строка 1203: au BufNewFile,BufRead Mutt{ng,}rc^I^Isetf muttrc
строка 1204: 
строка 1205: " Nano
строка 1206: au BufNewFile,BufRead */etc/nanorc,.nanorc^Isetf nanorc
строка 1207: 
строка 1208: " Nastran input/DMAP
строка 1209: "au BufNewFile,BufRead *.dat^I^I^Isetf nastran
строка 1210: 
строка 1211: " Natural
строка 1212: au BufNewFile,BufRead *.NS[ACGLMNPS]^I^Isetf natural
строка 1213: 
строка 1214: " Netrc
строка 1215: au BufNewFile,BufRead .netrc^I^I^Isetf netrc
строка 1216: 
строка 1217: " Novell netware batch files
строка 1218: au BufNewFile,BufRead *.ncf^I^I^Isetf ncf
строка 1219: 
строка 1220: " Nroff/Troff (*.ms and *.t are checked below)
строка 1224: au BufNewFile,BufRead *.me if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
строка 1225: au BufNewFile,BufRead *.tr,*.nr,*.roff,*.tmac,*.mom^Isetf nroff
строка 1226: au BufNewFile,BufRead *.[1-9]^I^I^Icall s:FTnroff()
строка 1227: 
строка 1228: " This function checks if one of the first five lines start with a dot.  In
строка 1229: " that case it is probably an nroff file: 'filetype' is set and 1 is returned.
строка 1230: func! s:FTnroff()
строка 1237: 
строка 1238: " Nroff or Objective C++
строка 1239: au BufNewFile,BufRead *.mm^I^I^Icall s:FTmm()
строка 1240: 
строка 1241: func! s:FTmm()
строка 1253: 
строка 1254: " Not Quite C
строка 1255: au BufNewFile,BufRead *.nqc^I^I^Isetf nqc
строка 1256: 
строка 1257: " NSIS
строка 1258: au BufNewFile,BufRead *.nsi^I^I^Isetf nsis
строка 1259: 
строка 1260: " OCAML
строка 1261: au BufNewFile,BufRead *.ml,*.mli,*.mll,*.mly^Isetf ocaml
строка 1262: 
строка 1263: " Occam
строка 1264: au BufNewFile,BufRead *.occ^I^I^Isetf occam
строка 1265: 
строка 1266: " Omnimark
строка 1267: au BufNewFile,BufRead *.xom,*.xin^I^Isetf omnimark
строка 1268: 
строка 1269: " OpenROAD
строка 1270: au BufNewFile,BufRead *.or^I^I^Isetf openroad
строка 1271: 
строка 1272: " OPL
строка 1273: au BufNewFile,BufRead *.[Oo][Pp][Ll]^I^Isetf opl
строка 1274: 
строка 1275: " Oracle config file
строка 1276: au BufNewFile,BufRead *.ora^I^I^Isetf ora
строка 1277: 
строка 1278: " Packet filter conf
строка 1279: au BufNewFile,BufRead pf.conf^I^I^Isetf pf
строка 1280: 
строка 1281: " Pam conf
строка 1282: au BufNewFile,BufRead */etc/pam.conf^I^Isetf pamconf
строка 1283: 
строка 1284: " PApp
строка 1285: au BufNewFile,BufRead *.papp,*.pxml,*.pxsl^Isetf papp
строка 1286: 
строка 1287: " Password file
строка 1288: au BufNewFile,BufRead */etc/passwd,*/etc/passwd-,*/etc/passwd.edit,*/etc/shadow,*/etc/shadow-,*/etc/shadow.edit,*/var/backups/passwd.bak,*/var/backups/shadow.bak setf passwd
строка 1289: 
строка 1290: " Pascal (also *.p)
строка 1291: au BufNewFile,BufRead *.pas^I^I^Isetf pascal
строка 1292: 
строка 1293: " Delphi project file
строка 1294: au BufNewFile,BufRead *.dpr^I^I^Isetf pascal
строка 1295: 
строка 1296: " PDF
строка 1297: au BufNewFile,BufRead *.pdf^I^I^Isetf pdf
строка 1298: 
строка 1299: " Perl
строка 1300: if has("fname_case")
строка 1301:   au BufNewFile,BufRead *.pl,*.PL^I^Icall s:FTpl()
строка 1302: else
строка 1303:   au BufNewFile,BufRead *.pl^I^I^Icall s:FTpl()
строка 1304: endif
строка 1305: au BufNewFile,BufRead *.plx,*.al^I^Isetf perl
строка 1306: au BufNewFile,BufRead *.p6,*.pm6^I^Isetf perl6
строка 1307: 
строка 1308: func! s:FTpl()
строка 1322: 
строка 1323: " Perl, XPM or XPM2
строка 1331: au BufNewFile,BufRead *.pm if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
строка 1332: 
строка 1333: " Perl POD
строка 1334: au BufNewFile,BufRead *.pod^I^I^Isetf pod
строка 1335: 
строка 1336: " Php, php3, php4, etc.
строка 1337: " Also Phtml (was used for PHP 2 in the past)
строка 1338: " Also .ctp for Cake template file
строка 1339: au BufNewFile,BufRead *.php,*.php\d,*.phtml,*.ctp^Isetf php
строка 1340: 
строка 1341: " Pike
строка 1342: au BufNewFile,BufRead *.pike,*.lpc,*.ulpc,*.pmod setf pike
строка 1343: 
строка 1344: " Pinfo config
строка 1345: au BufNewFile,BufRead */etc/pinforc,*/.pinforc^Isetf pinfo
строка 1346: 
строка 1347: " Palm Resource compiler
строка 1348: au BufNewFile,BufRead *.rcp^I^I^Isetf pilrc
строка 1349: 
строка 1350: " Pine config
строка 1351: au BufNewFile,BufRead .pinerc,pinerc,.pinercex,pinercex^I^Isetf pine
строка 1352: 
строка 1353: " PL/M (also: *.inp)
строка 1354: au BufNewFile,BufRead *.plm,*.p36,*.pac^I^Isetf plm
строка 1355: 
строка 1356: " PL/SQL
строка 1357: au BufNewFile,BufRead *.pls,*.plsql^I^Isetf plsql
строка 1358: 
строка 1359: " PLP
строка 1360: au BufNewFile,BufRead *.plp^I^I^Isetf plp
строка 1361: 
строка 1362: " PO and PO template (GNU gettext)
строка 1363: au BufNewFile,BufRead *.po,*.pot^I^Isetf po
строка 1364: 
строка 1365: " Postfix main config
строка 1366: au BufNewFile,BufRead main.cf^I^I^Isetf pfmain
строка 1367: 
строка 1368: " PostScript (+ font files, encapsulated PostScript, Adobe Illustrator)
строка 1369: au BufNewFile,BufRead *.ps,*.pfa,*.afm,*.eps,*.epsf,*.epsi,*.ai^I  setf postscr
строка 1370: 
строка 1371: " PostScript Printer Description
строка 1372: au BufNewFile,BufRead *.ppd^I^I^Isetf ppd
строка 1373: 
строка 1374: " Povray
строка 1375: au BufNewFile,BufRead *.pov^I^I^Isetf pov
строка 1376: 
строка 1377: " Povray configuration
строка 1378: au BufNewFile,BufRead .povrayrc^I^I^Isetf povini
строка 1379: 
строка 1380: " Povray, PHP or assembly
строка 1381: au BufNewFile,BufRead *.inc^I^I^Icall s:FTinc()
строка 1382: 
строка 1383: func! s:FTinc()
строка 1404: 
строка 1405: " Printcap and Termcap
строка 1407: au BufNewFile,BufRead *printcap let b:ptcap_type = "print" | setf ptcap
строка 1409: au BufNewFile,BufRead *termcap let b:ptcap_type = "term" | setf ptcap
строка 1410: 
строка 1411: " PCCTS / ANTRL
строка 1412: "au BufNewFile,BufRead *.g^I^I^Isetf antrl
строка 1413: au BufNewFile,BufRead *.g^I^I^Isetf pccts
строка 1414: 
строка 1415: " PPWizard
строка 1416: au BufNewFile,BufRead *.it,*.ih^I^I^Isetf ppwiz
строка 1417: 
строка 1418: " Obj 3D file format
строка 1419: " TODO: is there a way to avoid MS-Windows Object files?
строка 1420: au BufNewFile,BufRead *.obj^I^I^Isetf obj
строка 1421: 
строка 1422: " Oracle Pro*C/C++
строка 1423: au BufNewFile,BufRead *.pc^I^I^Isetf proc
строка 1424: 
строка 1425: " Privoxy actions file
строка 1426: au BufNewFile,BufRead *.action^I^I^Isetf privoxy
строка 1427: 
строка 1428: " Procmail
строка 1429: au BufNewFile,BufRead .procmail,.procmailrc^Isetf procmail
строка 1430: 
строка 1431: " Progress or CWEB
строка 1432: au BufNewFile,BufRead *.w^I^I^Icall s:FTprogress_cweb()
строка 1433: 
строка 1434: func! s:FTprogress_cweb()
строка 1445: 
строка 1446: " Progress or assembly
строка 1447: au BufNewFile,BufRead *.i^I^I^Icall s:FTprogress_asm()
строка 1448: 
строка 1449: func! s:FTprogress_asm()
строка 1471: 
строка 1472: " Progress or Pascal
строка 1473: au BufNewFile,BufRead *.p^I^I^Icall s:FTprogress_pascal()
строка 1474: 
строка 1475: func! s:FTprogress_pascal()
строка 1499: 
строка 1500: 
строка 1501: " Software Distributor Product Specification File (POSIX 1387.2-1995)
строка 1502: au BufNewFile,BufRead *.psf^I^I^Isetf psf
строка 1506: au BufNewFile,BufRead INDEX,INFO if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
строка 1507: 
строка 1508: " Prolog
строка 1509: au BufNewFile,BufRead *.pdb^I^I^Isetf prolog
строка 1510: 
строка 1511: " Promela
строка 1512: au BufNewFile,BufRead *.pml^I^I^Isetf promela
строка 1513: 
строка 1514: " Protocols
строка 1515: au BufNewFile,BufRead */etc/protocols^I^Isetf protocols
строка 1516: 
строка 1517: " Pyrex
строка 1518: au BufNewFile,BufRead *.pyx,*.pxd^I^Isetf pyrex
строка 1519: 
строка 1520: " Python
строка 1521: au BufNewFile,BufRead *.py,*.pyw^I^Isetf python
строка 1522: 
строка 1523: " Quixote (Python-based web framework)
строка 1524: au BufNewFile,BufRead *.ptl^I^I^Isetf python
строка 1525: 
строка 1526: " Radiance
строка 1527: au BufNewFile,BufRead *.rad,*.mat^I^Isetf radiance
строка 1528: 
строка 1529: " Ratpoison config/command files
строка 1530: au BufNewFile,BufRead .ratpoisonrc,ratpoisonrc^Isetf ratpoison
строка 1531: 
строка 1532: " RCS file
строка 1533: au BufNewFile,BufRead *\,v^I^I^Isetf rcs
строка 1534: 
строка 1535: " Readline
строка 1536: au BufNewFile,BufRead .inputrc,inputrc^I^Isetf readline
строка 1537: 
строка 1538: " Registry for MS-Windows
строка 1540: au BufNewFile,BufRead *.reg if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
строка 1541: 
строка 1542: " Renderman Interface Bytestream
строка 1543: au BufNewFile,BufRead *.rib^I^I^Isetf rib
строка 1544: 
строка 1545: " Rexx
строка 1546: au BufNewFile,BufRead *.rexx,*.rex,*.jrexx,*.rxj,*.orx^Isetf rexx
строка 1547: 
строка 1548: " R (Splus)
строка 1549: if has("fname_case")
строка 1550:   au BufNewFile,BufRead *.s,*.S^I^I^Isetf r
строка 1551: else
строка 1552:   au BufNewFile,BufRead *.s^I^I^Isetf r
строка 1553: endif
строка 1554: 
строка 1555: " R Help file
строка 1556: if has("fname_case")
строка 1557:   au BufNewFile,BufRead *.rd,*.Rd^I^Isetf rhelp
строка 1558: else
строка 1559:   au BufNewFile,BufRead *.rd^I^I^Isetf rhelp
строка 1560: endif
строка 1561: 
строка 1562: " R noweb file
строка 1563: if has("fname_case")
строка 1564:   au BufNewFile,BufRead *.Rnw,*.rnw,*.Snw,*.snw^I^Isetf rnoweb
строка 1565: else
строка 1566:   au BufNewFile,BufRead *.rnw,*.snw^I^I^Isetf rnoweb
строка 1567: endif
строка 1568: 
строка 1569: " Rexx, Rebol or R
строка 1570: au BufNewFile,BufRead *.r,*.R^I^I^Icall s:FTr()
строка 1571: 
строка 1572: func! s:FTr()
строка 1604: 
строка 1605: " Remind
строка 1606: au BufNewFile,BufRead .reminders,*.remind,*.rem^I^Isetf remind
строка 1607: 
строка 1608: " Resolv.conf
строка 1609: au BufNewFile,BufRead resolv.conf^I^Isetf resolv
строка 1610: 
строка 1611: " Relax NG Compact
строка 1612: au BufNewFile,BufRead *.rnc^I^I^Isetf rnc
строка 1613: 
строка 1614: " RPL/2
строка 1615: au BufNewFile,BufRead *.rpl^I^I^Isetf rpl
строка 1616: 
строка 1617: " Robots.txt
строка 1618: au BufNewFile,BufRead robots.txt^I^Isetf robots
строка 1619: 
строка 1620: " Rpcgen
строка 1621: au BufNewFile,BufRead *.x^I^I^Isetf rpcgen
строка 1622: 
строка 1623: " reStructuredText Documentation Format
строка 1624: au BufNewFile,BufRead *.rst^I^I^Isetf rst
строка 1625: 
строка 1626: " RTF
строка 1627: au BufNewFile,BufRead *.rtf^I^I^Isetf rtf
строка 1628: 
строка 1629: " Interactive Ruby shell
строка 1630: au BufNewFile,BufRead .irbrc,irbrc^I^Isetf ruby
строка 1631: 
строка 1632: " Ruby
строка 1633: au BufNewFile,BufRead *.rb,*.rbw^I^Isetf ruby
строка 1634: 
строка 1635: " RubyGems
строка 1636: au BufNewFile,BufRead *.gemspec^I^I^Isetf ruby
строка 1637: 
строка 1638: " Rackup
строка 1639: au BufNewFile,BufRead *.ru^I^I^Isetf ruby
строка 1640: 
строка 1641: " Bundler
строка 1642: au BufNewFile,BufRead Gemfile^I^I^Isetf ruby
строка 1643: 
строка 1644: " Ruby on Rails
строка 1645: au BufNewFile,BufRead *.builder,*.rxml,*.rjs^Isetf ruby
строка 1646: 
строка 1647: " Rantfile and Rakefile is like Ruby
строка 1648: au BufNewFile,BufRead [rR]antfile,*.rant,[rR]akefile,*.rake^Isetf ruby
строка 1649: 
строка 1650: " S-lang (or shader language, or SmallLisp)
строка 1651: au BufNewFile,BufRead *.sl^I^I^Isetf slang
строка 1652: 
строка 1653: " Samba config
строка 1654: au BufNewFile,BufRead smb.conf^I^I^Isetf samba
строка 1655: 
строка 1656: " SAS script
строка 1657: au BufNewFile,BufRead *.sas^I^I^Isetf sas
строка 1658: 
строка 1659: " Sass
строка 1660: au BufNewFile,BufRead *.sass^I^I^Isetf sass
строка 1661: 
строка 1662: " Sather
строка 1663: au BufNewFile,BufRead *.sa^I^I^Isetf sather
строка 1664: 
строка 1665: " Scilab
строка 1666: au BufNewFile,BufRead *.sci,*.sce^I^Isetf scilab
строка 1667: 
строка 1668: " SCSS
строка 1669: au BufNewFile,BufRead *.scss^I^I^Isetf scss
строка 1670: 
строка 1671: " SD: Streaming Descriptors
строка 1672: au BufNewFile,BufRead *.sd^I^I^Isetf sd
строка 1673: 
строка 1674: " SDL
строка 1675: au BufNewFile,BufRead *.sdl,*.pr^I^Isetf sdl
строка 1676: 
строка 1677: " sed
строка 1678: au BufNewFile,BufRead *.sed^I^I^Isetf sed
строка 1679: 
строка 1680: " Sieve (RFC 3028)
строка 1681: au BufNewFile,BufRead *.siv^I^I^Isetf sieve
строка 1682: 
строка 1683: " Sendmail
строка 1684: au BufNewFile,BufRead sendmail.cf^I^Isetf sm
строка 1685: 
строка 1686: " Sendmail .mc files are actually m4.  Could also be MS Message text file.
строка 1687: au BufNewFile,BufRead *.mc^I^I^Icall s:McSetf()
строка 1688: 
строка 1689: func! s:McSetf()
строка 1704: 
строка 1705: " Services
строка 1706: au BufNewFile,BufRead */etc/services^I^Isetf services
строка 1707: 
строка 1708: " Service Location config
строка 1709: au BufNewFile,BufRead */etc/slp.conf^I^Isetf slpconf
строка 1710: 
строка 1711: " Service Location registration
строка 1712: au BufNewFile,BufRead */etc/slp.reg^I^Isetf slpreg
строка 1713: 
строка 1714: " Service Location SPI
строка 1715: au BufNewFile,BufRead */etc/slp.spi^I^Isetf slpspi
строка 1716: 
строка 1717: " Setserial config
строка 1718: au BufNewFile,BufRead */etc/serial.conf^I^Isetf setserial
строка 1719: 
строка 1720: " SGML
строка 1729: au BufNewFile,BufRead *.sgm,*.sgml if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type="sgml" |   setf docbk | else |   setf sgml | endif
строка 1730: 
строка 1731: " SGMLDECL
строка 1735: au BufNewFile,BufRead *.decl,*.dcl,*.dec if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
строка 1736: 
строка 1737: " SGML catalog file
строка 1738: au BufNewFile,BufRead catalog^I^I^Isetf catalog
строка 1739: au BufNewFile,BufRead sgml.catalog*^I^Icall s:StarSetf('catalog')
строка 1740: 
строка 1741: " Shell scripts (sh, ksh, bash, bash2, csh); Allow .profile_foo etc.
строка 1742: " Gentoo ebuilds are actually bash scripts
строка 1743: au BufNewFile,BufRead .bashrc*,bashrc,bash.bashrc,.bash_profile*,.bash_logout*,*.bash,*.ebuild call SetFileTypeSH("bash")
строка 1744: au BufNewFile,BufRead .kshrc*,*.ksh call SetFileTypeSH("ksh")
строка 1745: au BufNewFile,BufRead */etc/profile,.profile*,*.sh,*.env call SetFileTypeSH(getline(1))
строка 1746: 
строка 1747: " Also called from scripts.vim.
строка 1748: func! SetFileTypeSH(name)
строка 1787: 
строка 1788: " For shell-like file types, check for an "exec" command hidden in a comment,
строка 1789: " as used for Tcl.
строка 1790: " Also called from scripts.vim, thus can't be local to this script.
строка 1791: func! SetFileTypeShell(name)
строка 1810: 
строка 1811: " tcsh scripts
строка 1812: au BufNewFile,BufRead .tcshrc*,*.tcsh,tcsh.tcshrc,tcsh.login^Icall SetFileTypeShell("tcsh")
строка 1813: 
строка 1814: " csh scripts, but might also be tcsh scripts (on some systems csh is tcsh)
строка 1815: au BufNewFile,BufRead .login*,.cshrc*,csh.cshrc,csh.login,csh.logout,*.csh,.alias  call s:CSH()
строка 1816: 
строка 1817: func! s:CSH()
строка 1826: 
строка 1827: " Z-Shell script
строка 1828: au BufNewFile,BufRead .zprofile,*/etc/zprofile,.zfbfmarks  setf zsh
строка 1829: au BufNewFile,BufRead .zsh*,.zlog*,.zcompdump*  call s:StarSetf('zsh')
строка 1830: au BufNewFile,BufRead *.zsh^I^I^Isetf zsh
строка 1831: 
строка 1832: " Scheme
строка 1833: au BufNewFile,BufRead *.scm,*.ss^I^Isetf scheme
строка 1834: 
строка 1835: " Screen RC
строка 1836: au BufNewFile,BufRead .screenrc,screenrc^Isetf screen
строка 1837: 
строка 1838: " Simula
строка 1839: au BufNewFile,BufRead *.sim^I^I^Isetf simula
строка 1840: 
строка 1841: " SINDA
строка 1842: au BufNewFile,BufRead *.sin,*.s85^I^Isetf sinda
строка 1843: 
строка 1844: " SiSU
строка 1845: au BufNewFile,BufRead *.sst,*.ssm,*.ssi,*.-sst,*._sst setf sisu
строка 1846: au BufNewFile,BufRead *.sst.meta,*.-sst.meta,*._sst.meta setf sisu
строка 1847: 
строка 1848: " SKILL
строка 1849: au BufNewFile,BufRead *.il,*.ils,*.cdf^I^Isetf skill
строка 1850: 
строка 1851: " SLRN
строка 1852: au BufNewFile,BufRead .slrnrc^I^I^Isetf slrnrc
строка 1853: au BufNewFile,BufRead *.score^I^I^Isetf slrnsc
строка 1854: 
строка 1855: " Smalltalk (and TeX)
строка 1856: au BufNewFile,BufRead *.st^I^I^Isetf st
строка 1862: au BufNewFile,BufRead *.cls if getline(1) =~ '^%' |  setf tex | else |  setf st | endif
строка 1863: 
строка 1864: " Smarty templates
строка 1865: au BufNewFile,BufRead *.tpl^I^I^Isetf smarty
строка 1866: 
строка 1867: " SMIL or XML
строка 1873: au BufNewFile,BufRead *.smil if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
строка 1874: 
строка 1875: " SMIL or SNMP MIB file
строка 1881: au BufNewFile,BufRead *.smi if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
строка 1882: 
строка 1883: " SMITH
строка 1884: au BufNewFile,BufRead *.smt,*.smith^I^Isetf smith
строка 1885: 
строка 1886: " Snobol4 and spitbol
строка 1887: au BufNewFile,BufRead *.sno,*.spt^I^Isetf snobol4
строка 1888: 
строка 1889: " SNMP MIB files
строка 1890: au BufNewFile,BufRead *.mib,*.my^I^Isetf mib
строка 1891: 
строка 1892: " Snort Configuration
строка 1893: au BufNewFile,BufRead *.hog,snort.conf,vision.conf^Isetf hog
строка 1894: au BufNewFile,BufRead *.rules^I^I^Icall s:FTRules()
строка 1895: 
строка 1896: let s:ft_rules_udev_rules_pattern = '^\s*\cudev_rules\s*=\s*"\([^"]\{-1,}\)/*".*'
строка 1897: func! s:FTRules()
строка 1925: 
строка 1926: 
строка 1927: " Spec (Linux RPM)
строка 1928: au BufNewFile,BufRead *.spec^I^I^Isetf spec
строка 1929: 
строка 1930: " Speedup (AspenTech plant simulator)
строка 1931: au BufNewFile,BufRead *.speedup,*.spdata,*.spd^Isetf spup
строка 1932: 
строка 1933: " Slice
строка 1934: au BufNewFile,BufRead *.ice^I^I^Isetf slice
строка 1935: 
строка 1936: " Spice
строка 1937: au BufNewFile,BufRead *.sp,*.spice^I^Isetf spice
строка 1938: 
строка 1939: " Spyce
строка 1940: au BufNewFile,BufRead *.spy,*.spi^I^Isetf spyce
строка 1941: 
строка 1942: " Squid
строка 1943: au BufNewFile,BufRead squid.conf^I^Isetf squid
строка 1944: 
строка 1945: " SQL for Oracle Designer
строка 1946: au BufNewFile,BufRead *.tyb,*.typ,*.tyc,*.pkb,*.pks^Isetf sql
строка 1947: 
строка 1948: " SQL
строка 1949: au BufNewFile,BufRead *.sql^I^I^Icall s:SQL()
строка 1950: 
строка 1951: func! s:SQL()
строка 1958: 
строка 1959: " SQLJ
строка 1960: au BufNewFile,BufRead *.sqlj^I^I^Isetf sqlj
строка 1961: 
строка 1962: " SQR
строка 1963: au BufNewFile,BufRead *.sqr,*.sqi^I^Isetf sqr
строка 1964: 
строка 1965: " OpenSSH configuration
строка 1966: au BufNewFile,BufRead ssh_config,*/.ssh/config^Isetf sshconfig
строка 1967: 
строка 1968: " OpenSSH server configuration
строка 1969: au BufNewFile,BufRead sshd_config^I^Isetf sshdconfig
строка 1970: 
строка 1971: " Stata
строка 1972: au BufNewFile,BufRead *.ado,*.class,*.do,*.imata,*.mata   setf stata
строка 1973: 
строка 1974: " SMCL
строка 1975: au BufNewFile,BufRead *.hlp,*.ihlp,*.smcl^Isetf smcl
строка 1976: 
строка 1977: " Stored Procedures
строка 1978: au BufNewFile,BufRead *.stp^I^I^Isetf stp
строка 1979: 
строка 1980: " Standard ML
строка 1981: au BufNewFile,BufRead *.sml^I^I^Isetf sml
строка 1982: 
строка 1983: " Sratus VOS command macro
строка 1984: au BufNewFile,BufRead *.cm^I^I^Isetf voscm
строка 1985: 
строка 1986: " Sysctl
строка 1987: au BufNewFile,BufRead */etc/sysctl.conf,*/etc/sysctl.d/*.conf^Isetf sysctl
строка 1988: 
строка 1989: " Synopsys Design Constraints
строка 1990: au BufNewFile,BufRead *.sdc^I^I^Isetf sdc
строка 1991: 
строка 1992: " Sudoers
строка 1993: au BufNewFile,BufRead */etc/sudoers,sudoers.tmp^Isetf sudoers
строка 1994: 
строка 1995: " SVG (Scalable Vector Graphics)
строка 1996: au BufNewFile,BufRead *.svg^I^I^Isetf svg
строка 1997: 
строка 1998: " If the file has an extension of 't' and is in a directory 't' then it is
строка 1999: " almost certainly a Perl test file.
строка 2000: " If the first line starts with '#' and contains 'perl' it's probably a Perl
строка 2001: " file.
строка 2002: " (Slow test) If a file contains a 'use' statement then it is almost certainly
строка 2003: " a Perl file.
строка 2004: func! s:FTperl()
строка 2019: 
строка 2020: " Tads (or Nroff or Perl test file)
строка 2022: au BufNewFile,BufRead *.t if !s:FTnroff() && !s:FTperl() | setf tads | endif
строка 2023: 
строка 2024: " Tags
строка 2025: au BufNewFile,BufRead tags^I^I^Isetf tags
строка 2026: 
строка 2027: " TAK
строка 2028: au BufNewFile,BufRead *.tak^I^I^Isetf tak
строка 2029: 
строка 2030: " Task
строка 2031: au BufRead,BufNewFile {pending,completed,undo}.data  setf taskdata
строка 2032: au BufRead,BufNewFile *.task                    setf taskedit
строка 2033: 
строка 2034: " Tcl (JACL too)
строка 2035: au BufNewFile,BufRead *.tcl,*.tk,*.itcl,*.itk,*.jacl^Isetf tcl
строка 2036: 
строка 2037: " TealInfo
строка 2038: au BufNewFile,BufRead *.tli^I^I^Isetf tli
строка 2039: 
строка 2040: " Telix Salt
строка 2041: au BufNewFile,BufRead *.slt^I^I^Isetf tsalt
строка 2042: 
строка 2043: " Terminfo
строка 2044: au BufNewFile,BufRead *.ti^I^I^Isetf terminfo
строка 2045: 
строка 2046: " TeX
строка 2047: au BufNewFile,BufRead *.latex,*.sty,*.dtx,*.ltx,*.bbl^Isetf tex
строка 2048: au BufNewFile,BufRead *.tex^I^I^Icall s:FTtex()
строка 2049: 
строка 2050: " Choose context, plaintex, or tex (LaTeX) based on these rules:
строка 2051: " 1. Check the first line of the file for "%&<format>".
строка 2052: " 2. Check the first 1000 non-comment lines for LaTeX or ConTeXt keywords.
строка 2053: " 3. Default to "latex" or to g:tex_flavor, can be set in user's vimrc.
строка 2054: func! s:FTtex()
строка 2101: 
строка 2102: " ConTeXt
строка 2103: au BufNewFile,BufRead tex/context/*/*.tex,*.mkii,*.mkiv   setf context
строка 2104: 
строка 2105: " Texinfo
строка 2106: au BufNewFile,BufRead *.texinfo,*.texi,*.txi^Isetf texinfo
строка 2107: 
строка 2108: " TeX configuration
строка 2109: au BufNewFile,BufRead texmf.cnf^I^I^Isetf texmf
строка 2110: 
строка 2111: " Tidy config
строка 2112: au BufNewFile,BufRead .tidyrc,tidyrc^I^Isetf tidy
строка 2113: 
строка 2114: " TF mud client
строка 2115: au BufNewFile,BufRead *.tf,.tfrc,tfrc^I^Isetf tf
строка 2116: 
строка 2117: " TPP - Text Presentation Program
строка 2118: au BufNewFile,BufReadPost *.tpp^I^I^Isetf tpp
строка 2119: 
строка 2120: " Treetop
строка 2121: au BufRead,BufNewFile *.treetop^I^I^Isetf treetop
строка 2122: 
строка 2123: " Trustees
строка 2124: au BufNewFile,BufRead trustees.conf^I^Isetf trustees
строка 2125: 
строка 2126: " TSS - Geometry
строка 2127: au BufNewFile,BufReadPost *.tssgm^I^Isetf tssgm
строка 2128: 
строка 2129: " TSS - Optics
строка 2130: au BufNewFile,BufReadPost *.tssop^I^Isetf tssop
строка 2131: 
строка 2132: " TSS - Command Line (temporary)
строка 2133: au BufNewFile,BufReadPost *.tsscl^I^Isetf tsscl
строка 2134: 
строка 2135: " Motif UIT/UIL files
строка 2136: au BufNewFile,BufRead *.uit,*.uil^I^Isetf uil
строка 2137: 
строка 2138: " Udev conf
строка 2139: au BufNewFile,BufRead */etc/udev/udev.conf^Isetf udevconf
строка 2140: 
строка 2141: " Udev permissions
строка 2142: au BufNewFile,BufRead */etc/udev/permissions.d/*.permissions setf udevperm
строка 2143: "
строка 2144: " Udev symlinks config
строка 2145: au BufNewFile,BufRead */etc/udev/cdsymlinks.conf^Isetf sh
строка 2146: 
строка 2147: " UnrealScript
строка 2148: au BufNewFile,BufRead *.uc^I^I^Isetf uc
строка 2149: 
строка 2150: " Updatedb
строка 2151: au BufNewFile,BufRead */etc/updatedb.conf^Isetf updatedb
строка 2152: 
строка 2153: " Upstart (init(8)) config files
строка 2154: au BufNewFile,BufRead */etc/init/*.conf,*/.init/*.conf          setf upstart
строка 2155: au BufNewFile,BufRead */etc/init/*.override,*/.init/*.override  setf upstart
строка 2156: 
строка 2157: " Vera
строка 2158: au BufNewFile,BufRead *.vr,*.vri,*.vrh^I^Isetf vera
строка 2159: 
строка 2160: " Verilog HDL
строка 2161: au BufNewFile,BufRead *.v^I^I^Isetf verilog
строка 2162: 
строка 2163: " Verilog-AMS HDL
строка 2164: au BufNewFile,BufRead *.va,*.vams^I^Isetf verilogams
строка 2165: 
строка 2166: " VHDL
строка 2167: au BufNewFile,BufRead *.hdl,*.vhd,*.vhdl,*.vbe,*.vst  setf vhdl
строка 2168: au BufNewFile,BufRead *.vhdl_[0-9]*^I^Icall s:StarSetf('vhdl')
строка 2169: 
строка 2170: " Vim script
строка 2171: au BufNewFile,BufRead *.vim,*.vba,.exrc,_exrc^Isetf vim
строка 2172: 
строка 2173: " Viminfo file
строка 2174: au BufNewFile,BufRead .viminfo,_viminfo^I^Isetf viminfo
строка 2175: 
строка 2176: " Virata Config Script File or Drupal module
строка 2182: au BufRead,BufNewFile *.hw,*.module,*.pkg if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
строка 2183: 
строка 2184: " Visual Basic (also uses *.bas) or FORM
строка 2185: au BufNewFile,BufRead *.frm^I^I^Icall s:FTVB("form")
строка 2186: 
строка 2187: " SaxBasic is close to Visual Basic
строка 2188: au BufNewFile,BufRead *.sba^I^I^Isetf vb
строка 2189: 
строка 2190: " Vgrindefs file
строка 2191: au BufNewFile,BufRead vgrindefs^I^I^Isetf vgrindefs
строка 2192: 
строка 2193: " VRML V1.0c
строка 2194: au BufNewFile,BufRead *.wrl^I^I^Isetf vrml
строка 2195: 
строка 2196: " Webmacro
строка 2197: au BufNewFile,BufRead *.wm^I^I^Isetf webmacro
строка 2198: 
строка 2199: " Wget config
строка 2200: au BufNewFile,BufRead .wgetrc,wgetrc^I^Isetf wget
строка 2201: 
строка 2202: " Website MetaLanguage
строка 2203: au BufNewFile,BufRead *.wml^I^I^Isetf wml
строка 2204: 
строка 2205: " Winbatch
строка 2206: au BufNewFile,BufRead *.wbt^I^I^Isetf winbatch
строка 2207: 
строка 2208: " WSML
строка 2209: au BufNewFile,BufRead *.wsml^I^I^Isetf wsml
строка 2210: 
строка 2211: " WvDial
строка 2212: au BufNewFile,BufRead wvdial.conf,.wvdialrc^Isetf wvdial
строка 2213: 
строка 2214: " CVS RC file
строка 2215: au BufNewFile,BufRead .cvsrc^I^I^Isetf cvsrc
строка 2216: 
строка 2217: " CVS commit file
строка 2218: au BufNewFile,BufRead cvs\d\+^I^I^Isetf cvs
строка 2219: 
строка 2220: " WEB (*.web is also used for Winbatch: Guess, based on expecting "%" comment
строка 2221: " lines in a WEB file).
строка 2227: au BufNewFile,BufRead *.web if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
строка 2228: 
строка 2229: " Windows Scripting Host and Windows Script Component
строка 2230: au BufNewFile,BufRead *.ws[fc]^I^I^Isetf wsh
строка 2231: 
строка 2232: " XHTML
строка 2233: au BufNewFile,BufRead *.xhtml,*.xht^I^Isetf xhtml
строка 2234: 
строка 2235: " X Pixmap (dynamically sets colors, use BufEnter to make it work better)
строка 2241: au BufEnter *.xpm if getline(1) =~ "XPM2" |   setf xpm2 | else |   setf xpm | endif
строка 2242: au BufEnter *.xpm2^I^I^I^Isetf xpm2
строка 2243: 
строка 2244: " XFree86 config
строка 2249: au BufNewFile,BufRead XF86Config if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
строка 2252: au BufNewFile,BufRead */xorg.conf.d/*.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
строка 2253: 
строка 2254: " Xorg config
строка 2255: au BufNewFile,BufRead xorg.conf,xorg.conf-4^Ilet b:xf86conf_xfree86_version = 4 | setf xf86conf
строка 2256: 
строка 2257: " Xinetd conf
строка 2258: au BufNewFile,BufRead */etc/xinetd.conf^I^Isetf xinetd
строка 2259: 
строка 2260: " XS Perl extension interface language
строка 2261: au BufNewFile,BufRead *.xs^I^I^Isetf xs
строка 2262: 
строка 2263: " X resources file
строка 2264: au BufNewFile,BufRead .Xdefaults,.Xpdefaults,.Xresources,xdm-config,*.ad setf xdefaults
строка 2265: 
строка 2266: " Xmath
строка 2267: au BufNewFile,BufRead *.msc,*.msf^I^Isetf xmath
строка 2269: au BufNewFile,BufRead *.ms if !s:FTnroff() | setf xmath | endif
строка 2270: 
строка 2271: " XML  specific variants: docbk and xbl
строка 2272: au BufNewFile,BufRead *.xml^I^I^Icall s:FTxml()
строка 2273: 
строка 2274: func! s:FTxml()
строка 2291: 
строка 2292: " XMI (holding UML models) is also XML
строка 2293: au BufNewFile,BufRead *.xmi^I^I^Isetf xml
строка 2294: 
строка 2295: " CSPROJ files are Visual Studio.NET's XML-based project config files
строка 2296: au BufNewFile,BufRead *.csproj,*.csproj.user^Isetf xml
строка 2297: 
строка 2298: " Qt Linguist translation source and Qt User Interface Files are XML
строка 2299: au BufNewFile,BufRead *.ts,*.ui^I^I^Isetf xml
строка 2300: 
строка 2301: " TPM's are RDF-based descriptions of TeX packages (Nikolai Weibull)
строка 2302: au BufNewFile,BufRead *.tpm^I^I^Isetf xml
строка 2303: 
строка 2304: " Xdg menus
строка 2305: au BufNewFile,BufRead */etc/xdg/menus/*.menu^Isetf xml
строка 2306: 
строка 2307: " ATI graphics driver configuration
строка 2308: au BufNewFile,BufRead fglrxrc^I^I^Isetf xml
строка 2309: 
строка 2310: " XLIFF (XML Localisation Interchange File Format) is also XML
строка 2311: au BufNewFile,BufRead *.xlf^I^I^Isetf xml
строка 2312: au BufNewFile,BufRead *.xliff^I^I^Isetf xml
строка 2313: 
строка 2314: " X11 xmodmap (also see below)
строка 2315: au BufNewFile,BufRead *Xmodmap^I^I^Isetf xmodmap
строка 2316: 
строка 2317: " Xquery
строка 2318: au BufNewFile,BufRead *.xq,*.xql,*.xqm,*.xquery,*.xqy^Isetf xquery
строка 2319: 
строка 2320: " XSD
строка 2321: au BufNewFile,BufRead *.xsd^I^I^Isetf xsd
строка 2322: 
строка 2323: " Xslt
строка 2324: au BufNewFile,BufRead *.xsl,*.xslt^I^Isetf xslt
строка 2325: 
строка 2326: " Yacc
строка 2327: au BufNewFile,BufRead *.yy^I^I^Isetf yacc
строка 2328: 
строка 2329: " Yacc or racc
строка 2330: au BufNewFile,BufRead *.y^I^I^Icall s:FTy()
строка 2331: 
строка 2332: func! s:FTy()
строка 2348: 
строка 2349: 
строка 2350: " Yaml
строка 2351: au BufNewFile,BufRead *.yaml,*.yml^I^Isetf yaml
строка 2352: 
строка 2353: " yum conf (close enough to dosini)
строка 2354: au BufNewFile,BufRead */etc/yum.conf ^I^Isetf dosini
строка 2355: 
строка 2356: " Zope
строка 2357: "   dtml (zope dynamic template markup language), pt (zope page template),
строка 2358: "   cpt (zope form controller page template)
строка 2359: au BufNewFile,BufRead *.dtml,*.pt,*.cpt^I^Icall s:FThtml()
строка 2360: "   zsql (zope sql method)
строка 2361: au BufNewFile,BufRead *.zsql^I^I^Icall s:SQL()
строка 2362: 
строка 2363: " Z80 assembler asz80
строка 2364: au BufNewFile,BufRead *.z8a^I^I^Isetf z8a
строка 2365: 
строка 2366: augroup END
строка 2367: 
строка 2368: 
строка 2369: " Source the user-specified filetype file, for backwards compatibility with
строка 2370: " Vim 5.x.
строка 2371: if exists("myfiletypefile") && filereadable(expand(myfiletypefile))
строка 2372:   execute "source " . myfiletypefile
строка 2373: endif
строка 2374: 
строка 2375: 
строка 2376: " Check for "*" after loading myfiletypefile, so that scripts.vim is only used
строка 2377: " when there are no matching file name extensions.
строка 2378: " Don't do this for compressed files.
строка 2379: augroup filetypedetect
строка 2382: au BufNewFile,BufRead * if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
строка 2383: au StdinReadPost * if !did_filetype() | runtime! scripts.vim | endif
строка 2384: 
строка 2385: 
строка 2386: " Extra checks for when no filetype has been detected now.  Mostly used for
строка 2387: " patterns that end in "*".  E.g., "zsh*" matches "zsh.vim", but that's a Vim
строка 2388: " script file.
строка 2389: " Most of these should call s:StarSetf() to avoid names ending in .gz and the
строка 2390: " like are used.
строка 2391: 
строка 2392: " More Apache config files
строка 2393: au BufNewFile,BufRead access.conf*,apache.conf*,apache2.conf*,httpd.conf*,srm.conf*^Icall s:StarSetf('apache')
строка 2394: au BufNewFile,BufRead */etc/apache2/*.conf*,*/etc/apache2/conf.*/*,*/etc/apache2/mods-*/*,*/etc/apache2/sites-*/*,*/etc/httpd/conf.d/*.conf*^I^Icall s:StarSetf('apache')
строка 2395: 
строка 2396: " Asterisk config file
строка 2397: au BufNewFile,BufRead *asterisk/*.conf*^I^Icall s:StarSetf('asterisk')
строка 2398: au BufNewFile,BufRead *asterisk*/*voicemail.conf* call s:StarSetf('asteriskvm')
строка 2399: 
строка 2400: " Bazaar version control
строка 2401: au BufNewFile,BufRead bzr_log.*^I^I^Isetf bzr
строка 2402: 
строка 2403: " BIND zone
строка 2404: au BufNewFile,BufRead */named/db.*,*/bind/db.*^Icall s:StarSetf('bindzone')
строка 2405: 
строка 2406: " Calendar
строка 2409: au BufNewFile,BufRead */.calendar/*,*/share/calendar/*/calendar.*,*/share/calendar/calendar.*^I^I^I^I^Icall s:StarSetf('calendar')
строка 2410: 
строка 2411: " Changelog
строка 2417: au BufNewFile,BufRead [cC]hange[lL]og* if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
строка 2418: 
строка 2419: " Crontab
строка 2420: au BufNewFile,BufRead crontab,crontab.*,*/etc/cron.d/*^I^Icall s:StarSetf('crontab')
строка 2421: 
строка 2422: " dnsmasq(8) configuration
строка 2423: au BufNewFile,BufRead */etc/dnsmasq.d/*^I^Icall s:StarSetf('dnsmasq')
строка 2424: 
строка 2425: " Dracula
строка 2426: au BufNewFile,BufRead drac.*^I^I^Icall s:StarSetf('dracula')
строка 2427: 
строка 2428: " Fvwm
строка 2429: au BufNewFile,BufRead */.fvwm/*^I^I^Icall s:StarSetf('fvwm')
строка 2431: au BufNewFile,BufRead *fvwmrc*,*fvwm95*.hook let b:fvwm_version = 1 | call s:StarSetf('fvwm')
строка 2437: au BufNewFile,BufRead *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
строка 2438: 
строка 2439: " Gedcom
строка 2440: au BufNewFile,BufRead */tmp/lltmp*^I^Icall s:StarSetf('gedcom')
строка 2441: 
строка 2442: " GTK RC
строка 2443: au BufNewFile,BufRead .gtkrc*,gtkrc*^I^Icall s:StarSetf('gtkrc')
строка 2444: 
строка 2445: " Jam
строка 2446: au BufNewFile,BufRead Prl*.*,JAM*.*^I^Icall s:StarSetf('jam')
строка 2447: 
строка 2448: " Jargon
строка 2452: au! BufNewFile,BufRead *jarg* if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
строка 2453: 
строка 2454: " Kconfig
строка 2455: au BufNewFile,BufRead Kconfig.*^I^I^Icall s:StarSetf('kconfig')
строка 2456: 
строка 2457: " Lilo: Linux loader
строка 2458: au BufNewFile,BufRead lilo.conf*^I^Icall s:StarSetf('lilo')
строка 2459: 
строка 2460: " Logcheck
строка 2461: au BufNewFile,BufRead */etc/logcheck/*.d*/*^Icall s:StarSetf('logcheck')
строка 2462: 
строка 2463: " Makefile
строка 2464: au BufNewFile,BufRead [mM]akefile*^I^Icall s:StarSetf('make')
строка 2465: 
строка 2466: " Ruby Makefile
строка 2467: au BufNewFile,BufRead [rR]akefile*^I^Icall s:StarSetf('ruby')
строка 2468: 
строка 2469: " Mail (also matches muttrc.vim, so this is below the other checks)
строка 2470: au BufNewFile,BufRead mutt[[:alnum:]._-]\{6\}^Isetf mail
строка 2471: 
строка 2472: " Modconf
строка 2476: au BufNewFile,BufRead */etc/modutils/* if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
строка 2477: au BufNewFile,BufRead */etc/modprobe.*^I^Icall s:StarSetf('modconf')
строка 2478: 
строка 2479: " Mutt setup file
строка 2480: au BufNewFile,BufRead .mutt{ng,}rc*,*/.mutt{ng,}/mutt{ng,}rc*^Icall s:StarSetf('muttrc')
строка 2481: au BufNewFile,BufRead mutt{ng,}rc*,Mutt{ng,}rc*^I^Icall s:StarSetf('muttrc')
строка 2482: 
строка 2483: " Nroff macros
строка 2484: au BufNewFile,BufRead tmac.*^I^I^Icall s:StarSetf('nroff')
строка 2485: 
строка 2486: " Pam conf
строка 2487: au BufNewFile,BufRead */etc/pam.d/*^I^Icall s:StarSetf('pamconf')
строка 2488: 
строка 2489: " Printcap and Termcap
строка 2493: au BufNewFile,BufRead *printcap* if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
строка 2497: au BufNewFile,BufRead *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
строка 2498: 
строка 2499: " Remind
строка 2500: au BufNewFile,BufRead .reminders*^I^Icall s:StarSetf('remind')
строка 2501: 
строка 2502: " Vim script
строка 2503: au BufNewFile,BufRead *vimrc*^I^I^Icall s:StarSetf('vim')
строка 2504: 
строка 2505: " Subversion commit file
строка 2506: au BufNewFile,BufRead svn-commit*.tmp^I^Isetf svn
строка 2507: 
строка 2508: " X resources file
строка 2509: au BufNewFile,BufRead Xresources*,*/app-defaults/*,*/Xresources/* call s:StarSetf('xdefaults')
строка 2510: 
строка 2511: " XFree86 config
строка 2513: au BufNewFile,BufRead XF86Config-4* let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
строка 2518: au BufNewFile,BufRead XF86Config* if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
строка 2519: 
строка 2520: " X11 xmodmap
строка 2521: au BufNewFile,BufRead *xmodmap*^I^I^Icall s:StarSetf('xmodmap')
строка 2522: 
строка 2523: " Xinetd conf
строка 2524: au BufNewFile,BufRead */etc/xinetd.d/*^I^Icall s:StarSetf('xinetd')
строка 2525: 
строка 2526: " yum conf (close enough to dosini)
строка 2527: au BufNewFile,BufRead */etc/yum.repos.d/* ^Icall s:StarSetf('dosini')
строка 2528: 
строка 2529: " Z-Shell script
строка 2530: au BufNewFile,BufRead zsh*,zlog*^I^Icall s:StarSetf('zsh')
строка 2531: 
строка 2532: 
строка 2533: 
строка 2534: " Use the filetype detect plugins.  They may overrule any of the previously
строка 2535: " detected filetypes.
строка 2536: runtime! ftdetect/*.vim
Поиск "ftdetect/*.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/ftdetect/*.vim"
Поиск "/usr/share/vim/vimfiles/ftdetect/*.vim"
Поиск "/usr/share/vim/ftdetect/*.vim"
chdir(/usr/share/vim/ftdetect)
fchdir() to previous dir
строка 2536: считывание "/usr/share/vim/ftdetect/00-altlinux.vim"
строка 1: " ALT Linux specific filetype additions
строка 2: "
строка 3: " Maintainer:   Vim Development Team <vim@packages.altlinux.org>
строка 4: " Last Change:  2006 Sep  2
строка 5: 
строка 6: " Mutt with Owl security patch
строка 7: au BufNewFile,BufRead mutt.[A-Za-z0-9]\{6\}  setf mail
строка 8: 
строка 9: " Postfix's aliases
строка 10: au BufNewFile,BufRead /etc/postfix/aliases  setf mailaliases
строка 11: 
строка 12: " named by default is chrooted to /var/lib/bind/
строка 13: au BufNewFile,BufRead /var/lib/bind/etc/*  setf named
строка 14: au BufNewFile,BufRead /var/lib/bind/zone/* setf bindzone
строка 15: 
строка 16: " Apache configuration
строка 17: au BufNewFile,BufRead /etc/httpd{,2}/conf/*.conf setf apache
строка 18: 
строка 19: " Password file
строка 20: au BufNewFile,BufRead /etc/tcb/*/shadow{,-} setf passwd
строка 21: 
считывание сценария /usr/share/vim/ftdetect/00-altlinux.vim завершено
продолжение в /usr/share/vim/filetype.vim
Поиск "/usr/share/vim/vimfiles/after/ftdetect/*.vim"
Поиск "/home/black/.vim/after/ftdetect/*.vim"
строка 2537: 
строка 2538: 
строка 2539: " Generic configuration file (check this last, it's just guessing!)
строка 2545: au BufNewFile,BufRead,StdinReadPost * if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
строка 2546: 
строка 2547: augroup END
строка 2548: 
строка 2549: 
строка 2550: " If the GUI is already running, may still need to install the Syntax menu.
строка 2551: " Don't do it when the 'M' flag is included in 'guioptions'.
строка 2553: if has("menu") && has("gui_running") && !exists("did_install_syntax_menu") && &guioptions !~# "M"
строка 2554:   source <sfile>:p:h/menu.vim
строка 2555: endif
строка 2556: 
строка 2557: " Function called for testing all functions defined here.  These are
строка 2558: " script-local, thus need to be executed here.
строка 2559: " Returns a string with error messages (hopefully empty).
строка 2560: func! TestFiletypeFuncs(testlist)
строка 2571: 
строка 2572: " Restore 'cpoptions'
строка 2573: let &cpo = s:cpo_save
строка 2574: unlet s:cpo_save
считывание сценария /usr/share/vim/filetype.vim завершено
продолжение в /usr/share/vim/syntax/syntax.vim
Поиск "/usr/share/vim/vimfiles/after/filetype.vim"
Поиск "/home/black/.vim/after/filetype.vim"
строка 26:   let s:did_ft = 0
строка 27: endif
строка 28: 
строка 29: " Set up the connection between FileType and Syntax autocommands.
строка 30: " This makes the syntax automatically set when the file type is detected.
строка 31: augroup syntaxset
строка 32:   au! FileType *^Iexe "set syntax=" . expand("<amatch>")
строка 33: augroup END
строка 34: 
строка 35: 
строка 36: " Execute the syntax autocommands for the each buffer.
строка 37: " If the filetype wasn't detected yet, do that now.
строка 38: " Always do the syntaxset autocommands, for buffers where the 'filetype'
строка 39: " already was set manually (e.g., help buffers).
строка 40: doautoall syntaxset FileType
строка 41: if !s:did_ft
строка 42:   doautoall filetypedetect BufRead
строка 43: endif
считывание сценария /usr/share/vim/syntax/syntax.vim завершено
продолжение в /etc/vim/vimrc
строка 37: ^Iset hlsearch
строка 38: endif
строка 39: 
строка 40: " Only do this part when compiled with support for autocommands.
строка 41: if has("autocmd")
строка 42: 
строка 43:   " Enable file type detection.
строка 44:   " Use the default filetype settings, so that mail gets 'tw' set to 72,
строка 45:   " 'cindent' is on in C files, etc.
строка 46:   " Also load indent files, to automatically do language-dependent indenting.
строка 47:   filetype plugin indent on
Поиск "filetype.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/filetype.vim"
Поиск "/usr/share/vim/vimfiles/filetype.vim"
Поиск "/usr/share/vim/filetype.vim"
chdir(/usr/share/vim)
fchdir() to previous dir
строка 47: считывание "/usr/share/vim/filetype.vim"
строка 1: " Vim support file to detect file types
строка 2: "
строка 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
строка 4: " Last Change:^I2011 Oct 08
строка 5: 
строка 6: " Listen very carefully, I will say this only once
строка 7: if exists("did_load_filetypes")
строка 8:   finish
считывание сценария /usr/share/vim/filetype.vim завершено
продолжение в /etc/vim/vimrc
Поиск "/usr/share/vim/vimfiles/after/filetype.vim"
Поиск "/home/black/.vim/after/filetype.vim"
Поиск "ftplugin.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/ftplugin.vim"
Поиск "/usr/share/vim/vimfiles/ftplugin.vim"
Поиск "/usr/share/vim/ftplugin.vim"
chdir(/usr/share/vim)
fchdir() to previous dir
строка 47: считывание "/usr/share/vim/ftplugin.vim"
строка 1: " Vim support file to switch on loading plugins for file types
строка 2: "
строка 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
строка 4: " Last change:^I2006 Apr 30
строка 5: 
строка 6: if exists("did_load_ftplugin")
строка 7:   finish
строка 8: endif
строка 9: let did_load_ftplugin = 1
строка 10: 
строка 11: augroup filetypeplugin
строка 12:   au FileType * call s:LoadFTPlugin()
строка 13: 
строка 14:   func! s:LoadFTPlugin()
строка 35: augroup END
считывание сценария /usr/share/vim/ftplugin.vim завершено
продолжение в /etc/vim/vimrc
Поиск "/usr/share/vim/vimfiles/after/ftplugin.vim"
Поиск "/home/black/.vim/after/ftplugin.vim"
Поиск "indent.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/indent.vim"
Поиск "/usr/share/vim/vimfiles/indent.vim"
Поиск "/usr/share/vim/indent.vim"
chdir(/usr/share/vim)
fchdir() to previous dir
строка 47: считывание "/usr/share/vim/indent.vim"
строка 1: " Vim support file to switch on loading indent files for file types
строка 2: "
строка 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
строка 4: " Last Change:^I2008 Feb 22
строка 5: 
строка 6: if exists("did_indent_on")
строка 7:   finish
строка 8: endif
строка 9: let did_indent_on = 1
строка 10: 
строка 11: augroup filetypeindent
строка 12:   au FileType * call s:LoadIndent()
строка 13:   func! s:LoadIndent()
строка 31: augroup END
считывание сценария /usr/share/vim/indent.vim завершено
продолжение в /etc/vim/vimrc
Поиск "/usr/share/vim/vimfiles/after/indent.vim"
Поиск "/home/black/.vim/after/indent.vim"
строка 48: 
строка 49: endif " has("autocmd")
строка 50: 
строка 51: " Disable 'title' and 'icon' features in terminal modes in order to
строка 52: " avoid timeouts on startup (caused by attempts to connect to X server.
строка 53: " For GUI version we'll reenable them in gvimrc.
строка 54: if has("title")
строка 55: ^Iset notitle
строка 56: ^Iset noicon
строка 57: endif
строка 58: 
строка 59: " add key mappings for national keyboards
строка 60: if has("langmap")
строка 61: ^Iexe "runtime " . fnameescape("langmap/" . tolower($LANG) . ".vim")
строка 61: runtime langmap/ru_ru.utf-8.vim
Поиск "langmap/ru_ru.utf-8.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/langmap/ru_ru.utf-8.vim"
Поиск "/usr/share/vim/vimfiles/langmap/ru_ru.utf-8.vim"
Поиск "/usr/share/vim/langmap/ru_ru.utf-8.vim"
chdir(/usr/share/vim/langmap)
fchdir() to previous dir
строка 61: считывание "/usr/share/vim/langmap/ru_ru.utf-8.vim"
строка 1: " Language mapping:^IRussian
строка 2: 
строка 3: source <sfile>:p:h/ru.vim
chdir(/usr/share/vim/langmap)
fchdir() to previous dir
строка 3: считывание "/usr/share/vim/langmap/ru.vim"
строка 1: " Language mapping:^IRussian
строка 2: " Maintainer:^I^ISir Raorn <raorn@altlinux.ru>
строка 3: " Last Change:^I^I12 Aug 2008
строка 4: 
строка 5: scriptencoding utf-8
строка 6: 
строка 7: set langmap=ё`,Ё~,йq,ЙQ,цw,ЦW,уe,УE,кr,КR,еt,ЕT,нy,НY,гu,ГU,шi,ШI,щo,ЩO,зp,ЗP,х[,Х{,ъ],Ъ},фa,ФA,ыs,ЫS,вd,ВD,аf,АF,пg,ПG,рh,РH,оj,ОJ,лk,ЛK,дl,ДL,ж\\;,Ж:,э\',Э\",яz,ЯZ,чx,ЧX,сc,СC,мv,МV,иb,ИB,тn,ТN,ьm,ЬM,б\\,,Б<,ю.,Ю>
считывание сценария /usr/share/vim/langmap/ru.vim завершено
продолжение в /usr/share/vim/langmap/ru_ru.utf-8.vim
считывание сценария /usr/share/vim/langmap/ru_ru.utf-8.vim завершено
продолжение в /etc/vim/vimrc
строка 62: endif
строка 63: 
строка 64: " Disabled for security reasons
строка 65: set nomodeline
строка 66: 
строка 67: if has("eval")
строка 68: 
строка 69: " Better defaults for scripts
строка 70: " sh.vim - use POSIX syntax instead of stone-aged non-SUSv3-compatible "sh"
строка 71: let g:is_posix = 1
строка 72: 
строка 73: endif " has("eval")
считывание сценария /etc/vim/vimrc завершено
chdir(/home/black)
fchdir() to previous dir
невозможно считать "$HOME/.vimrc"
chdir(/home/black)
fchdir() to previous dir
невозможно считать "$HOME/.exrc"
Поиск "plugin/**/*.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/plugin/**/*.vim"
Поиск "/usr/share/vim/vimfiles/plugin/**/*.vim"
chdir(/usr/share/vim/vimfiles/plugin)
fchdir() to previous dir
считывание сценария "/usr/share/vim/vimfiles/plugin/YO.vim"
строка 1: " Vim plugin for calling YO-ficator script
строка 2: " Maintainer: Vitaly Kuznetsov <vitty@altlinux.org>
строка 3: " Last Change: Thu Sep 15 12:01:18 MSK 2011
строка 4: 
строка 5: if exists('g:loaded_YOficator')
строка 6:   finish
строка 7: endif
строка 8: let g:loaded_YOficator = 'v0.1'
строка 9: 
строка 10: " Define the :YO command when:
строка 11: " - 'compatible' is not set
строка 12: " - this plugin was not already loaded
строка 13: " - user commands are available.
строка 14: if !&cp && !exists(":YO") && has("user_commands")
строка 15:   command -range=% YO :pyfile /usr/libexec/yo.py
строка 16: endif
считывание сценария /usr/share/vim/vimfiles/plugin/YO.vim завершено
Поиск "/usr/share/vim/plugin/**/*.vim"
chdir(/usr/share/vim/plugin)
fchdir() to previous dir
считывание сценария "/usr/share/vim/plugin/getscriptPlugin.vim"
строка 1: " ---------------------------------------------------------------------
строка 2: " getscriptPlugin.vim
строка 3: "  Author:^ICharles E. Campbell, Jr.
строка 4: "  Date:^IJan 07, 2008
строка 5: "  Installing:^I:help glvs-install
строка 6: "  Usage:^I:help glvs
строка 7: "
строка 8: " GetLatestVimScripts: 642 1 :AutoInstall: getscript.vim
строка 9: "
строка 10: " (Rom 15:11 WEB) Again, "Praise the Lord, all you Gentiles!  Let
строка 11: " all the peoples praise Him."
строка 12: " ---------------------------------------------------------------------
строка 13: " Initialization:^I{{{1
строка 14: " if you're sourcing this file, surely you can't be
строка 15: " expecting vim to be in its vi-compatible mode
строка 16: if &cp || exists("g:loaded_getscriptPlugin")
строка 17:  if &verbose
строка 18:   echo "GetLatestVimScripts is not vi-compatible; not loaded (you need to set nocp)"
строка 19:  endif
строка 20:  finish
строка 21: endif
строка 22: let g:loaded_getscriptPlugin = "v33"
строка 23: let s:keepcpo                = &cpo
строка 24: set cpo&vim
строка 25: 
строка 26: " ---------------------------------------------------------------------
строка 27: "  Public Interface: {{{1
строка 28: com!        -nargs=0 GetLatestVimScripts call getscript#GetLatestVimScripts()
строка 29: com!        -nargs=0 GetScripts          call getscript#GetLatestVimScripts()
строка 30: silent! com -nargs=0 GLVS                call getscript#GetLatestVimScripts()
строка 31: 
строка 32: " ---------------------------------------------------------------------
строка 33: " Restore Options: {{{1
строка 34: let &cpo= s:keepcpo
строка 35: unlet s:keepcpo
строка 36: 
строка 37: " ---------------------------------------------------------------------
строка 38: " vim: ts=8 sts=2 fdm=marker nowrap
считывание сценария /usr/share/vim/plugin/getscriptPlugin.vim завершено
chdir(/usr/share/vim/plugin)
fchdir() to previous dir
считывание сценария "/usr/share/vim/plugin/gzip.vim"
строка 1: " Vim plugin for editing compressed files.
строка 2: " Maintainer: Bram Moolenaar <Bram@vim.org>
строка 3: " Last Change: 2010 Mar 10
строка 4: 
строка 5: " Exit quickly when:
строка 6: " - this plugin was already loaded
строка 7: " - when 'compatible' is set
строка 8: " - some autocommands are already taking care of compressed files
строка 9: if exists("loaded_gzip") || &cp || exists("#BufReadPre#*.gz")
строка 10:   finish
строка 11: endif
строка 12: let loaded_gzip = 1
строка 13: 
строка 14: augroup gzip
строка 15:   " Remove all gzip autocommands
строка 16:   au!
строка 17: 
строка 18:   " Enable editing of gzipped files.
строка 19:   " The functions are defined in autoload/gzip.vim.
строка 20:   "
строка 21:   " Set binary mode before reading the file.
строка 22:   " Use "gzip -d", gunzip isn't always available.
строка 23:   autocmd BufReadPre,FileReadPre^I*.gz,*.bz2,*.Z,*.lzma,*.xz setlocal bin
строка 24:   autocmd BufReadPost,FileReadPost^I*.gz  call gzip#read("gzip -dn")
строка 25:   autocmd BufReadPost,FileReadPost^I*.bz2 call gzip#read("bzip2 -d")
строка 26:   autocmd BufReadPost,FileReadPost^I*.Z   call gzip#read("uncompress")
строка 27:   autocmd BufReadPost,FileReadPost^I*.lzma call gzip#read("lzma -d")
строка 28:   autocmd BufReadPost,FileReadPost^I*.xz  call gzip#read("xz -d")
строка 29:   autocmd BufWritePost,FileWritePost^I*.gz  call gzip#write("gzip")
строка 30:   autocmd BufWritePost,FileWritePost^I*.bz2 call gzip#write("bzip2")
строка 31:   autocmd BufWritePost,FileWritePost^I*.Z   call gzip#write("compress -f")
строка 32:   autocmd BufWritePost,FileWritePost^I*.lzma call gzip#write("lzma -z")
строка 33:   autocmd BufWritePost,FileWritePost^I*.xz  call gzip#write("xz -z")
строка 34:   autocmd FileAppendPre^I^I^I*.gz  call gzip#appre("gzip -dn")
строка 35:   autocmd FileAppendPre^I^I^I*.bz2 call gzip#appre("bzip2 -d")
строка 36:   autocmd FileAppendPre^I^I^I*.Z   call gzip#appre("uncompress")
строка 37:   autocmd FileAppendPre^I^I^I*.lzma call gzip#appre("lzma -d")
строка 38:   autocmd FileAppendPre^I^I^I*.xz   call gzip#appre("xz -d")
строка 39:   autocmd FileAppendPost^I^I*.gz  call gzip#write("gzip")
строка 40:   autocmd FileAppendPost^I^I*.bz2 call gzip#write("bzip2")
строка 41:   autocmd FileAppendPost^I^I*.Z   call gzip#write("compress -f")
строка 42:   autocmd FileAppendPost^I^I*.lzma call gzip#write("lzma -z")
строка 43:   autocmd FileAppendPost^I^I*.xz call gzip#write("xz -z")
строка 44: augroup END
считывание сценария /usr/share/vim/plugin/gzip.vim завершено
chdir(/usr/share/vim/plugin)
fchdir() to previous dir
считывание сценария "/usr/share/vim/plugin/matchparen.vim"
строка 1: " Vim plugin for showing matching parens
строка 2: " Maintainer:  Bram Moolenaar <Bram@vim.org>
строка 3: " Last Change: 2011 Aug 27
строка 4: 
строка 5: " Exit quickly when:
строка 6: " - this plugin was already loaded (or disabled)
строка 7: " - when 'compatible' is set
строка 8: " - the "CursorMoved" autocmd event is not availble.
строка 9: if exists("g:loaded_matchparen") || &cp || !exists("##CursorMoved")
строка 10:   finish
строка 11: endif
строка 12: let g:loaded_matchparen = 1
строка 13: 
строка 14: augroup matchparen
строка 15:   " Replace all matchparen autocommands
строка 16:   autocmd! CursorMoved,CursorMovedI,WinEnter * call s:Highlight_Matching_Pair()
строка 17: augroup END
строка 18: 
строка 19: " Skip the rest if it was already done.
строка 20: if exists("*s:Highlight_Matching_Pair")
строка 21:   finish
строка 22: endif
строка 23: 
строка 24: let s:cpo_save = &cpo
строка 25: set cpo-=C
строка 26: 
строка 27: " The function that is invoked (very often) to define a ":match" highlighting
строка 28: " for any matching paren.
строка 29: function! s:Highlight_Matching_Pair()
строка 145: 
строка 146: " Define commands that will disable and enable the plugin.
строка 148: command! NoMatchParen windo 3match none | unlet! g:loaded_matchparen | au! matchparen
строка 149: command! DoMatchParen runtime plugin/matchparen.vim | windo doau CursorMoved
строка 150: 
строка 151: let &cpo = s:cpo_save
строка 152: unlet s:cpo_save
считывание сценария /usr/share/vim/plugin/matchparen.vim завершено
chdir(/usr/share/vim/plugin)
fchdir() to previous dir
считывание сценария "/usr/share/vim/plugin/netrwPlugin.vim"
строка 1: " netrwPlugin.vim: Handles file transfer and remote directory listing across a network
строка 2: "            PLUGIN SECTION
строка 3: " Date:^I^IAug 24, 2011
строка 4: " Maintainer:^ICharles E Campbell, Jr <NdrOchip@ScampbellPfamily.AbizM-NOSPAM>
строка 5: " GetLatestVimScripts: 1075 1 :AutoInstall: netrw.vim
строка 6: " Copyright:    Copyright (C) 1999-2008 Charles E. Campbell, Jr. {{{1
строка 7: "               Permission is hereby granted to use and distribute this code,
строка 8: "               with or without modifications, provided that this copyright
строка 9: "               notice is copied with it. Like anything else that's free,
строка 10: "               netrw.vim, netrwPlugin.vim, and netrwSettings.vim are provided
строка 11: "               *as is* and comes with no warranty of any kind, either
строка 12: "               expressed or implied. By using this plugin, you agree that
строка 13: "               in no event will the copyright holder be liable for any damages
строка 14: "               resulting from the use of this software.
строка 15: "
строка 16: "  But be doers of the Word, and not only hearers, deluding your own selves {{{1
строка 17: "  (James 1:22 RSV)
строка 18: " =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
строка 19: " Load Once: {{{1
строка 20: if &cp || exists("g:loaded_netrwPlugin")
строка 21:  finish
строка 22: endif
строка 23: let g:loaded_netrwPlugin = "v143"
строка 24: if v:version < 702
строка 25:  echohl WarningMsg | echo "***netrw*** you need vim version 7.2 for this version of netrw" | echohl None
строка 25:  echo "***netrw*** you need vim version 7.2 for this version of netrw" | echohl None
строка 25:  echohl None
строка 26:  finish
строка 27: endif
строка 28: let s:keepcpo = &cpo
строка 29: set cpo&vim
строка 30: 
строка 31: " ---------------------------------------------------------------------
строка 32: " Public Interface: {{{1
строка 33: 
строка 34: " Local Browsing: {{{2
строка 35: augroup FileExplorer
строка 36:  au!
строка 37: " au BufReadCmd *[/\\]^Isil! call s:LocalBrowse(expand("<amatch>")) 
строка 38: " au BufEnter *[^/\\]^Isil! call s:LocalBrowse(expand("<amatch>"))
строка 39: " au VimEnter *[^/\\]^Isil! call s:VimEnter(expand("<amatch>"))
строка 40:  au BufEnter *^Isil! call s:LocalBrowse(expand("<amatch>"))
строка 41:  au VimEnter *^Isil! call s:VimEnter(expand("<amatch>"))
строка 42:  if has("win32") || has("win95") || has("win64") || has("win16")
строка 43:   au BufEnter .* sil! call s:LocalBrowse(expand("<amatch>"))
строка 44:  endif
строка 45: augroup END
строка 46: 
строка 47: " Network Browsing Reading Writing: {{{2
строка 48: augroup Network
строка 49:  au!
строка 50:  au BufReadCmd   file://*^I^Icall netrw#FileUrlRead(expand("<amatch>"))
строка 51:  au BufReadCmd   ftp://*,rcp://*,scp://*,http://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe "silent doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "silent doau BufReadPost ".fnameescape(expand("<amatch>"))
строка 52:  au FileReadCmd  ftp://*,rcp://*,scp://*,http://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe "silent doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "silent doau FileReadPost ".fnameescape(expand("<amatch>"))
строка 53:  au BufWriteCmd  ftp://*,rcp://*,scp://*,dav://*,davs://*,rsync://*,sftp://*^I^I^Iexe "silent doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "silent doau BufWritePost ".fnameescape(expand("<amatch>"))
строка 54:  au FileWriteCmd ftp://*,rcp://*,scp://*,dav://*,davs://*,rsync://*,sftp://*^I^I^Iexe "silent doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "silent doau FileWritePost ".fnameescape(expand("<amatch>"))
строка 55:  try
строка 56:   au SourceCmd   ftp://*,rcp://*,scp://*,http://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe 'Nsource '.fnameescape(expand("<amatch>"))
строка 57:  catch /^Vim\%((\a\+)\)\=:E216/
строка 58:   au SourcePre   ftp://*,rcp://*,scp://*,http://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe 'Nsource '.fnameescape(expand("<amatch>"))
строка 59:  endtry
строка 60: augroup END
строка 61: 
строка 62: " Commands: :Nread, :Nwrite, :NetUserPass {{{2
строка 63: com! -count=1 -nargs=*^INread^I^Icall netrw#NetrwSavePosn()<bar>call netrw#NetRead(<count>,<f-args>)<bar>call netrw#NetrwRestorePosn()
строка 64: com! -range=% -nargs=*^INwrite^I^Icall netrw#NetrwSavePosn()<bar><line1>,<line2>call netrw#NetWrite(<f-args>)<bar>call netrw#NetrwRestorePosn()
строка 65: com! -nargs=*^I^INetUserPass^Icall NetUserPass(<f-args>)
строка 66: com! -nargs=*^I        Nsource^I^Icall netrw#NetrwSavePosn()<bar>call netrw#NetSource(<f-args>)<bar>call netrw#NetrwRestorePosn()
строка 67: 
строка 68: " Commands: :Explore, :Sexplore, Hexplore, Vexplore {{{2
строка 69: com! -nargs=* -bar -bang -count=0 -complete=dir^IExplore^I^Icall netrw#Explore(<count>,0,0+<bang>0,<q-args>)
строка 70: com! -nargs=* -bar -bang -count=0 -complete=dir^ISexplore^Icall netrw#Explore(<count>,1,0+<bang>0,<q-args>)
строка 71: com! -nargs=* -bar -bang -count=0 -complete=dir^IHexplore^Icall netrw#Explore(<count>,1,2+<bang>0,<q-args>)
строка 72: com! -nargs=* -bar -bang -count=0 -complete=dir^IVexplore^Icall netrw#Explore(<count>,1,4+<bang>0,<q-args>)
строка 73: com! -nargs=* -bar       -count=0 -complete=dir^ITexplore^Icall netrw#Explore(<count>,0,6        ,<q-args>)
строка 74: com! -nargs=* -bar -bang^I^I^INexplore^Icall netrw#Explore(-1,0,0,<q-args>)
строка 75: com! -nargs=* -bar -bang^I^I^IPexplore^Icall netrw#Explore(-2,0,0,<q-args>)
строка 76: 
строка 77: " Commands: NetrwSettings {{{2
строка 78: com! -nargs=0^INetrwSettings^Icall netrwSettings#NetrwSettings()
строка 79: com! -bang^INetrwClean^Icall netrw#NetrwClean(<bang>0)
строка 80: 
строка 81: " Maps:
строка 82: if !exists("g:netrw_nogx") && maparg('gx','n') == ""
строка 83:  if !hasmapto('<Plug>NetrwBrowseX')
строка 84:   nmap <unique> gx <Plug>NetrwBrowseX
строка 85:  endif
строка 86:  nno <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)<cr>
строка 87: endif
строка 88: 
строка 89: " ---------------------------------------------------------------------
строка 90: " LocalBrowse: {{{2
строка 91: fun! s:LocalBrowse(dirname)
строка 109: 
строка 110: " ---------------------------------------------------------------------
строка 111: " s:VimEnter: {{{2
строка 112: fun! s:VimEnter(dirname)
строка 117: 
строка 118: " ---------------------------------------------------------------------
строка 119: " NetrwStatusLine: {{{1
строка 120: fun! NetrwStatusLine()
строка 131: 
строка 132: " ------------------------------------------------------------------------
строка 133: " NetUserPass: set username and password for subsequent ftp transfer {{{1
строка 134: "   Usage:  :call NetUserPass()^I^I^I-- will prompt for userid and password
строка 135: "^I    :call NetUserPass("uid")^I^I-- will prompt for password
строка 136: "^I    :call NetUserPass("uid","password") -- sets global userid and password
строка 137: fun! NetUserPass(...)
строка 161: 
строка 162: " ------------------------------------------------------------------------
строка 163: " Modelines And Restoration: {{{1
строка 164: let &cpo= s:keepcpo
строка 165: unlet s:keepcpo
строка 166: " vim:ts=8 fdm=marker
считывание сценария /usr/share/vim/plugin/netrwPlugin.vim завершено
chdir(/usr/share/vim/plugin)
fchdir() to previous dir
считывание сценария "/usr/share/vim/plugin/rrhelper.vim"
строка 1: " Vim plugin with helper function(s) for --remote-wait
строка 2: " Maintainer: Flemming Madsen <fma@cci.dk>
строка 3: " Last Change: 2008 May 29
строка 4: 
строка 5: " Has this already been loaded?
строка 6: if exists("loaded_rrhelper") || !has("clientserver")
строка 7:   finish
строка 8: endif
строка 9: let loaded_rrhelper = 1
строка 10: 
строка 11: " Setup answers for a --remote-wait client who will assume
строка 12: " a SetupRemoteReplies() function in the command server
строка 13: 
строка 14: function SetupRemoteReplies()
строка 41: 
строка 42: function DoRemoteReply(id, cnt, group, file)
строка 47: 
строка 48: " vim: set sw=2 sts=2 :
считывание сценария /usr/share/vim/plugin/rrhelper.vim завершено
chdir(/usr/share/vim/plugin)
fchdir() to previous dir
считывание сценария "/usr/share/vim/plugin/spellfile.vim"
строка 1: " Vim plugin for downloading spell files
строка 2: " Maintainer:  Bram Moolenaar <Bram@vim.org>
строка 3: " Last Change: 2006 Feb 01
строка 4: 
строка 5: " Exit quickly when:
строка 6: " - this plugin was already loaded
строка 7: " - when 'compatible' is set
строка 8: " - some autocommands are already taking care of spell files
строка 9: if exists("loaded_spellfile_plugin") || &cp || exists("#SpellFileMissing")
строка 10:   finish
строка 11: endif
строка 12: let loaded_spellfile_plugin = 1
строка 13: 
строка 14: " The function is in the autoload directory.
строка 15: autocmd SpellFileMissing * call spellfile#LoadFile(expand('<amatch>'))
считывание сценария /usr/share/vim/plugin/spellfile.vim завершено
chdir(/usr/share/vim/plugin)
fchdir() to previous dir
считывание сценария "/usr/share/vim/plugin/tarPlugin.vim"
строка 1: " tarPlugin.vim -- a Vim plugin for browsing tarfiles
строка 2: " Original was copyright (c) 2002, Michael C. Toren <mct@toren.net>
строка 3: " Modified by Charles E. Campbell, Jr.
строка 4: " Distributed under the GNU General Public License.
строка 5: "
строка 6: " Updates are available from <http://michael.toren.net/code/>.  If you
строка 7: " find this script useful, or have suggestions for improvements, please
строка 8: " let me know.
строка 9: " Also look there for further comments and documentation.
строка 10: "
строка 11: " This part only sets the autocommands.  The functions are in autoload/tar.vim.
строка 12: " ---------------------------------------------------------------------
строка 13: "  Load Once: {{{1
строка 14: if &cp || exists("g:loaded_tarPlugin")
строка 15:  finish
строка 16: endif
строка 17: let g:loaded_tarPlugin = "v27"
строка 18: let s:keepcpo          = &cpo
строка 19: set cpo&vim
строка 20: 
строка 21: " ---------------------------------------------------------------------
строка 22: "  Public Interface: {{{1
строка 23: augroup tar
строка 24:   au!
строка 25:   au BufReadCmd   tarfile::*^Icall tar#Read(expand("<amatch>"), 1)
строка 26:   au FileReadCmd  tarfile::*^Icall tar#Read(expand("<amatch>"), 0)
строка 27:   au BufWriteCmd  tarfile::*^Icall tar#Write(expand("<amatch>"))
строка 28:   au FileWriteCmd tarfile::*^Icall tar#Write(expand("<amatch>"))
строка 29: 
строка 30:   if has("unix")
строка 31:    au BufReadCmd   tarfile::*/*^Icall tar#Read(expand("<amatch>"), 1)
строка 32:    au FileReadCmd  tarfile::*/*^Icall tar#Read(expand("<amatch>"), 0)
строка 33:    au BufWriteCmd  tarfile::*/*^Icall tar#Write(expand("<amatch>"))
строка 34:    au FileWriteCmd tarfile::*/*^Icall tar#Write(expand("<amatch>"))
строка 35:   endif
строка 36: 
строка 37:   au BufReadCmd   *.tar.gz^I^Icall tar#Browse(expand("<amatch>"))
строка 38:   au BufReadCmd   *.tar^I^I^Icall tar#Browse(expand("<amatch>"))
строка 39:   au BufReadCmd   *.lrp^I^I^Icall tar#Browse(expand("<amatch>"))
строка 40:   au BufReadCmd   *.tar.bz2^I^Icall tar#Browse(expand("<amatch>"))
строка 41:   au BufReadCmd   *.tar.Z^I^Icall tar#Browse(expand("<amatch>"))
строка 42:   au BufReadCmd   *.tgz^I^I^Icall tar#Browse(expand("<amatch>"))
строка 43:   au BufReadCmd   *.tar.lzma^Icall tar#Browse(expand("<amatch>"))
строка 44:   au BufReadCmd   *.tar.xz^I^Icall tar#Browse(expand("<amatch>"))
строка 45:   au BufReadCmd   *.txz^I^I^Icall tar#Browse(expand("<amatch>"))
строка 46: augroup END
строка 47: com! -nargs=? -complete=file Vimuntar call tar#Vimuntar(<q-args>)
строка 48: 
строка 49: " ---------------------------------------------------------------------
строка 50: " Restoration And Modelines: {{{1
строка 51: " vim: fdm=marker
строка 52: let &cpo= s:keepcpo
строка 53: unlet s:keepcpo
считывание сценария /usr/share/vim/plugin/tarPlugin.vim завершено
chdir(/usr/share/vim/plugin)
fchdir() to previous dir
считывание сценария "/usr/share/vim/plugin/tohtml.vim"
строка 1: " Vim plugin for converting a syntax highlighted file to HTML.
строка 2: " Maintainer: Ben Fritz <fritzophrenic@gmail.com>
строка 3: " Last Change: 2011 May 26
строка 4: "
строка 5: " The core of the code is in $VIMRUNTIME/autoload/tohtml.vim and
строка 6: " $VIMRUNTIME/syntax/2html.vim
строка 7: "
строка 8: " TODO:
строка 9: "   * Options for generating the CSS in external style sheets. New :TOcss
строка 10: "     command to convert the current color scheme into a (mostly) generic CSS
строка 11: "     stylesheet which can be re-used. Alternate stylesheet support?
строка 12: "   * Pull in code from http://www.vim.org/scripts/script.php?script_id=3113 :
строка 13: "^I- listchars support
строка 14: "^I- full-line background highlight
строка 15: "^I- other?
строка 16: "   * Font auto-detection similar to
строка 17: "     http://www.vim.org/scripts/script.php?script_id=2384
строка 18: "   * Explicitly trigger IE8+ Standards Mode?
строка 19: "   * Make it so deleted lines in a diff don't create side-scrolling
строка 20: "   * Restore open/closed folds and cursor position after processing each file
строка 21: "     with option not to restore for speed increase
строка 22: "   * Undercurl support via dotted bottom border?
строка 23: "   * Add extra meta info (generation time, etc.)?
строка 24: "   * Tidy up so we can use strict doctype in even more situations
строка 25: "   * Implementation detail: add threshold for writing the lines to the html
строка 26: "     buffer before we're done (5000 or so lines should do it)
строка 27: "   * TODO comments for code cleanup scattered throughout
строка 28: "
строка 29: 
строка 30: if exists('g:loaded_2html_plugin')
строка 31:   finish
строка 32: endif
строка 33: let g:loaded_2html_plugin = 'vim7.3_v10'
строка 34: 
строка 35: "
строка 36: " Changelog:
строка 37: "   7.3_v10 (this version): Fix error E684 when converting a range wholly inside
строка 38: "                           multiple nested folds with dynamic folding on.
строка 39: "                           Also fix problem with foldtext in this situation.
строка 40: "   7.3_v9  (0877b8d6370e): Add html_pre_wrap option active with html_use_css
строка 41: "                           and without html_no_pre, default value same as
строка 42: "                           'wrap' option, (Andy Spencer). Don't use
строка 43: "                           'fileencoding' for converted document encoding if
строка 44: "                           'buftype' indicates a special buffer which isn't
строка 45: "                           written.
строка 46: "   7.3_v8  (85c5a72551e2): Add html_expand_tabs option to allow leaving tab
строка 47: "                           characters in generated output (Andy Spencer).
строка 48: "                           Escape text that looks like a modeline so Vim
строка 49: "                           doesn't use anything in the converted HTML as a
строка 50: "                           modeline. Bugfixes: Fix folding when a fold starts
строка 51: "                           before the conversion range. Remove fold column when
строка 52: "                           there are no folds.
строка 53: "   7.3_v7  (840c3cadb842): see betas released on vim_dev below:
строка 54: "                 7.3_v7b3: Fixed bug, convert Unicode to UTF-8 all the way.
строка 55: "                 7.3_v7b2: Remove automatic detection of encodings that are not
строка 56: "                           supported by all major browsers according to
строка 57: "                           http://wiki.whatwg.org/wiki/Web_Encodings and
строка 58: "                           convert to UTF-8 for all Unicode encodings. Make
строка 59: "                           HTML encoding to Vim encoding detection be
строка 60: "                           case-insensitive for built-in pairs.
строка 61: "                 7.3_v7b1: Remove use of setwinvar() function which cannot be
строка 62: "                           called in restricted mode (Andy Spencer). Use
строка 63: "                           'fencoding' instead of 'encoding' to determine by
строка 64: "                           charset, and make sure the 'fenc' of the generated
строка 65: "                           file matches its indicated charset. Add charsets for
строка 66: "                           all of Vim's natively supported encodings.
строка 67: "   7.3_v6  (0d3f0e3d289b): Really fix bug with 'nowrapscan', 'magic' and other
строка 68: "                           user settings interfering with diff mode generation,
строка 69: "                           trailing whitespace (e.g. line number column) when
строка 70: "                           using html_no_pre, and bugs when using
строка 71: "                           html_hover_unfold.
строка 72: "   7.3_v5  ( unreleased ): Fix bug with 'nowrapscan' and also with out-of-sync
строка 73: "                           folds in diff mode when first line was folded.
строка 74: "   7.3_v4  (7e008c174cc3): Bugfixes, especially for xhtml markup, and diff mode
строка 75: "   7.3_v3  (a29075150aee): Refactor option handling and make html_use_css
строка 76: "                           default to true when not set to anything. Use strict
строка 77: "                           doctypes where possible. Rename use_xhtml option to
строка 78: "                           html_use_xhtml for consistency. Use .xhtml extension
строка 79: "                           when using this option. Add meta tag for settings.
строка 80: "   7.3_v2  (80229a724a11): Fix syntax highlighting in diff mode to use both the
строка 81: "                           diff colors and the normal syntax colors
строка 82: "   7.3_v1  (e7751177126b): Add conceal support and meta tags in output
строка 83: "   Pre-v1 baseline: Mercurial changeset 3c9324c0800e
строка 84: 
строка 85: " Define the :TOhtml command when:
строка 86: " - 'compatible' is not set
строка 87: " - this plugin was not already loaded
строка 88: " - user commands are available.
строка 89: if !&cp && !exists(":TOhtml") && has("user_commands")
строка 90:   command -range=% TOhtml :call tohtml#Convert2HTML(<line1>, <line2>)
строка 91: endif
строка 92: 
строка 93: " Make sure any patches will probably use consistent indent
строка 94: "   vim: ts=8 sw=2 sts=2 noet
считывание сценария /usr/share/vim/plugin/tohtml.vim завершено
chdir(/usr/share/vim/plugin)
fchdir() to previous dir
считывание сценария "/usr/share/vim/plugin/vimballPlugin.vim"
строка 1: " vimballPlugin : construct a file containing both paths and files
строка 2: " Author: Charles E. Campbell, Jr.
строка 3: " Copyright: (c) 2004-2010 by Charles E. Campbell, Jr.
строка 4: "            The VIM LICENSE applies to Vimball.vim, and Vimball.txt
строка 5: "            (see |copyright|) except use "Vimball" instead of "Vim".
строка 6: "            No warranty, express or implied.
строка 7: "  *** ***   Use At-Your-Own-Risk!   *** ***
строка 8: "
строка 9: " (Rom 2:1 WEB) Therefore you are without excuse, O man, whoever you are who
строка 10: "      judge. For in that which you judge another, you condemn yourself. For
строка 11: "      you who judge practice the same things.
строка 12: " GetLatestVimScripts: 1502 1 :AutoInstall: vimball.vim
строка 13: 
строка 14: " ---------------------------------------------------------------------
строка 15: "  Load Once: {{{1
строка 16: if &cp || exists("g:loaded_vimballPlugin")
строка 17:  finish
строка 18: endif
строка 19: let g:loaded_vimballPlugin = "v34"
строка 20: let s:keepcpo              = &cpo
строка 21: set cpo&vim
строка 22: 
строка 23: " ------------------------------------------------------------------------------
строка 24: " Public Interface: {{{1
строка 25: com! -ra   -complete=file -na=+ -bang MkVimball^I^I^I^Icall vimball#MkVimball(<line1>,<line2>,<bang>0,<f-args>)
строка 26: com! -na=? -complete=dir  UseVimball^I^I^I^I^I^Icall vimball#Vimball(1,<f-args>)
строка 27: com! -na=0                VimballList^I^I^I^I^I^Icall vimball#Vimball(0)
строка 28: com! -na=* -complete=dir  RmVimball^I^I^I^I^I^I^Icall vimball#SaveSettings()|call vimball#RmVimball(<f-args>)|call vimball#RestoreSettings()
строка 29: au BufEnter  *.vba,*.vba.gz,*.vba.bz2,*.vba.zip,*.vba.xz^Isetlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
строка 30: au SourceCmd *.vba.gz,*.vba.bz2,*.vba.zip,*.vba.xz^I^I^Iif expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
строка 31: au SourceCmd *.vba^I^I^I^I^I^I^I^I^I^I^Iif expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|call vimball#Vimball(1)|close|else|call vimball#Vimball(1)|endif
строка 32: au BufEnter  *.vmb,*.vmb.gz,*.vmb.bz2,*.vmb.zip,*.vmb.xz^Isetlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
строка 33: au SourceCmd *.vmb.gz,*.vmb.bz2,*.vmb.zip,*.vmb.xz^I^I^Iif expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
строка 34: au SourceCmd *.vmb^I^I^I^I^I^I^I^I^I^I^Iif expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|call vimball#Vimball(1)|close|else|call vimball#Vimball(1)|endif
строка 35: 
строка 36: " =====================================================================
строка 37: " Restoration And Modelines: {{{1
строка 38: " vim: fdm=marker
строка 39: let &cpo= s:keepcpo
строка 40: unlet s:keepcpo
считывание сценария /usr/share/vim/plugin/vimballPlugin.vim завершено
chdir(/usr/share/vim/plugin)
fchdir() to previous dir
считывание сценария "/usr/share/vim/plugin/zipPlugin.vim"
строка 1: " zipPlugin.vim: Handles browsing zipfiles
строка 2: "            PLUGIN PORTION
строка 3: " Date:^I^I^IOct 05, 2007
строка 4: " Maintainer:^ICharles E Campbell, Jr <NdrOchip@ScampbellPfamily.AbizM-NOSPAM>
строка 5: " License:^I^IVim License  (see vim's :help license)
строка 6: " Copyright:    Copyright (C) 2005,2006 Charles E. Campbell, Jr. {{{1
строка 7: "               Permission is hereby granted to use and distribute this code,
строка 8: "               with or without modifications, provided that this copyright
строка 9: "               notice is copied with it. Like anything else that's free,
строка 10: "               zipPlugin.vim is provided *as is* and comes with no warranty
строка 11: "               of any kind, either expressed or implied. By using this
строка 12: "               plugin, you agree that in no event will the copyright
строка 13: "               holder be liable for any damages resulting from the use
строка 14: "               of this software.
строка 15: "
строка 16: " (James 4:8 WEB) Draw near to God, and he will draw near to you.
строка 17: " Cleanse your hands, you sinners; and purify your hearts, you double-minded.
строка 18: " ---------------------------------------------------------------------
строка 19: " Load Once: {{{1
строка 20: if &cp || exists("g:loaded_zipPlugin")
строка 21:  finish
строка 22: endif
строка 23: let g:loaded_zipPlugin = "v24"
строка 24: let s:keepcpo          = &cpo
строка 25: set cpo&vim
строка 26: 
строка 27: " ---------------------------------------------------------------------
строка 28: " Public Interface: {{{1
строка 29: augroup zip
строка 30:  au!
строка 31:  au BufReadCmd   zipfile:*^Icall zip#Read(expand("<amatch>"), 1)
строка 32:  au FileReadCmd  zipfile:*^Icall zip#Read(expand("<amatch>"), 0)
строка 33:  au BufWriteCmd  zipfile:*^Icall zip#Write(expand("<amatch>"))
строка 34:  au FileWriteCmd zipfile:*^Icall zip#Write(expand("<amatch>"))
строка 35: 
строка 36:  if has("unix")
строка 37:   au BufReadCmd   zipfile:*/*^Icall zip#Read(expand("<amatch>"), 1)
строка 38:   au FileReadCmd  zipfile:*/*^Icall zip#Read(expand("<amatch>"), 0)
строка 39:   au BufWriteCmd  zipfile:*/*^Icall zip#Write(expand("<amatch>"))
строка 40:   au FileWriteCmd zipfile:*/*^Icall zip#Write(expand("<amatch>"))
строка 41:  endif
строка 42: 
строка 43:  au BufReadCmd   *.zip,*.jar,*.xpi,*.war,*.ear,*.celzip^I^Icall zip#Browse(expand("<amatch>"))
строка 44: augroup END
строка 45: 
строка 46: " ---------------------------------------------------------------------
строка 47: "  Restoration And Modelines: {{{1
строка 48: "  vim: fdm=marker
строка 49: let &cpo= s:keepcpo
строка 50: unlet s:keepcpo
считывание сценария /usr/share/vim/plugin/zipPlugin.vim завершено
Поиск "/usr/share/vim/vimfiles/after/plugin/**/*.vim"
Поиск "/home/black/.vim/after/plugin/**/*.vim"
Чтение файла viminfo "/home/black/.viminfo" инфо oldfiles
Открытие дисплея X заняло 2 msec
Проверка дисплея X завершена неудачно
XSMP обрабатывает запрос самосохранения
                                                                       "glava6.tex" 
"glava6.tex" 2188L, 125436C
Чтение файла viminfo "/home/black/.viminfo" отметок
Выполнение BufRead Автокоманды для "*.tex"
автокоманда call s:FTtex()

строка 0: call s:FTtex()
вызов function <SNR>5_FTtex()

строка 1:   let firstline = getline(1)
строка 2:   if firstline =~ '^%&\s*\a\+'
строка 3:     let format = tolower(matchstr(firstline, '\a\+'))
строка 4:     let format = substitute(format, 'pdf', '', '')
строка 5:     if format == 'tex'
строка 6:       let format = 'plain'
строка 7:     endif
строка 8:   else
строка 9:     " Default value, may be changed later:
строка 10:     let format = exists("g:tex_flavor") ? g:tex_flavor : 'plain'
строка 11:     " Save position, go to the top of the file, find first non-comment line.
строка 12:     let save_cursor = getpos('.')
строка 13:     call cursor(1,1)
строка 14:     let firstNC = search('^\s*[^[:space:]%]', 'c', 1000)
строка 15:     if firstNC " Check the next thousand lines for a LaTeX or ConTeXt keyword.
строка 16:       let lpat = 'documentclass\>\|usepackage\>\|begin{\|newcommand\>\|renewcommand\>'
строка 17:       let cpat = 'start\a\+\|setup\a\+\|usemodule\|enablemode\|enableregime\|setvariables\|useencoding\|usesymbols\|stelle\a\+\|verwende\a\+\|stel\a\+\|gebruik\a\+\|usa\a\+\|imposta\a\+\|regle\a\+\|utilisemodule\>'
строка 18:       let kwline = search('^\s*\\\%(' . lpat . '\)\|^\s*\\\(' . cpat . '\)', 'cnp', firstNC + 1000)
строка 20:       if kwline == 1^I" lpat matched
строка 21: ^Ilet format = 'latex'
строка 22:       elseif kwline == 2^I" cpat matched
строка 23: ^Ilet format = 'context'
строка 24:       endif^I^I" If neither matched, keep default set above.
строка 25:       " let lline = search('^\s*\\\%(' . lpat . '\)', 'cn', firstNC + 1000)
строка 26:       " let cline = search('^\s*\\\%(' . cpat . '\)', 'cn', firstNC + 1000)
строка 27:       " if cline > 0
строка 28:       "   let format = 'context'
строка 29:       " endif
строка 30:       " if lline > 0 && (cline == 0 || cline > lline)
строка 31:       "   let format = 'tex'
строка 32:       " endif
строка 33:     endif " firstNC
строка 34:     call setpos('.', save_cursor)
строка 35:   endif " firstline =~ '^%&\s*\a\+'
строка 36: 
строка 37:   " Translation from formats to file types.  TODO:  add AMSTeX, RevTex, others?
строка 38:   if format == 'plain'
строка 39:     setf plaintex
строка 40:   elseif format == 'context'
строка 41:     setf context
строка 42:   else " probably LaTeX
строка 43:     setf tex
Выполнение FileType Автокоманды для "*"
автокоманда exe "set syntax=" . expand("<amatch>")

строка 0: exe "set syntax=" . expand("<amatch>")
строка 0: set syntax=tex
Выполнение Syntax Автокоманды для "*"
автокоманда call s:SynSet()

строка 0: call s:SynSet()
вызов function <SNR>3_SynSet()

строка 1:   " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
строка 2:   syn clear
строка 3:   if exists("b:current_syntax")
строка 4:     unlet b:current_syntax
строка 5:   endif
строка 6: 
строка 7:   let s = expand("<amatch>")
строка 8:   if s == "ON"
строка 9:     " :set syntax=ON
строка 10:     if &filetype == ""
строка 11:       echohl ErrorMsg
строка 12:       echo "filetype unknown"
строка 13:       echohl None
строка 14:     endif
строка 15:     let s = &filetype
строка 16:   endif
строка 17: 
строка 18:   if s != ""
строка 19:     " Load the syntax file(s).  When there are several, separated by dots,
строка 20:     " load each in sequence.
строка 21:     for name in split(s, '\.')
строка 22:       exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
строка 22: runtime! syntax/tex.vim syntax/tex/*.vim
Поиск "syntax/tex.vim syntax/tex/*.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/syntax/tex.vim"
Поиск "/home/black/.vim/syntax/tex/*.vim"
Поиск "/usr/share/vim/vimfiles/syntax/tex.vim"
Поиск "/usr/share/vim/vimfiles/syntax/tex/*.vim"
Поиск "/usr/share/vim/syntax/tex.vim"
chdir(/usr/share/vim/syntax)
fchdir() to previous dir
строка 22: считывание "/usr/share/vim/syntax/tex.vim"
строка 1: " Vim syntax file
строка 2: " Language:^ITeX
строка 3: " Maintainer:^IDr. Charles E. Campbell, Jr. <NdrchipO@ScampbellPfamily.AbizM>
строка 4: " Last Change:^IOct 12, 2011 
строка 5: " Version:^I69
строка 6: " URL:^I^Ihttp://mysite.verizon.net/astronaut/vim/index.html#vimlinks_syntax
строка 7: "
строка 8: " Notes: {{{1
строка 9: "
строка 10: " 1. If you have a \begin{verbatim} that appears to overrun its boundaries,
строка 11: "    use %stopzone.
строка 12: "
строка 13: " 2. Run-on equations ($..$ and $$..$$, particularly) can also be stopped
строка 14: "    by suitable use of %stopzone.
строка 15: "
строка 16: " 3. If you have a slow computer, you may wish to modify
строка 17: "
строка 18: "^Isyn sync maxlines=200
строка 19: "^Isyn sync minlines=50
строка 20: "
строка 21: "    to values that are more to your liking.
строка 22: "
строка 23: " 4. There is no match-syncing for $...$ and $$...$$; hence large
строка 24: "    equation blocks constructed that way may exhibit syncing problems.
строка 25: "    (there's no difference between begin/end patterns)
строка 26: "
строка 27: " 5. If you have the variable "g:tex_no_error" defined then none of the
строка 28: "    lexical error-checking will be done.
строка 29: "
строка 30: "    ie. let g:tex_no_error=1
строка 31: 
строка 32: " Version Clears: {{{1
строка 33: " For version 5.x: Clear all syntax items
строка 34: " For version 6.x: Quit when a syntax file was already loaded
строка 35: if version < 600
строка 36:   syntax clear
строка 37: elseif exists("b:current_syntax")
строка 38:   finish
строка 39: endif
строка 40: let s:keepcpo= &cpo
строка 41: set cpo&vim
строка 42: scriptencoding utf-8
строка 43: 
строка 44: " Define the default highlighting. {{{1
строка 45: " For version 5.7 and earlier: only when not done already
строка 46: " For version 5.8 and later: only when an item doesn't have highlighting yet
строка 47: if version >= 508 || !exists("did_tex_syntax_inits")
строка 48:  let did_tex_syntax_inits = 1
строка 49:  if version < 508
строка 50:   command -nargs=+ HiLink hi link <args>
строка 51:  else
строка 52:   command -nargs=+ HiLink hi def link <args>
строка 53:  endif
строка 54: endif
строка 55: if exists("g:tex_tex") && !exists("g:tex_no_error")
строка 56:  let g:tex_no_error= 1
строка 57: endif
строка 58: 
строка 59: " let user determine which classes of concealment will be supported
строка 60: "   a=accents/ligatures d=delimiters m=math symbols  g=Greek  s=superscripts/subscripts
строка 61: if !exists("g:tex_conceal")
строка 62:  let s:tex_conceal= 'admgs'
строка 63: else
строка 64:  let s:tex_conceal= g:tex_conceal
строка 65: endif
строка 66: 
строка 67: " Determine whether or not to use "*.sty" mode {{{1
строка 68: " The user may override the normal determination by setting
строка 69: "   g:tex_stylish to 1      (for    "*.sty" mode)
строка 70: "    or to           0 else (normal "*.tex" mode)
строка 71: " or on a buffer-by-buffer basis with b:tex_stylish
строка 72: let s:extfname=expand("%:e")
строка 73: if exists("g:tex_stylish")
строка 74:  let b:tex_stylish= g:tex_stylish
строка 75: elseif !exists("b:tex_stylish")
строка 76:  if s:extfname == "sty" || s:extfname == "cls" || s:extfname == "clo" || s:extfname == "dtx" || s:extfname == "ltx"
строка 77:   let b:tex_stylish= 1
строка 78:  else
строка 79:   let b:tex_stylish= 0
строка 80:  endif
строка 81: endif
строка 82: 
строка 83: " handle folding {{{1
строка 84: if !exists("g:tex_fold_enabled")
строка 85:  let g:tex_fold_enabled= 0
строка 86: elseif g:tex_fold_enabled && !has("folding")
строка 87:  let g:tex_fold_enabled= 0
строка 88:  echomsg "Ignoring g:tex_fold_enabled=".g:tex_fold_enabled."; need to re-compile vim for +fold support"
строка 89: endif
строка 90: if g:tex_fold_enabled && &fdm == "manual"
строка 91:  setl fdm=syntax
строка 92: endif
строка 93: 
строка 94: " (La)TeX keywords: uses the characters 0-9,a-z,A-Z,192-255 only... {{{1
строка 95: " but _ is the only one that causes problems.
строка 96: " One may override this iskeyword setting by providing
строка 97: " g:tex_isk
строка 98: if exists("g:tex_isk")
строка 99:  exe "setlocal isk=".g:tex_isk
строка 100: else
строка 101:  setlocal isk=48-57,a-z,A-Z,192-255
строка 102: endif
строка 103: if b:tex_stylish
строка 104:   setlocal isk+=@-@
строка 105: endif
строка 106: if exists("g:tex_nospell") && g:tex_nospell && !exists("g:tex_comment_nospell")
строка 107:  let g:tex_comment_nospell= 1
строка 108: endif
строка 109: 
строка 110: " Clusters: {{{1
строка 111: " --------
строка 112: syn cluster texCmdGroup^I^Icontains=texCmdBody,texComment,texDefParm,texDelimiter,texDocType,texInput,texLength,texLigature,texMathDelim,texMathOper,texNewCmd,texNewEnv,texRefZone,texSection,texSectionMarker,texSectionName,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle
строка 113: if !exists("g:tex_no_error")
строка 114:  syn cluster texCmdGroup^Iadd=texMathError
строка 115: endif
строка 116: syn cluster texEnvGroup^I^Icontains=texMatcher,texMathDelim,texSpecialChar,texStatement
строка 117: syn cluster texFoldGroup^Icontains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texInputFile,texLength,texLigature,texMatcher,texMathZoneV,texMathZoneW,texMathZoneX,texMathZoneY,texMathZoneZ,texNewCmd,texNewEnv,texOnlyMath,texOption,texParen,texRefZone,texSection,texSectionMarker,texSectionZone,texSpaceCode,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,@texMathZones,texTitle,texAbstract
строка 118: if !exists("g:tex_nospell") || !g:tex_nospell
строка 119:  syn cluster texMatchGroup^Icontains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texMatcher,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,texInputFile,texOption,@Spell
строка 120:  syn cluster texStyleGroup^Icontains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,texInputFile,texOption,texStyleStatement,@Spell,texStyleMatcher
строка 121: else
строка 122:  syn cluster texMatchGroup^Icontains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texMatcher,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,texInputFile,texOption
строка 123:  syn cluster texStyleGroup^Icontains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,texInputFile,texOption,texStyleStatement,texStyleMatcher
строка 124: endif
строка 125: syn cluster texRefGroup^I^Icontains=texMatcher,texComment,texDelimiter
строка 126: if !exists("tex_no_math")
строка 127:  syn cluster texMathZones^Icontains=texMathZoneV,texMathZoneW,texMathZoneX,texMathZoneY,texMathZoneZ
строка 128:  syn cluster texMatchGroup^Iadd=@texMathZones
строка 129:  syn cluster texMathDelimGroup^Icontains=texMathDelimBad,texMathDelimKey,texMathDelimSet1,texMathDelimSet2
строка 130:  syn cluster texMathMatchGroup^Icontains=@texMathZones,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texMathDelim,texMathMatcher,texMathOper,texNewCmd,texNewEnv,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone
строка 131:  syn cluster texMathZoneGroup^Icontains=texComment,texDelimiter,texLength,texMathDelim,texMathMatcher,texMathOper,texMathSymbol,texMathText,texRefZone,texSpecialChar,texStatement,texTypeSize,texTypeStyle
строка 132:  if !exists("g:tex_no_error")
строка 133:   syn cluster texMathMatchGroup^Iadd=texMathError
строка 134:   syn cluster texMathZoneGroup^Iadd=texMathError
строка 135:  endif
строка 136:  syn cluster texMathZoneGroup add=@NoSpell
строка 137:  " following used in the \part \chapter \section \subsection \subsubsection
строка 138:  " \paragraph \subparagraph \author \title highlighting
строка 139:  syn cluster texDocGroup^I^Icontains=texPartZone,@texPartGroup
строка 140:  syn cluster texPartGroup^I^Icontains=texChapterZone,texSectionZone,texParaZone
строка 141:  syn cluster texChapterGroup^I^Icontains=texSectionZone,texParaZone
строка 142:  syn cluster texSectionGroup^I^Icontains=texSubSectionZone,texParaZone
строка 143:  syn cluster texSubSectionGroup^I^Icontains=texSubSubSectionZone,texParaZone
строка 144:  syn cluster texSubSubSectionGroup^Icontains=texParaZone
строка 145:  syn cluster texParaGroup^I^Icontains=texSubParaZone
строка 146:  if has("conceal") && &enc == 'utf-8'
строка 147:   syn cluster texMathZoneGroup^Iadd=texGreek,texSuperscript,texSubscript,texMathSymbol
строка 148:   syn cluster texMathMatchGroup^Iadd=texGreek,texSuperscript,texSubscript,texMathSymbol
строка 149:  endif
строка 150: endif
строка 151: 
строка 152: " Try to flag {} and () mismatches: {{{1
строка 153: if !exists("g:tex_no_error")
строка 154:  syn region texMatcher^I^Imatchgroup=Delimiter start="{" skip="\\\\\|\\[{}]"^Iend="}"^I^Icontains=@texMatchGroup,texError
строка 155:  syn region texMatcher^I^Imatchgroup=Delimiter start="\["^I^I^I^Iend="]"^I^Icontains=@texMatchGroup,texError
строка 156: else
строка 157:  syn region texMatcher^I^Imatchgroup=Delimiter start="{" skip="\\\\\|\\[{}]"^Iend="}"^I^Icontains=@texMatchGroup
строка 158:  syn region texMatcher^I^Imatchgroup=Delimiter start="\["^I^I^I^Iend="]"^I^Icontains=@texMatchGroup
строка 159: endif
строка 160: if !exists("g:tex_nospell") || !g:tex_nospell
строка 161:  syn region texParen^I^Istart="("^I^I^I^I^I^Iend=")"^I^Icontains=@texMatchGroup,@Spell
строка 162: else
строка 163:  syn region texParen^I^Istart="("^I^I^I^I^I^Iend=")"^I^Icontains=@texMatchGroup
строка 164: endif
строка 165: if !exists("g:tex_no_error")
строка 166:  syn match  texError^I^I"[}\])]"
строка 167: endif
строка 168: if !exists("tex_no_math")
строка 169:  if !exists("g:tex_no_error")
строка 170:   syn match  texMathError^I"}"^Icontained
строка 171:  endif
строка 172:  syn region texMathMatcher^Imatchgroup=Delimiter^Istart="{"          skip="\\\\\|\\}"     end="}" end="%stopzone\>"^Icontained contains=@texMathMatchGroup
строка 173: " syn region texMathMatcher^Imatchgroup=Unique^Istart="[^\\]\zs{"  skip="\\\\\|\\[{}]"  end="}" end="%stopzone\>"^Icontained contains=@texMathMatchGroup
строка 174: endif
строка 175: 
строка 176: " TeX/LaTeX keywords: {{{1
строка 177: " Instead of trying to be All Knowing, I just match \..alphameric..
строка 178: " Note that *.tex files may not have "@" in their \commands
строка 179: if exists("g:tex_tex") || b:tex_stylish
строка 180:   syn match texStatement^I"\\[a-zA-Z@]\+"
строка 181: else
строка 182:   syn match texStatement^I"\\\a\+"
строка 183:   if !exists("g:tex_no_error")
строка 184:    syn match texError^I^I"\\\a*@[a-zA-Z@]*"
строка 185:   endif
строка 186: endif
строка 187: 
строка 188: " TeX/LaTeX delimiters: {{{1
строка 189: syn match texDelimiter^I^I"&"
строка 190: syn match texDelimiter^I^I"\\\\"
строка 191: syn match texDelimiter^I^I"[{}]"
строка 192: 
строка 193: " Tex/Latex Options: {{{1
строка 194: syn match texOption^I"[^\\]\zs#\d\+\|^#\d\+"
строка 195: 
строка 196: " texAccent (tnx to Karim Belabas) avoids annoying highlighting for accents: {{{1
строка 197: if b:tex_stylish
строка 198:   syn match texAccent^I^I"\\[bcdvuH][^a-zA-Z@]"me=e-1
строка 199:   syn match texLigature^I^I"\\\([ijolL]\|ae\|oe\|ss\|AA\|AE\|OE\)[^a-zA-Z@]"me=e-1
строка 200: else
строка 201:   syn match texAccent^I^I"\\[bcdvuH]\A"me=e-1
строка 202:   syn match texLigature^I^I"\\\([ijolL]\|ae\|oe\|ss\|AA\|AE\|OE\)\A"me=e-1
строка 203: endif
строка 204: syn match texAccent^I^I"\\[bcdvuH]$"
строка 205: syn match texAccent^I^I+\\[=^.\~"`']+
строка 206: syn match texAccent^I^I+\\['=t'.c^ud"vb~Hr]{\a}+
строка 207: syn match texLigature^I^I"\\\([ijolL]\|ae\|oe\|ss\|AA\|AE\|OE\)$"
строка 208: 
строка 209: " \begin{}/\end{} section markers: {{{1
строка 210: syn match  texSectionMarker^I"\\begin\>\|\\end\>" nextgroup=texSectionName
строка 211: syn region texSectionName^Imatchgroup=Delimiter start="{" end="}"  contained^Inextgroup=texSectionModifier^Icontains=texComment
строка 212: syn region texSectionModifier^Imatchgroup=Delimiter start="\[" end="]" contained^Icontains=texComment
строка 213: 
строка 214: " \documentclass, \documentstyle, \usepackage: {{{1
строка 215: syn match  texDocType^I^I"\\documentclass\>\|\\documentstyle\>\|\\usepackage\>"^Inextgroup=texSectionName,texDocTypeArgs
строка 216: syn region texDocTypeArgs^Imatchgroup=Delimiter start="\[" end="]"^I^I^Icontained^Inextgroup=texSectionName^Icontains=texComment
строка 217: 
строка 218: " Preamble syntax-based folding support: {{{1
строка 219: if g:tex_fold_enabled && has("folding")
строка 220:  syn region texPreamble^Itransparent fold^Istart='\zs\\documentclass\>' end='\ze\\begin{document}'^Icontains=texStyle,@texMatchGroup
строка 221: endif
строка 222: 
строка 223: " TeX input: {{{1
строка 224: syn match texInput^I^I"\\input\s\+[a-zA-Z/.0-9_^]\+"hs=s+7^I^I^I^Icontains=texStatement
строка 225: syn match texInputFile^I^I"\\include\(graphics\|list\)\=\(\[.\{-}\]\)\=\s*{.\{-}}"^Icontains=texStatement,texInputCurlies,texInputFileOpt
строка 226: syn match texInputFile^I^I"\\\(epsfig\|input\|usepackage\)\s*\(\[.*\]\)\={.\{-}}"^I^Icontains=texStatement,texInputCurlies,texInputFileOpt
строка 227: syn match texInputCurlies^I"[{}]"^I^I^I^I^I^I^I^Icontained
строка 228: syn region texInputFileOpt^Imatchgroup=Delimiter start="\[" end="\]"^I^I^Icontained^Icontains=texComment
строка 229: 
строка 230: " Type Styles (LaTeX 2.09): {{{1
строка 231: syn match texTypeStyle^I^I"\\rm\>"
строка 232: syn match texTypeStyle^I^I"\\em\>"
строка 233: syn match texTypeStyle^I^I"\\bf\>"
строка 234: syn match texTypeStyle^I^I"\\it\>"
строка 235: syn match texTypeStyle^I^I"\\sl\>"
строка 236: syn match texTypeStyle^I^I"\\sf\>"
строка 237: syn match texTypeStyle^I^I"\\sc\>"
строка 238: syn match texTypeStyle^I^I"\\tt\>"
строка 239: 
строка 240: " Type Styles: attributes, commands, families, etc (LaTeX2E): {{{1
строка 241: syn match texTypeStyle^I^I"\\textbf\>"
строка 242: syn match texTypeStyle^I^I"\\textit\>"
строка 243: syn match texTypeStyle^I^I"\\textmd\>"
строка 244: syn match texTypeStyle^I^I"\\textrm\>"
строка 245: syn match texTypeStyle^I^I"\\textsc\>"
строка 246: syn match texTypeStyle^I^I"\\textsf\>"
строка 247: syn match texTypeStyle^I^I"\\textsl\>"
строка 248: syn match texTypeStyle^I^I"\\texttt\>"
строка 249: syn match texTypeStyle^I^I"\\textup\>"
строка 250: syn match texTypeStyle^I^I"\\emph\>"
строка 251: 
строка 252: syn match texTypeStyle^I^I"\\mathbb\>"
строка 253: syn match texTypeStyle^I^I"\\mathbf\>"
строка 254: syn match texTypeStyle^I^I"\\mathcal\>"
строка 255: syn match texTypeStyle^I^I"\\mathfrak\>"
строка 256: syn match texTypeStyle^I^I"\\mathit\>"
строка 257: syn match texTypeStyle^I^I"\\mathnormal\>"
строка 258: syn match texTypeStyle^I^I"\\mathrm\>"
строка 259: syn match texTypeStyle^I^I"\\mathsf\>"
строка 260: syn match texTypeStyle^I^I"\\mathtt\>"
строка 261: 
строка 262: syn match texTypeStyle^I^I"\\rmfamily\>"
строка 263: syn match texTypeStyle^I^I"\\sffamily\>"
строка 264: syn match texTypeStyle^I^I"\\ttfamily\>"
строка 265: 
строка 266: syn match texTypeStyle^I^I"\\itshape\>"
строка 267: syn match texTypeStyle^I^I"\\scshape\>"
строка 268: syn match texTypeStyle^I^I"\\slshape\>"
строка 269: syn match texTypeStyle^I^I"\\upshape\>"
строка 270: 
строка 271: syn match texTypeStyle^I^I"\\bfseries\>"
строка 272: syn match texTypeStyle^I^I"\\mdseries\>"
строка 273: 
строка 274: " Some type sizes: {{{1
строка 275: syn match texTypeSize^I^I"\\tiny\>"
строка 276: syn match texTypeSize^I^I"\\scriptsize\>"
строка 277: syn match texTypeSize^I^I"\\footnotesize\>"
строка 278: syn match texTypeSize^I^I"\\small\>"
строка 279: syn match texTypeSize^I^I"\\normalsize\>"
строка 280: syn match texTypeSize^I^I"\\large\>"
строка 281: syn match texTypeSize^I^I"\\Large\>"
строка 282: syn match texTypeSize^I^I"\\LARGE\>"
строка 283: syn match texTypeSize^I^I"\\huge\>"
строка 284: syn match texTypeSize^I^I"\\Huge\>"
строка 285: 
строка 286: " Spacecodes (TeX'isms): {{{1
строка 287: " \mathcode`\^^@="2201  \delcode`\(="028300  \sfcode`\)=0 \uccode`X=`X  \lccode`x=`x
строка 288: syn match texSpaceCode^I^I"\\\(math\|cat\|del\|lc\|sf\|uc\)code`"me=e-1 nextgroup=texSpaceCodeChar
строка 289: syn match texSpaceCodeChar    "`\\\=.\(\^.\)\==\(\d\|\"\x\{1,6}\|`.\)"^Icontained
строка 290: 
строка 291: " Sections, subsections, etc: {{{1
строка 292: if !exists("g:tex_nospell") || !g:tex_nospell
строка 293:  if g:tex_fold_enabled && has("folding")
строка 294:   syn region texDocZone^I^I^Imatchgroup=texSection start='\\begin\s*{\s*document\s*}' end='\\end\s*{\s*document\s*}'^I^I^I^I^I^I^I^I^I^I^Ifold contains=@texFoldGroup,@texDocGroup,@Spell
строка 295:   syn region texPartZone^I^Imatchgroup=texSection start='\\part\>'^I^I^I end='\ze\s*\\\%(part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^I^I^I^Ifold contains=@texFoldGroup,@texPartGroup,@Spell
строка 296:   syn region texChapterZone^I^Imatchgroup=texSection start='\\chapter\>'^I^I end='\ze\s*\\\%(chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^I^I^Ifold contains=@texFoldGroup,@texChapterGroup,@Spell
строка 297:   syn region texSectionZone^I^Imatchgroup=texSection start='\\section\>'^I^I end='\ze\s*\\\%(section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^Ifold contains=@texFoldGroup,@texSectionGroup,@Spell
строка 298:   syn region texSubSectionZone^I^Imatchgroup=texSection start='\\subsection\>'^I^I end='\ze\s*\\\%(\%(sub\)\=section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^Ifold contains=@texFoldGroup,@texSubSectionGroup,@Spell
строка 299:   syn region texSubSubSectionZone^Imatchgroup=texSection start='\\subsubsection\>'^I^I end='\ze\s*\\\%(\%(sub\)\{,2}section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^Ifold contains=@texFoldGroup,@texSubSubSectionGroup,@Spell
строка 300:   syn region texParaZone^I^Imatchgroup=texSection start='\\paragraph\>'^I^I end='\ze\s*\\\%(paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^Ifold contains=@texFoldGroup,@texParaGroup,@Spell
строка 301:   syn region texSubParaZone^I^Imatchgroup=texSection start='\\subparagraph\>'^I^I end='\ze\s*\\\%(\%(sub\)\=paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^Ifold contains=@texFoldGroup,@Spell
строка 302:   syn region texTitle^I^I^Imatchgroup=texSection start='\\\%(author\|title\)\>\s*{' end='}'^I^I^I^I^I^I^I^I^I^I^I^I^Ifold contains=@texFoldGroup,@Spell
строка 303:   syn region texAbstract^I^Imatchgroup=texSection start='\\begin\s*{\s*abstract\s*}' end='\\end\s*{\s*abstract\s*}'^I^I^I^I^I^I^I^I^I^I^Ifold contains=@texFoldGroup,@Spell
строка 304:  else
строка 305:   syn region texDocZone^I^I^Imatchgroup=texSection start='\\begin\s*{\s*document\s*}' end='\\end\s*{\s*document\s*}'^I^I^I^I^I^I^I^I^I^I^Icontains=@texFoldGroup,@texDocGroup,@Spell
строка 306:   syn region texPartZone^I^Imatchgroup=texSection start='\\part\>'^I^I^I end='\ze\s*\\\%(part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^I^I^I^Icontains=@texFoldGroup,@texPartGroup,@Spell
строка 307:   syn region texChapterZone^I^Imatchgroup=texSection start='\\chapter\>'^I^I end='\ze\s*\\\%(chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^I^I^Icontains=@texFoldGroup,@texChapterGroup,@Spell
строка 308:   syn region texSectionZone^I^Imatchgroup=texSection start='\\section\>'^I^I end='\ze\s*\\\%(section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^Icontains=@texFoldGroup,@texSectionGroup,@Spell
строка 309:   syn region texSubSectionZone^I^Imatchgroup=texSection start='\\subsection\>'^I^I end='\ze\s*\\\%(\%(sub\)\=section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^Icontains=@texFoldGroup,@texSubSectionGroup,@Spell
строка 310:   syn region texSubSubSectionZone^Imatchgroup=texSection start='\\subsubsection\>'^I^I end='\ze\s*\\\%(\%(sub\)\{,2}section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^Icontains=@texFoldGroup,@texSubSubSectionGroup,@Spell
строка 311:   syn region texParaZone^I^Imatchgroup=texSection start='\\paragraph\>'^I^I end='\ze\s*\\\%(paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^Icontains=@texFoldGroup,@texParaGroup,@Spell
строка 312:   syn region texSubParaZone^I^Imatchgroup=texSection start='\\subparagraph\>'^I^I end='\ze\s*\\\%(\%(sub\)\=paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^Icontains=@texFoldGroup,@Spell
строка 313:   syn region texTitle^I^I^Imatchgroup=texSection start='\\\%(author\|title\)\>\s*{' end='}'^I^I^I^I^I^I^I^I^I^I^I^I^Icontains=@texFoldGroup,@Spell
строка 314:   syn region texAbstract^I^Imatchgroup=texSection start='\\begin\s*{\s*abstract\s*}' end='\\end\s*{\s*abstract\s*}'^I^I^I^I^I^I^I^I^I^I^Icontains=@texFoldGroup,@Spell
строка 315:  endif
строка 316: else
строка 317:  if g:tex_fold_enabled && has("folding")
строка 318:   syn region texDocZone^I^I^Imatchgroup=texSection start='\\begin\s*{\s*document\s*}' end='\\end\s*{\s*document\s*}'^I^I^I^I^I^I^I^I^I^I^Ifold contains=@texFoldGroup,@texDocGroup
строка 319:   syn region texPartZone^I^Imatchgroup=texSection start='\\part\>'^I^I^I end='\ze\s*\\\%(part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^I^I^I^Ifold contains=@texFoldGroup,@texPartGroup
строка 320:   syn region texChapterZone^I^Imatchgroup=texSection start='\\chapter\>'^I^I end='\ze\s*\\\%(chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^I^I^Ifold contains=@texFoldGroup,@texChapterGroup
строка 321:   syn region texSectionZone^I^Imatchgroup=texSection start='\\section\>'^I^I end='\ze\s*\\\%(section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^Ifold contains=@texFoldGroup,@texSectionGroup
строка 322:   syn region texSubSectionZone^I^Imatchgroup=texSection start='\\subsection\>'^I^I end='\ze\s*\\\%(\%(sub\)\=section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^Ifold contains=@texFoldGroup,@texSubSectionGroup
строка 323:   syn region texSubSubSectionZone^Imatchgroup=texSection start='\\subsubsection\>'^I^I end='\ze\s*\\\%(\%(sub\)\{,2}section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^Ifold contains=@texFoldGroup,@texSubSubSectionGroup
строка 324:   syn region texParaZone^I^Imatchgroup=texSection start='\\paragraph\>'^I^I end='\ze\s*\\\%(paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^Ifold contains=@texFoldGroup,@texParaGroup
строка 325:   syn region texSubParaZone^I^Imatchgroup=texSection start='\\subparagraph\>'^I^I end='\ze\s*\\\%(\%(sub\)\=paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^Ifold contains=@texFoldGroup
строка 326:   syn region texTitle^I^I^Imatchgroup=texSection start='\\\%(author\|title\)\>\s*{' end='}'^I^I^I^I^I^I^I^I^I^I^I^I^Ifold contains=@texFoldGroup
строка 327:   syn region texAbstract^I^Imatchgroup=texSection start='\\begin\s*{\s*abstract\s*}' end='\\end\s*{\s*abstract\s*}'^I^I^I^I^I^I^I^I^I^I^Ifold contains=@texFoldGroup
строка 328:  else
строка 329:   syn region texDocZone^I^I^Imatchgroup=texSection start='\\begin\s*{\s*document\s*}' end='\\end\s*{\s*document\s*}'^I^I^I^I^I^I^I^I^I^I^Icontains=@texFoldGroup,@texDocGroup
строка 330:   syn region texPartZone^I^Imatchgroup=texSection start='\\part\>'^I^I^I end='\ze\s*\\\%(part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^I^I^I^Icontains=@texFoldGroup,@texPartGroup
строка 331:   syn region texChapterZone^I^Imatchgroup=texSection start='\\chapter\>'^I^I end='\ze\s*\\\%(chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^I^I^Icontains=@texFoldGroup,@texChapterGroup
строка 332:   syn region texSectionZone^I^Imatchgroup=texSection start='\\section\>'^I^I end='\ze\s*\\\%(section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^I^Icontains=@texFoldGroup,@texSectionGroup
строка 333:   syn region texSubSectionZone^I^Imatchgroup=texSection start='\\subsection\>'^I^I end='\ze\s*\\\%(\%(sub\)\=section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^Icontains=@texFoldGroup,@texSubSectionGroup
строка 334:   syn region texSubSubSectionZone^Imatchgroup=texSection start='\\subsubsection\>'^I^I end='\ze\s*\\\%(\%(sub\)\{,2}section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^I^Icontains=@texFoldGroup,@texSubSubSectionGroup
строка 335:   syn region texParaZone^I^Imatchgroup=texSection start='\\paragraph\>'^I^I end='\ze\s*\\\%(paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^I^I^Icontains=@texFoldGroup,@texParaGroup
строка 336:   syn region texSubParaZone^I^Imatchgroup=texSection start='\\subparagraph\>'^I^I end='\ze\s*\\\%(\%(sub\)\=paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'^Icontains=@texFoldGroup
строка 337:   syn region texTitle^I^I^Imatchgroup=texSection start='\\\%(author\|title\)\>\s*{' end='}'^I^I^I^I^I^I^I^I^I^I^I^I^Icontains=@texFoldGroup
строка 338:   syn region texAbstract^I^Imatchgroup=texSection start='\\begin\s*{\s*abstract\s*}' end='\\end\s*{\s*abstract\s*}'^I^I^I^I^I^I^I^I^I^I^Icontains=@texFoldGroup
строка 339:  endif
строка 340: endif
строка 341: 
строка 342: " Bad Math (mismatched): {{{1
строка 343: if !exists("tex_no_math")
строка 344:  syn match texBadMath^I^I"\\end\s*{\s*\(array\|gathered\|bBpvV]matrix\|split\|subequations\|smallmatrix\|xxalignat\)\s*}"
строка 345:  syn match texBadMath^I^I"\\end\s*{\s*\(align\|alignat\|displaymath\|displaymath\|eqnarray\|equation\|flalign\|gather\|math\|multline\|xalignat\)\*\=\s*}"
строка 346:  syn match texBadMath^I^I"\\[\])]"
строка 347: endif
строка 348: 
строка 349: " Math Zones: {{{1
строка 350: if !exists("tex_no_math")
строка 351:  " TexNewMathZone: function creates a mathzone with the given suffix and mathzone name. {{{2
строка 352:  "                 Starred forms are created if starform is true.  Starred
строка 353:  "                 forms have syntax group and synchronization groups with a
строка 354:  "                 "S" appended.  Handles: cluster, syntax, sync, and HiLink.
строка 355:  fun! TexNewMathZone(sfx,mathzone,starform)
строка 378: 
строка 379:  " Standard Math Zones: {{{2
строка 380:  call TexNewMathZone("A","align",1)
вызов function TexNewMathZone('A', 'align', 1)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneA
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneA start='\\begin\s*{\s*align\s*}' end='\\end\s*{\s*align\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneA grouphere texMathZoneA "\\begin\s*{\s*align\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneA grouphere texMathZoneA "\\begin\s*{\s*align\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneA texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 16: syn cluster texMathZones add=texMathZoneAS
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 17: syn region texMathZoneAS start='\\begin\s*{\s*align\*\s*}' end='\\end\s*{\s*align\*\s*}' keepend contains=@texMathZoneGroup
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 18: syn sync match texSyncMathZoneAS grouphere texMathZoneAS "\\begin\s*{\s*align\*\s*}"
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19: syn sync match texSyncMathZoneAS grouphere texMathZoneAS "\\begin\s*{\s*align\*\s*}"
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 20: hi def link texMathZoneAS texMath
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 381:  call TexNewMathZone("B","alignat",1)
вызов function TexNewMathZone('B', 'alignat', 1)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneB
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneB start='\\begin\s*{\s*alignat\s*}' end='\\end\s*{\s*alignat\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneB grouphere texMathZoneB "\\begin\s*{\s*alignat\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneB grouphere texMathZoneB "\\begin\s*{\s*alignat\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneB texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 16: syn cluster texMathZones add=texMathZoneBS
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 17: syn region texMathZoneBS start='\\begin\s*{\s*alignat\*\s*}' end='\\end\s*{\s*alignat\*\s*}' keepend contains=@texMathZoneGroup
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 18: syn sync match texSyncMathZoneBS grouphere texMathZoneBS "\\begin\s*{\s*alignat\*\s*}"
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19: syn sync match texSyncMathZoneBS grouphere texMathZoneBS "\\begin\s*{\s*alignat\*\s*}"
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 20: hi def link texMathZoneBS texMath
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 382:  call TexNewMathZone("C","displaymath",1)
вызов function TexNewMathZone('C', 'displaymath', 1)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneC
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneC start='\\begin\s*{\s*displaymath\s*}' end='\\end\s*{\s*displaymath\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneC grouphere texMathZoneC "\\begin\s*{\s*displaymath\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneC grouphere texMathZoneC "\\begin\s*{\s*displaymath\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneC texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 16: syn cluster texMathZones add=texMathZoneCS
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 17: syn region texMathZoneCS start='\\begin\s*{\s*displaymath\*\s*}' end='\\end\s*{\s*displaymath\*\s*}' keepend contains=@texMathZoneGroup
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 18: syn sync match texSyncMathZoneCS grouphere texMathZoneCS "\\begin\s*{\s*displaymath\*\s*}"
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19: syn sync match texSyncMathZoneCS grouphere texMathZoneCS "\\begin\s*{\s*displaymath\*\s*}"
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 20: hi def link texMathZoneCS texMath
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 383:  call TexNewMathZone("D","eqnarray",1)
вызов function TexNewMathZone('D', 'eqnarray', 1)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneD
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneD start='\\begin\s*{\s*eqnarray\s*}' end='\\end\s*{\s*eqnarray\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneD grouphere texMathZoneD "\\begin\s*{\s*eqnarray\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneD grouphere texMathZoneD "\\begin\s*{\s*eqnarray\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneD texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 16: syn cluster texMathZones add=texMathZoneDS
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 17: syn region texMathZoneDS start='\\begin\s*{\s*eqnarray\*\s*}' end='\\end\s*{\s*eqnarray\*\s*}' keepend contains=@texMathZoneGroup
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 18: syn sync match texSyncMathZoneDS grouphere texMathZoneDS "\\begin\s*{\s*eqnarray\*\s*}"
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19: syn sync match texSyncMathZoneDS grouphere texMathZoneDS "\\begin\s*{\s*eqnarray\*\s*}"
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 20: hi def link texMathZoneDS texMath
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 384:  call TexNewMathZone("E","equation",1)
вызов function TexNewMathZone('E', 'equation', 1)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneE
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneE start='\\begin\s*{\s*equation\s*}' end='\\end\s*{\s*equation\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneE grouphere texMathZoneE "\\begin\s*{\s*equation\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneE grouphere texMathZoneE "\\begin\s*{\s*equation\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneE texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 16: syn cluster texMathZones add=texMathZoneES
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 17: syn region texMathZoneES start='\\begin\s*{\s*equation\*\s*}' end='\\end\s*{\s*equation\*\s*}' keepend contains=@texMathZoneGroup
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 18: syn sync match texSyncMathZoneES grouphere texMathZoneES "\\begin\s*{\s*equation\*\s*}"
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19: syn sync match texSyncMathZoneES grouphere texMathZoneES "\\begin\s*{\s*equation\*\s*}"
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 20: hi def link texMathZoneES texMath
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 385:  call TexNewMathZone("F","flalign",1)
вызов function TexNewMathZone('F', 'flalign', 1)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneF
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneF start='\\begin\s*{\s*flalign\s*}' end='\\end\s*{\s*flalign\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneF grouphere texMathZoneF "\\begin\s*{\s*flalign\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneF grouphere texMathZoneF "\\begin\s*{\s*flalign\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneF texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 16: syn cluster texMathZones add=texMathZoneFS
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 17: syn region texMathZoneFS start='\\begin\s*{\s*flalign\*\s*}' end='\\end\s*{\s*flalign\*\s*}' keepend contains=@texMathZoneGroup
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 18: syn sync match texSyncMathZoneFS grouphere texMathZoneFS "\\begin\s*{\s*flalign\*\s*}"
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19: syn sync match texSyncMathZoneFS grouphere texMathZoneFS "\\begin\s*{\s*flalign\*\s*}"
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 20: hi def link texMathZoneFS texMath
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 386:  call TexNewMathZone("G","gather",1)
вызов function TexNewMathZone('G', 'gather', 1)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneG
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneG start='\\begin\s*{\s*gather\s*}' end='\\end\s*{\s*gather\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneG grouphere texMathZoneG "\\begin\s*{\s*gather\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneG grouphere texMathZoneG "\\begin\s*{\s*gather\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneG texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 16: syn cluster texMathZones add=texMathZoneGS
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 17: syn region texMathZoneGS start='\\begin\s*{\s*gather\*\s*}' end='\\end\s*{\s*gather\*\s*}' keepend contains=@texMathZoneGroup
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 18: syn sync match texSyncMathZoneGS grouphere texMathZoneGS "\\begin\s*{\s*gather\*\s*}"
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19: syn sync match texSyncMathZoneGS grouphere texMathZoneGS "\\begin\s*{\s*gather\*\s*}"
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 20: hi def link texMathZoneGS texMath
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 387:  call TexNewMathZone("H","math",1)
вызов function TexNewMathZone('H', 'math', 1)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneH
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneH start='\\begin\s*{\s*math\s*}' end='\\end\s*{\s*math\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneH grouphere texMathZoneH "\\begin\s*{\s*math\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneH grouphere texMathZoneH "\\begin\s*{\s*math\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneH texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 16: syn cluster texMathZones add=texMathZoneHS
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 17: syn region texMathZoneHS start='\\begin\s*{\s*math\*\s*}' end='\\end\s*{\s*math\*\s*}' keepend contains=@texMathZoneGroup
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 18: syn sync match texSyncMathZoneHS grouphere texMathZoneHS "\\begin\s*{\s*math\*\s*}"
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19: syn sync match texSyncMathZoneHS grouphere texMathZoneHS "\\begin\s*{\s*math\*\s*}"
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 20: hi def link texMathZoneHS texMath
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 388:  call TexNewMathZone("I","multline",1)
вызов function TexNewMathZone('I', 'multline', 1)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneI
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneI start='\\begin\s*{\s*multline\s*}' end='\\end\s*{\s*multline\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneI grouphere texMathZoneI "\\begin\s*{\s*multline\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneI grouphere texMathZoneI "\\begin\s*{\s*multline\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneI texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 16: syn cluster texMathZones add=texMathZoneIS
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 17: syn region texMathZoneIS start='\\begin\s*{\s*multline\*\s*}' end='\\end\s*{\s*multline\*\s*}' keepend contains=@texMathZoneGroup
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 18: syn sync match texSyncMathZoneIS grouphere texMathZoneIS "\\begin\s*{\s*multline\*\s*}"
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19: syn sync match texSyncMathZoneIS grouphere texMathZoneIS "\\begin\s*{\s*multline\*\s*}"
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 20: hi def link texMathZoneIS texMath
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 389:  call TexNewMathZone("J","subequations",0)
вызов function TexNewMathZone('J', 'subequations', 0)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneJ
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneJ start='\\begin\s*{\s*subequations\s*}' end='\\end\s*{\s*subequations\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneJ grouphere texMathZoneJ "\\begin\s*{\s*subequations\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneJ grouphere texMathZoneJ "\\begin\s*{\s*subequations\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneJ texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 390:  call TexNewMathZone("K","xalignat",1)
вызов function TexNewMathZone('K', 'xalignat', 1)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneK
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneK start='\\begin\s*{\s*xalignat\s*}' end='\\end\s*{\s*xalignat\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneK grouphere texMathZoneK "\\begin\s*{\s*xalignat\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneK grouphere texMathZoneK "\\begin\s*{\s*xalignat\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneK texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 16: syn cluster texMathZones add=texMathZoneKS
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 17: syn region texMathZoneKS start='\\begin\s*{\s*xalignat\*\s*}' end='\\end\s*{\s*xalignat\*\s*}' keepend contains=@texMathZoneGroup
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 18: syn sync match texSyncMathZoneKS grouphere texMathZoneKS "\\begin\s*{\s*xalignat\*\s*}"
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19: syn sync match texSyncMathZoneKS grouphere texMathZoneKS "\\begin\s*{\s*xalignat\*\s*}"
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 20: hi def link texMathZoneKS texMath
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 391:  call TexNewMathZone("L","xxalignat",0)
вызов function TexNewMathZone('L', 'xxalignat', 0)

строка 1:    let grpname  = "texMathZone".a:sfx
строка 2:    let syncname = "texSyncMathZone".a:sfx
строка 3:    if g:tex_fold_enabled
строка 4:     let foldcmd= " fold"
строка 5:    else
строка 6:     let foldcmd= ""
строка 7:    endif
строка 8:    exe "syn cluster texMathZones add=".grpname
строка 8: syn cluster texMathZones add=texMathZoneL
строка 9:    exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 9: syn region texMathZoneL start='\\begin\s*{\s*xxalignat\s*}' end='\\end\s*{\s*xxalignat\s*}' keepend contains=@texMathZoneGroup
строка 10:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 10: syn sync match texSyncMathZoneL grouphere texMathZoneL "\\begin\s*{\s*xxalignat\*\s*}"
строка 11:    exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 11: syn sync match texSyncMathZoneL grouphere texMathZoneL "\\begin\s*{\s*xxalignat\*\s*}"
строка 12:    exe 'hi def link '.grpname.' texMath'
строка 12: hi def link texMathZoneL texMath
строка 13:    if a:starform
строка 14:     let grpname  = "texMathZone".a:sfx.'S'
строка 15:     let syncname = "texSyncMathZone".a:sfx.'S'
строка 16:     exe "syn cluster texMathZones add=".grpname
строка 17:     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
строка 18:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 19:     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
строка 20:     exe 'hi def link '.grpname.' texMath'
строка 21:    endif
function TexNewMathZone возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 392: 
строка 393:  " Inline Math Zones: {{{2
строка 394:  if has("conceal") && &enc == 'utf-8' && s:tex_conceal =~ 'd'
строка 395:   syn region texMathZoneV^Imatchgroup=Delimiter start="\\("^I^I^Imatchgroup=Delimiter end="\\)\|%stopzone\>"^Ikeepend concealends contains=@texMathZoneGroup
строка 396:   syn region texMathZoneW^Imatchgroup=Delimiter start="\\\["^I^I^Imatchgroup=Delimiter end="\\]\|%stopzone\>"^Ikeepend concealends contains=@texMathZoneGroup
строка 397:   syn region texMathZoneX^Imatchgroup=Delimiter start="\$" skip="\\\\\|\\\$"^Imatchgroup=Delimiter end="\$" end="%stopzone\>"^I^Iconcealends contains=@texMathZoneGroup
строка 398:   syn region texMathZoneY^Imatchgroup=Delimiter start="\$\$" ^I^I^Imatchgroup=Delimiter end="\$\$" end="%stopzone\>"^Iconcealends keepend^I^Icontains=@texMathZoneGroup
строка 399:  else
строка 400:   syn region texMathZoneV^Imatchgroup=Delimiter start="\\("^I^I^Imatchgroup=Delimiter end="\\)\|%stopzone\>"^Ikeepend contains=@texMathZoneGroup
строка 401:   syn region texMathZoneW^Imatchgroup=Delimiter start="\\\["^I^I^Imatchgroup=Delimiter end="\\]\|%stopzone\>"^Ikeepend contains=@texMathZoneGroup
строка 402:   syn region texMathZoneX^Imatchgroup=Delimiter start="\$" skip="\\\\\|\\\$"^Imatchgroup=Delimiter end="\$" end="%stopzone\>"^Icontains=@texMathZoneGroup
строка 403:   syn region texMathZoneY^Imatchgroup=Delimiter start="\$\$" ^I^I^Imatchgroup=Delimiter end="\$\$" end="%stopzone\>"^Ikeepend^I^Icontains=@texMathZoneGroup
строка 404:  endif
строка 405:  syn region texMathZoneZ^Imatchgroup=texStatement start="\\ensuremath\s*{"^Imatchgroup=texStatement end="}" end="%stopzone\>"^Icontains=@texMathZoneGroup
строка 406: 
строка 407:  syn match texMathOper^I^I"[_^=]" contained
строка 408: 
строка 409:  " Text Inside Math Zones: {{{2
строка 410:  if !exists("g:tex_nospell") || !g:tex_nospell
строка 411:   syn region texMathText matchgroup=texStatement start='\\\(\(inter\)\=text\|mbox\)\s*{'^Iend='}'^Icontains=@texFoldGroup,@Spell
строка 412:  else
строка 413:   syn region texMathText matchgroup=texStatement start='\\\(\(inter\)\=text\|mbox\)\s*{'^Iend='}'^Icontains=@texFoldGroup
строка 414:  endif
строка 415: 
строка 416:  " \left..something.. and \right..something.. support: {{{2
строка 417:  syn match   texMathDelimBad^Icontained^I^I"\S"
строка 418:  if has("conceal") && &enc == 'utf-8' && s:tex_conceal =~ 'm'
строка 419:   syn match   texMathDelim^Icontained^I^I"\\left\\{\>"^Iskipwhite nextgroup=texMathDelimSet1,texMathDelimSet2,texMathDelimBad contains=texMathSymbol cchar={
строка 420:   syn match   texMathDelim^Icontained^I^I"\\right\\}\>"^Iskipwhite nextgroup=texMathDelimSet1,texMathDelimSet2,texMathDelimBad contains=texMathSymbol cchar=}
строка 450:   let s:texMathDelimList=[ ['<'            , '<'] , ['>'            , '>'] , ['('            , '('] , [')'            , ')'] , ['\['           , '['] , [']'            , ']'] , ['\\{'          , '{'] , ['\\}'          , '}'] , ['|'            , '|'] , ['\\|'          , '‖'] , ['\\backslash'  , '\'] , ['\\downarrow'  , '↓'] , ['\\Downarrow'  , '⇓'] , ['\\langle'     , '<'] , ['\\lbrace'     , '['] , ['\\lceil'      , '⌈'] , ['\\lfloor'     , '⌊'] , ['\\lgroup'     , '⌊'] , ['\\lmoustache' , '⎛'] , ['\\rangle'     , '>'] , ['\\rbrace'     , ']'] , ['\\rceil'      , '⌉'] , ['\\rfloor'     , '⌋'] , ['\\rgroup'     , '⌋'] , ['\\rmoustache' , '⎞'] , ['\\uparrow'    , '↑'] , ['\\Uparrow'    , '↑'] , ['\\updownarrow', '↕'] , ['\\Updownarrow', '⇕']]
строка 451:   syn match texMathDelim^I'\\[bB]igg\=[lr]' contained nextgroup=texMathDelimBad
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=<'^Icontained conceal cchar=<
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=>'^Icontained conceal cchar=>
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=('^Icontained conceal cchar=(
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=)'^Icontained conceal cchar=)
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\['^Icontained conceal cchar=[
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=]'^Icontained conceal cchar=]
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\{'^Icontained conceal cchar={
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\}'^Icontained conceal cchar=}
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=|'^Icontained conceal cchar=|
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\|'^Icontained conceal cchar=‖
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\backslash'^Icontained conceal cchar=\
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\downarrow'^Icontained conceal cchar=↓
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\Downarrow'^Icontained conceal cchar=⇓
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\langle'^Icontained conceal cchar=<
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\lbrace'^Icontained conceal cchar=[
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\lceil'^Icontained conceal cchar=⌈
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\lfloor'^Icontained conceal cchar=⌊
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\lgroup'^Icontained conceal cchar=⌊
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\lmoustache'^Icontained conceal cchar=⎛
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\rangle'^Icontained conceal cchar=>
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\rbrace'^Icontained conceal cchar=]
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\rceil'^Icontained conceal cchar=⌉
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\rfloor'^Icontained conceal cchar=⌋
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\rgroup'^Icontained conceal cchar=⌋
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\rmoustache'^Icontained conceal cchar=⎞
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\uparrow'^Icontained conceal cchar=↑
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\Uparrow'^Icontained conceal cchar=↑
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\updownarrow'^Icontained conceal cchar=↕
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 453: syn match texMathDelim^I'\\[bB]igg\=[lr]\=\\Updownarrow'^Icontained conceal cchar=⇕
строка 454:   endfor
строка 452:   for texmath in s:texMathDelimList
строка 453:    exe "syn match texMathDelim^I'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'^Icontained conceal cchar=".texmath[1]
строка 454:   endfor
строка 455: 
строка 456:  else
строка 457:   syn match   texMathDelim^Icontained^I^I"\\\(left\|right\)\>"^Iskipwhite nextgroup=texMathDelimSet1,texMathDelimSet2,texMathDelimBad
строка 458:   syn match   texMathDelim^Icontained^I^I"\\[bB]igg\=[lr]\=\>"^Iskipwhite nextgroup=texMathDelimSet1,texMathDelimSet2,texMathDelimBad
строка 459:   syn match   texMathDelimSet2^Icontained^I"\\"^I^Inextgroup=texMathDelimKey,texMathDelimBad
строка 460:   syn match   texMathDelimSet1^Icontained^I"[<>()[\]|/.]\|\\[{}|]"
строка 461:   syn keyword texMathDelimKey^Icontained^Ibackslash       lceil           lVert           rgroup          uparrow
строка 462:   syn keyword texMathDelimKey^Icontained^Idownarrow       lfloor          rangle          rmoustache      Uparrow
строка 463:   syn keyword texMathDelimKey^Icontained^IDownarrow       lgroup          rbrace          rvert           updownarrow
строка 464:   syn keyword texMathDelimKey^Icontained^Ilangle          lmoustache      rceil           rVert           Updownarrow
строка 465:   syn keyword texMathDelimKey^Icontained^Ilbrace          lvert           rfloor
строка 466:  endif
строка 467:  syn match   texMathDelim^Icontained^I^I"\\\(left\|right\)arrow\>\|\<\([aA]rrow\|brace\)\=vert\>"
строка 468:  syn match   texMathDelim^Icontained^I^I"\\lefteqn\>"
строка 469: endif
строка 470: 
строка 471: " Special TeX characters  ( \$ \& \% \# \{ \} \_ \S \P ) : {{{1
строка 472: syn match texSpecialChar^I"\\[$&%#{}_]"
строка 473: if b:tex_stylish
строка 474:   syn match texSpecialChar^I"\\[SP@][^a-zA-Z@]"me=e-1
строка 475: else
строка 476:   syn match texSpecialChar^I"\\[SP@]\A"me=e-1
строка 477: endif
строка 478: syn match texSpecialChar^I"\\\\"
строка 479: if !exists("tex_no_math")
строка 480:  syn match texOnlyMath^I^I"[_^]"
строка 481: endif
строка 482: syn match texSpecialChar^I"\^\^[0-9a-f]\{2}\|\^\^\S"
строка 483: 
строка 484: " Comments: {{{1
строка 485: "    Normal TeX LaTeX     :   %....
строка 486: "    Documented TeX Format:  ^^A...^I-and-^Ileading %s (only)
строка 487: if !exists("g:tex_comment_nospell") || !g:tex_comment_nospell
строка 488:  syn cluster texCommentGroup^Icontains=texTodo,@Spell
строка 489: else
строка 490:  syn cluster texCommentGroup^Icontains=texTodo,@NoSpell
строка 491: endif
строка 492: syn case ignore
строка 493: syn keyword texTodo^I^Icontained^I^Icombak^Ifixme^Itodo^Ixxx
строка 494: syn case match
строка 495: if s:extfname == "dtx"
строка 496:   syn match texComment^I^I"\^\^A.*$"^Icontains=@texCommentGroup
строка 497:   syn match texComment^I^I"^%\+"^I^Icontains=@texCommentGroup
строка 498: else
строка 499:   if g:tex_fold_enabled
строка 500:    " allows syntax-folding of 2 or more contiguous comment lines
строка 501:    " single-line comments are not folded
строка 502:    syn match  texComment^I"%.*$"^I^Icontains=@texCommentGroup
строка 503:    syn region texComment^Istart="^\zs\s*%.*\_s*%"^Iskip="^\s*%"^Iend='^\ze\s*[^%]' fold
строка 504:   else
строка 505:    syn match texComment^I^I"%.*$"^I^Icontains=@texCommentGroup
строка 506:   endif
строка 507: endif
строка 508: 
строка 509: " Separate lines used for verb` and verb# so that the end conditions {{{1
строка 510: " will appropriately terminate.
строка 511: " If g:tex_verbspell exists, then verbatim texZones will permit spellchecking there.
строка 512: if exists("g:tex_verbspell") && g:tex_verbspell
строка 513:  syn region texZone^I^Istart="\\begin{[vV]erbatim}"^I^Iend="\\end{[vV]erbatim}\|%stopzone\>"^Icontains=@Spell
строка 514:  " listings package:
строка 515:  syn region texZone^I^Istart="\\begin{lstlisting}"^I^Iend="\\end{lstlisting}\|%stopzone\>"^Icontains=@Spell
строка 516:  " moreverb package:
строка 517:  syn region texZone^I^Istart="\\begin{verbatimtab}"^I^Iend="\\end{verbatimtab}\|%stopzone\>"^Icontains=@Spell
строка 518:  syn region texZone^I^Istart="\\begin{verbatimwrite}"^I^Iend="\\end{verbatimwrite}\|%stopzone\>"^Icontains=@Spell
строка 519:  syn region texZone^I^Istart="\\begin{boxedverbatim}"^I^Iend="\\end{boxedverbatim}\|%stopzone\>"^Icontains=@Spell
строка 520:  if version < 600
строка 521:   syn region texZone^I^Istart="\\verb\*\=`"^I^I^Iend="`\|%stopzone\>"^I^I^Icontains=@Spell
строка 522:   syn region texZone^I^Istart="\\verb\*\=#"^I^I^Iend="#\|%stopzone\>"^I^I^Icontains=@Spell
строка 523:  else
строка 524:    if b:tex_stylish
строка 525:     syn region texZone^I^Istart="\\verb\*\=\z([^\ta-zA-Z@]\)"^Iend="\z1\|%stopzone\>"^I^I^Icontains=@Spell
строка 526:    else
строка 527:     syn region texZone^I^Istart="\\verb\*\=\z([^\ta-zA-Z]\)"^Iend="\z1\|%stopzone\>"^I^I^Icontains=@Spell
строка 528:    endif
строка 529:  endif
строка 530: else
строка 531:  syn region texZone^I^Istart="\\begin{[vV]erbatim}"^I^Iend="\\end{[vV]erbatim}\|%stopzone\>"
строка 532:  " listings package:
строка 533:  syn region texZone^I^Istart="\\begin{lstlisting}"^I^Iend="\\end{lstlisting}\|%stopzone\>"
строка 534:  " moreverb package:
строка 535:  syn region texZone^I^Istart="\\begin{verbatimtab}"^I^Iend="\\end{verbatimtab}\|%stopzone\>"
строка 536:  syn region texZone^I^Istart="\\begin{verbatimwrite}"^I^Iend="\\end{verbatimwrite}\|%stopzone\>"
строка 537:  syn region texZone^I^Istart="\\begin{boxedverbatim}"^I^Iend="\\end{boxedverbatim}\|%stopzone\>"
строка 538:  if version < 600
строка 539:   syn region texZone^I^Istart="\\verb\*\=`"^I^I^Iend="`\|%stopzone\>"
строка 540:   syn region texZone^I^Istart="\\verb\*\=#"^I^I^Iend="#\|%stopzone\>"
строка 541:  else
строка 542:    if b:tex_stylish
строка 543:      syn region texZone^I^Istart="\\verb\*\=\z([^\ta-zA-Z@]\)"^Iend="\z1\|%stopzone\>"
строка 544:    else
строка 545:      syn region texZone^I^Istart="\\verb\*\=\z([^\ta-zA-Z]\)"^Iend="\z1\|%stopzone\>"
строка 546:    endif
строка 547:  endif
строка 548: endif
строка 549: 
строка 550: " Tex Reference Zones: {{{1
строка 551: syn region texZone^I^Imatchgroup=texStatement start="@samp{"^I^I^Iend="}\|%stopzone\>"^Icontains=@texRefGroup
строка 552: syn region texRefZone^I^Imatchgroup=texStatement start="\\nocite{"^I^Iend="}\|%stopzone\>"^Icontains=@texRefGroup
строка 553: syn region texRefZone^I^Imatchgroup=texStatement start="\\bibliography{"^I^Iend="}\|%stopzone\>"^Icontains=@texRefGroup
строка 554: syn region texRefZone^I^Imatchgroup=texStatement start="\\label{"^I^Iend="}\|%stopzone\>"^Icontains=@texRefGroup
строка 555: syn region texRefZone^I^Imatchgroup=texStatement start="\\\(page\|eq\)ref{"^Iend="}\|%stopzone\>"^Icontains=@texRefGroup
строка 556: syn region texRefZone^I^Imatchgroup=texStatement start="\\v\=ref{"^I^Iend="}\|%stopzone\>"^Icontains=@texRefGroup
строка 557: syn match  texRefZone^I^I'\\cite\%([tp]\*\=\)\=' nextgroup=texRefOption,texCite
строка 558: syn region texRefOption^Icontained^Imatchgroup=Delimiter start='\[' end=']'^I^Icontains=@texRefGroup,texRefZone^Inextgroup=texRefOption,texCite
строка 559: syn region texCite^Icontained^Imatchgroup=Delimiter start='{' end='}'^I^Icontains=@texRefGroup,texRefZone,texCite
строка 560: 
строка 561: " Handle newcommand, newenvironment : {{{1
строка 562: syn match  texNewCmd^I^I^I^I"\\newcommand\>"^I^I^Inextgroup=texCmdName skipwhite skipnl
строка 563: syn region texCmdName contained matchgroup=Delimiter start="{"rs=s+1  end="}"^I^Inextgroup=texCmdArgs,texCmdBody skipwhite skipnl
строка 564: syn region texCmdArgs contained matchgroup=Delimiter start="\["rs=s+1 end="]"^I^Inextgroup=texCmdBody skipwhite skipnl
строка 565: syn region texCmdBody contained matchgroup=Delimiter start="{"rs=s+1 skip="\\\\\|\\[{}]"^Imatchgroup=Delimiter end="}" contains=@texCmdGroup
строка 566: syn match  texNewEnv^I^I^I^I"\\newenvironment\>"^I^I^Inextgroup=texEnvName skipwhite skipnl
строка 567: syn region texEnvName contained matchgroup=Delimiter start="{"rs=s+1  end="}"^I^Inextgroup=texEnvBgn skipwhite skipnl
строка 568: syn region texEnvBgn  contained matchgroup=Delimiter start="{"rs=s+1  end="}"^I^Inextgroup=texEnvEnd skipwhite skipnl contains=@texEnvGroup
строка 569: syn region texEnvEnd  contained matchgroup=Delimiter start="{"rs=s+1  end="}"^I^Iskipwhite skipnl contains=@texEnvGroup
строка 570: 
строка 571: " Definitions/Commands: {{{1
строка 572: syn match texDefCmd^I^I^I^I"\\def\>"^I^I^I^Inextgroup=texDefName skipwhite skipnl
строка 573: if b:tex_stylish
строка 574:   syn match texDefName contained^I^I"\\[a-zA-Z@]\+"^I^I^I^Inextgroup=texDefParms,texCmdBody skipwhite skipnl
строка 575:   syn match texDefName contained^I^I"\\[^a-zA-Z@]"^I^I^I^Inextgroup=texDefParms,texCmdBody skipwhite skipnl
строка 576: else
строка 577:   syn match texDefName contained^I^I"\\\a\+"^I^I^I^Inextgroup=texDefParms,texCmdBody skipwhite skipnl
строка 578:   syn match texDefName contained^I^I"\\\A"^I^I^I^I^Inextgroup=texDefParms,texCmdBody skipwhite skipnl
строка 579: endif
строка 580: syn match texDefParms  contained^I^I"#[^{]*"^Icontains=texDefParm^Inextgroup=texCmdBody skipwhite skipnl
строка 581: syn match  texDefParm  contained^I^I"#\d\+"
строка 582: 
строка 583: " TeX Lengths: {{{1
строка 584: syn match  texLength^I^I"\<\d\+\([.,]\d\+\)\=\s*\(true\)\=\s*\(bp\|cc\|cm\|dd\|em\|ex\|in\|mm\|pc\|pt\|sp\)\>"
строка 585: 
строка 586: " TeX String Delimiters: {{{1
строка 587: syn match texString^I^I"\(``\|''\|,,\)"
строка 588: 
строка 589: " makeatletter -- makeatother sections
строка 590: if !exists("g:tex_no_error")
строка 591:  syn region texStyle^I^I^Imatchgroup=texStatement start='\\makeatletter' end='\\makeatother'^Icontains=@texStyleGroup contained
строка 592:  syn match  texStyleStatement^I^I"\\[a-zA-Z@]\+"^Icontained
строка 593:  syn region texStyleMatcher^I^Imatchgroup=Delimiter start="{" skip="\\\\\|\\[{}]"^Iend="}"^I^Icontains=@texStyleGroup,texError^Icontained
строка 594:  syn region texStyleMatcher^I^Imatchgroup=Delimiter start="\["^I^I^I^Iend="]"^I^Icontains=@texStyleGroup,texError^Icontained
строка 595: endif
строка 596: 
строка 597: " Conceal mode support (supports set cole=2) {{{1
строка 598: if has("conceal") && &enc == 'utf-8'
строка 599: 
строка 600:  " Math Symbols {{{2
строка 601:  " (many of these symbols were contributed by Björn Winckler)
строка 602:  if s:tex_conceal =~ 'm'
строка 855:   let s:texMathList=[ ['|'^I^I, '‖'], ['aleph'^I^I, 'ℵ'], ['angle'^I^I, '∠'], ['approx'^I^I, '≈'], ['ast'^I^I, '∗'], ['asymp'^I^I, '≍'], ['backepsilon'^I, '∍'], ['backsimeq'^I, '≃'], ['backslash'^I, '∖'], ['barwedge'^I, '⊼'], ['because'^I, '∵'], ['between'^I, '≬'], ['bigcap'^I^I, '∩'], ['bigcup'^I^I, '∪'], ['bigodot'^I, '⊙'], ['bigoplus'^I, '⊕'], ['bigotimes'^I, '⊗'], ['bigsqcup'^I, '⊔'], ['bigtriangledown', '∇'], ['bigvee'^I^I, '⋁'], ['bigwedge'^I, '⋀'], ['blacksquare'^I, '∎'], ['bot'^I^I, '⊥'], ['boxdot'^I^I, '⊡'], ['boxminus'^I, '⊟'], ['boxplus'^I, '⊞'], ['boxtimes'^I, '⊠'], ['bumpeq'^I^I, '≏'], ['Bumpeq'^I^I, '≎'], ['cap'^I^I, '∩'], ['Cap'^I^I, '⋒'], ['cdot'^I^I, '·'], ['cdots'^I^I, '⋯'], ['circ'^I^I, '∘'], ['circeq'^I^I, '≗'], ['circlearrowleft', '↺'], ['circlearrowright', '↻'], ['circledast'^I, '⊛'], ['circledcirc'^I, '⊚'], ['clubsuit'^I, '♣'], ['complement'^I, '∁'], ['cong'^I^I, '≅'], ['coprod'^I^I, '∐'], ['copyright'^I, '©'], ['cup'^I^I, '∪'], ['Cup'^I^I, '⋓']
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 860: syn match texMathSymbol '\\|' contained conceal cchar=‖
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\aleph\>' contained conceal cchar=ℵ
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\angle\>' contained conceal cchar=∠
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\approx\>' contained conceal cchar=≈
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ast\>' contained conceal cchar=∗
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\asymp\>' contained conceal cchar=≍
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\backepsilon\>' contained conceal cchar=∍
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\backsimeq\>' contained conceal cchar=≃
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\backslash\>' contained conceal cchar=∖
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\barwedge\>' contained conceal cchar=⊼
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\because\>' contained conceal cchar=∵
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\between\>' contained conceal cchar=≬
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\bigcap\>' contained conceal cchar=∩
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\bigcup\>' contained conceal cchar=∪
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\bigodot\>' contained conceal cchar=⊙
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\bigoplus\>' contained conceal cchar=⊕
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\bigotimes\>' contained conceal cchar=⊗
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\bigsqcup\>' contained conceal cchar=⊔
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\bigtriangledown\>' contained conceal cchar=∇
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\bigvee\>' contained conceal cchar=⋁
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\bigwedge\>' contained conceal cchar=⋀
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\blacksquare\>' contained conceal cchar=∎
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\bot\>' contained conceal cchar=⊥
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\boxdot\>' contained conceal cchar=⊡
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\boxminus\>' contained conceal cchar=⊟
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\boxplus\>' contained conceal cchar=⊞
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\boxtimes\>' contained conceal cchar=⊠
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\bumpeq\>' contained conceal cchar=≏
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Bumpeq\>' contained conceal cchar=≎
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\cap\>' contained conceal cchar=∩
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Cap\>' contained conceal cchar=⋒
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\cdot\>' contained conceal cchar=·
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\cdots\>' contained conceal cchar=⋯
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\circ\>' contained conceal cchar=∘
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\circeq\>' contained conceal cchar=≗
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\circlearrowleft\>' contained conceal cchar=↺
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\circlearrowright\>' contained conceal cchar=↻
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\circledast\>' contained conceal cchar=⊛
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\circledcirc\>' contained conceal cchar=⊚
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\clubsuit\>' contained conceal cchar=♣
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\complement\>' contained conceal cchar=∁
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\cong\>' contained conceal cchar=≅
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\coprod\>' contained conceal cchar=∐
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\copyright\>' contained conceal cchar=©
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\cup\>' contained conceal cchar=∪
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Cup\>' contained conceal cchar=⋓
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\curlyeqprec\>' contained conceal cchar=⋞
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\curlyeqsucc\>' contained conceal cchar=⋟
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\curlyvee\>' contained conceal cchar=⋎
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\curlywedge\>' contained conceal cchar=⋏
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\dashv\>' contained conceal cchar=⊣
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\diamond\>' contained conceal cchar=⋄
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\diamondsuit\>' contained conceal cchar=♢
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\div\>' contained conceal cchar=÷
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\doteq\>' contained conceal cchar=≐
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\doteqdot\>' contained conceal cchar=≑
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\dotplus\>' contained conceal cchar=∔
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\dotsb\>' contained conceal cchar=⋯
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\dotsc\>' contained conceal cchar=…
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\dots\>' contained conceal cchar=…
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\dotsi\>' contained conceal cchar=⋯
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\dotso\>' contained conceal cchar=…
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\doublebarwedge\>' contained conceal cchar=⩞
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\downarrow\>' contained conceal cchar=↓
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Downarrow\>' contained conceal cchar=⇓
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\emptyset\>' contained conceal cchar=∅
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\eqcirc\>' contained conceal cchar=≖
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\eqsim\>' contained conceal cchar=≂
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\eqslantgtr\>' contained conceal cchar=⪖
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\eqslantless\>' contained conceal cchar=⪕
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\equiv\>' contained conceal cchar=≡
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ell\>' contained conceal cchar=ℓ
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\exists\>' contained conceal cchar=∃
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\fallingdotseq\>' contained conceal cchar=≒
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\flat\>' contained conceal cchar=♭
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\forall\>' contained conceal cchar=∀
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ge\>' contained conceal cchar=≥
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\geq\>' contained conceal cchar=≥
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\geqq\>' contained conceal cchar=≧
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\gets\>' contained conceal cchar=←
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\gneqq\>' contained conceal cchar=≩
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\gtrdot\>' contained conceal cchar=⋗
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\gtreqless\>' contained conceal cchar=⋛
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\gtrless\>' contained conceal cchar=≷
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\gtrsim\>' contained conceal cchar=≳
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\hbar\>' contained conceal cchar=ℏ
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\heartsuit\>' contained conceal cchar=♡
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\hookleftarrow\>' contained conceal cchar=↩
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\hookrightarrow\>' contained conceal cchar=↪
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\iiint\>' contained conceal cchar=∭
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\iint\>' contained conceal cchar=∬
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Im\>' contained conceal cchar=ℑ
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\imath\>' contained conceal cchar=ɩ
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\in\>' contained conceal cchar=∈
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\infty\>' contained conceal cchar=∞
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\int\>' contained conceal cchar=∫
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\lceil\>' contained conceal cchar=⌈
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ldots\>' contained conceal cchar=…
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\le\>' contained conceal cchar=≤
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\leftarrow\>' contained conceal cchar=⟵
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Leftarrow\>' contained conceal cchar=⟸
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\leftarrowtail\>' contained conceal cchar=↢
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 860: syn match texMathSymbol '\\left(' contained conceal cchar=(
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 860: syn match texMathSymbol '\\left\[' contained conceal cchar=[
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 860: syn match texMathSymbol '\\left\\{' contained conceal cchar={
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\leftrightarrow\>' contained conceal cchar=⇔
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\leftrightsquigarrow\>' contained conceal cchar=↭
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\leftthreetimes\>' contained conceal cchar=⋋
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\leq\>' contained conceal cchar=≤
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\leqq\>' contained conceal cchar=≦
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\lessdot\>' contained conceal cchar=⋖
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\lesseqgtr\>' contained conceal cchar=⋚
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\lesssim\>' contained conceal cchar=≲
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\lfloor\>' contained conceal cchar=⌊
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\lmoustache\>' contained conceal cchar=╭
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\lneqq\>' contained conceal cchar=≨
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ltimes\>' contained conceal cchar=⋉
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\mapsto\>' contained conceal cchar=↦
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\measuredangle\>' contained conceal cchar=∡
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\mid\>' contained conceal cchar=∣
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\mp\>' contained conceal cchar=∓
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nabla\>' contained conceal cchar=∇
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\natural\>' contained conceal cchar=♮
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ncong\>' contained conceal cchar=≇
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nearrow\>' contained conceal cchar=↗
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ne\>' contained conceal cchar=≠
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\neg\>' contained conceal cchar=¬
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\neq\>' contained conceal cchar=≠
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nexists\>' contained conceal cchar=∄
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ngeq\>' contained conceal cchar=≱
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ngeqq\>' contained conceal cchar=≱
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ngtr\>' contained conceal cchar=≯
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ni\>' contained conceal cchar=∋
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nleftarrow\>' contained conceal cchar=↚
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nLeftarrow\>' contained conceal cchar=⇍
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nLeftrightarrow\>' contained conceal cchar=⇎
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nleq\>' contained conceal cchar=≰
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nleqq\>' contained conceal cchar=≰
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nless\>' contained conceal cchar=≮
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nmid\>' contained conceal cchar=∤
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\notin\>' contained conceal cchar=∉
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nprec\>' contained conceal cchar=⊀
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nrightarrow\>' contained conceal cchar=↛
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nRightarrow\>' contained conceal cchar=⇏
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nsim\>' contained conceal cchar=≁
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nsucc\>' contained conceal cchar=⊁
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ntriangleleft\>' contained conceal cchar=⋪
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ntrianglelefteq\>' contained conceal cchar=⋬
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ntriangleright\>' contained conceal cchar=⋫
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ntrianglerighteq\>' contained conceal cchar=⋭
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nvdash\>' contained conceal cchar=⊬
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nvDash\>' contained conceal cchar=⊭
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nVdash\>' contained conceal cchar=⊮
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\nwarrow\>' contained conceal cchar=↖
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\odot\>' contained conceal cchar=⊙
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\oint\>' contained conceal cchar=∮
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\ominus\>' contained conceal cchar=⊖
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\oplus\>' contained conceal cchar=⊕
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\oslash\>' contained conceal cchar=⊘
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\otimes\>' contained conceal cchar=⊗
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\owns\>' contained conceal cchar=∋
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\P\>' contained conceal cchar=¶
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\partial\>' contained conceal cchar=∂
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\perp\>' contained conceal cchar=⊥
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\pitchfork\>' contained conceal cchar=⋔
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\pm\>' contained conceal cchar=±
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\precapprox\>' contained conceal cchar=⪷
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\prec\>' contained conceal cchar=≺
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\preccurlyeq\>' contained conceal cchar=≼
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\preceq\>' contained conceal cchar=⪯
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\precnapprox\>' contained conceal cchar=⪹
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\precneqq\>' contained conceal cchar=⪵
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\precsim\>' contained conceal cchar=≾
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\prime\>' contained conceal cchar=′
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\prod\>' contained conceal cchar=∏
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\propto\>' contained conceal cchar=∝
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\rceil\>' contained conceal cchar=⌉
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Re\>' contained conceal cchar=ℜ
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\rfloor\>' contained conceal cchar=⌋
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\rightarrow\>' contained conceal cchar=⟶
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Rightarrow\>' contained conceal cchar=⟹
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\rightarrowtail\>' contained conceal cchar=↣
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 860: syn match texMathSymbol '\\right)' contained conceal cchar=)
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 860: syn match texMathSymbol '\\right]' contained conceal cchar=]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 860: syn match texMathSymbol '\\right\\}' contained conceal cchar=}
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\rightsquigarrow\>' contained conceal cchar=↝
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\rightthreetimes\>' contained conceal cchar=⋌
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\risingdotseq\>' contained conceal cchar=≓
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\rmoustache\>' contained conceal cchar=╮
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\rtimes\>' contained conceal cchar=⋊
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\S\>' contained conceal cchar=§
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\searrow\>' contained conceal cchar=↘
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\setminus\>' contained conceal cchar=∖
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\sharp\>' contained conceal cchar=♯
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\sim\>' contained conceal cchar=∼
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\spadesuit\>' contained conceal cchar=♠
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\sphericalangle\>' contained conceal cchar=∢
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\sqcap\>' contained conceal cchar=⊓
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\sqcup\>' contained conceal cchar=⊔
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\sqsubset\>' contained conceal cchar=⊏
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\sqsubseteq\>' contained conceal cchar=⊑
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\sqsupset\>' contained conceal cchar=⊐
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\sqsupseteq\>' contained conceal cchar=⊒
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\subset\>' contained conceal cchar=⊂
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Subset\>' contained conceal cchar=⋐
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\subseteq\>' contained conceal cchar=⊆
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\subseteqq\>' contained conceal cchar=⫅
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\subsetneq\>' contained conceal cchar=⊊
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\subsetneqq\>' contained conceal cchar=⫋
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\succapprox\>' contained conceal cchar=⪸
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\succ\>' contained conceal cchar=≻
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\succcurlyeq\>' contained conceal cchar=≽
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\succeq\>' contained conceal cchar=⪰
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\succnapprox\>' contained conceal cchar=⪺
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\succneqq\>' contained conceal cchar=⪶
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\succsim\>' contained conceal cchar=≿
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\sum\>' contained conceal cchar=∑
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Supset\>' contained conceal cchar=⋑
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\supseteq\>' contained conceal cchar=⊇
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\supseteqq\>' contained conceal cchar=⫆
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\supsetneq\>' contained conceal cchar=⊋
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\supsetneqq\>' contained conceal cchar=⫌
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\surd\>' contained conceal cchar=√
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\swarrow\>' contained conceal cchar=↙
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\therefore\>' contained conceal cchar=∴
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\times\>' contained conceal cchar=×
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\to\>' contained conceal cchar=→
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\top\>' contained conceal cchar=⊤
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\triangle\>' contained conceal cchar=∆
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\triangleleft\>' contained conceal cchar=⊲
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\trianglelefteq\>' contained conceal cchar=⊴
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\triangleq\>' contained conceal cchar=≜
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\triangleright\>' contained conceal cchar=⊳
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\trianglerighteq\>' contained conceal cchar=⊵
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\twoheadleftarrow\>' contained conceal cchar=↞
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\twoheadrightarrow\>' contained conceal cchar=↠
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\uparrow\>' contained conceal cchar=↑
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Uparrow\>' contained conceal cchar=⇑
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\updownarrow\>' contained conceal cchar=↕
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Updownarrow\>' contained conceal cchar=⇕
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\varnothing\>' contained conceal cchar=∅
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\vartriangle\>' contained conceal cchar=∆
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\vdash\>' contained conceal cchar=⊢
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\vDash\>' contained conceal cchar=⊨
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Vdash\>' contained conceal cchar=⊩
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\vdots\>' contained conceal cchar=⋮
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\veebar\>' contained conceal cchar=⊻
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\vee\>' contained conceal cchar=∨
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\Vvdash\>' contained conceal cchar=⊪
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\wedge\>' contained conceal cchar=∧
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\wp\>' contained conceal cchar=℘
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 858: syn match texMathSymbol '\\wr\>' contained conceal cchar=≀
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 856:   for texmath in s:texMathList
строка 857:    if texmath[0] =~ '\w$'
строка 858:     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
строка 859:    else
строка 860:     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
строка 861:    endif
строка 862:   endfor
строка 863: 
строка 864:   if &ambw == "double"
строка 865:    syn match texMathSymbol '\\gg\>'^I^I^Icontained conceal cchar=≫
строка 866:    syn match texMathSymbol '\\ll\>'^I^I^Icontained conceal cchar=≪
строка 867:   else
строка 868:    syn match texMathSymbol '\\gg\>'^I^I^Icontained conceal cchar=⟫
строка 869:    syn match texMathSymbol '\\ll\>'^I^I^Icontained conceal cchar=⟪
строка 870:   endif
строка 871: 
строка 872:   syn match texMathSymbol '\\hat{a}' contained conceal cchar=â
строка 873:   syn match texMathSymbol '\\hat{A}' contained conceal cchar=Â
строка 874:   syn match texMathSymbol '\\hat{c}' contained conceal cchar=ĉ
строка 875:   syn match texMathSymbol '\\hat{C}' contained conceal cchar=Ĉ
строка 876:   syn match texMathSymbol '\\hat{e}' contained conceal cchar=ê
строка 877:   syn match texMathSymbol '\\hat{E}' contained conceal cchar=Ê
строка 878:   syn match texMathSymbol '\\hat{g}' contained conceal cchar=ĝ
строка 879:   syn match texMathSymbol '\\hat{G}' contained conceal cchar=Ĝ
строка 880:   syn match texMathSymbol '\\hat{i}' contained conceal cchar=î
строка 881:   syn match texMathSymbol '\\hat{I}' contained conceal cchar=Î
строка 882:   syn match texMathSymbol '\\hat{o}' contained conceal cchar=ô
строка 883:   syn match texMathSymbol '\\hat{O}' contained conceal cchar=Ô
строка 884:   syn match texMathSymbol '\\hat{s}' contained conceal cchar=ŝ
строка 885:   syn match texMathSymbol '\\hat{S}' contained conceal cchar=Ŝ
строка 886:   syn match texMathSymbol '\\hat{u}' contained conceal cchar=û
строка 887:   syn match texMathSymbol '\\hat{U}' contained conceal cchar=Û
строка 888:   syn match texMathSymbol '\\hat{w}' contained conceal cchar=ŵ
строка 889:   syn match texMathSymbol '\\hat{W}' contained conceal cchar=Ŵ
строка 890:   syn match texMathSymbol '\\hat{y}' contained conceal cchar=ŷ
строка 891:   syn match texMathSymbol '\\hat{Y}' contained conceal cchar=Ŷ
строка 892:  endif
строка 893: 
строка 894:  " Greek {{{2
строка 895:  if s:tex_conceal =~ 'g'
строка 896:   fun! s:Greek(group,pat,cchar)
строка 899:   call s:Greek('texGreek','\\alpha\>'^I^I,'α')
вызов function <SNR>22_Greek('texGreek', '\\alpha\>', 'α')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\alpha\>' contained conceal cchar=α
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 900:   call s:Greek('texGreek','\\beta\>'^I^I,'β')
вызов function <SNR>22_Greek('texGreek', '\\beta\>', 'β')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\beta\>' contained conceal cchar=β
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 901:   call s:Greek('texGreek','\\gamma\>'^I^I,'γ')
вызов function <SNR>22_Greek('texGreek', '\\gamma\>', 'γ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\gamma\>' contained conceal cchar=γ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 902:   call s:Greek('texGreek','\\delta\>'^I^I,'δ')
вызов function <SNR>22_Greek('texGreek', '\\delta\>', 'δ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\delta\>' contained conceal cchar=δ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 903:   call s:Greek('texGreek','\\epsilon\>'^I^I,'ϵ')
вызов function <SNR>22_Greek('texGreek', '\\epsilon\>', 'ϵ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\epsilon\>' contained conceal cchar=ϵ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 904:   call s:Greek('texGreek','\\varepsilon\>'^I,'ε')
вызов function <SNR>22_Greek('texGreek', '\\varepsilon\>', 'ε')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\varepsilon\>' contained conceal cchar=ε
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 905:   call s:Greek('texGreek','\\zeta\>'^I^I,'ζ')
вызов function <SNR>22_Greek('texGreek', '\\zeta\>', 'ζ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\zeta\>' contained conceal cchar=ζ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 906:   call s:Greek('texGreek','\\eta\>'^I^I,'η')
вызов function <SNR>22_Greek('texGreek', '\\eta\>', 'η')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\eta\>' contained conceal cchar=η
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 907:   call s:Greek('texGreek','\\theta\>'^I^I,'θ')
вызов function <SNR>22_Greek('texGreek', '\\theta\>', 'θ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\theta\>' contained conceal cchar=θ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 908:   call s:Greek('texGreek','\\vartheta\>'^I^I,'ϑ')
вызов function <SNR>22_Greek('texGreek', '\\vartheta\>', 'ϑ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\vartheta\>' contained conceal cchar=ϑ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 909:   call s:Greek('texGreek','\\kappa\>'^I^I,'κ')
вызов function <SNR>22_Greek('texGreek', '\\kappa\>', 'κ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\kappa\>' contained conceal cchar=κ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 910:   call s:Greek('texGreek','\\lambda\>'^I^I,'λ')
вызов function <SNR>22_Greek('texGreek', '\\lambda\>', 'λ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\lambda\>' contained conceal cchar=λ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 911:   call s:Greek('texGreek','\\mu\>'^I^I,'μ')
вызов function <SNR>22_Greek('texGreek', '\\mu\>', 'μ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\mu\>' contained conceal cchar=μ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 912:   call s:Greek('texGreek','\\nu\>'^I^I,'ν')
вызов function <SNR>22_Greek('texGreek', '\\nu\>', 'ν')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\nu\>' contained conceal cchar=ν
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 913:   call s:Greek('texGreek','\\xi\>'^I^I,'ξ')
вызов function <SNR>22_Greek('texGreek', '\\xi\>', 'ξ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\xi\>' contained conceal cchar=ξ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 914:   call s:Greek('texGreek','\\pi\>'^I^I,'π')
вызов function <SNR>22_Greek('texGreek', '\\pi\>', 'π')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\pi\>' contained conceal cchar=π
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 915:   call s:Greek('texGreek','\\varpi\>'^I^I,'ϖ')
вызов function <SNR>22_Greek('texGreek', '\\varpi\>', 'ϖ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\varpi\>' contained conceal cchar=ϖ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 916:   call s:Greek('texGreek','\\rho\>'^I^I,'ρ')
вызов function <SNR>22_Greek('texGreek', '\\rho\>', 'ρ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\rho\>' contained conceal cchar=ρ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 917:   call s:Greek('texGreek','\\varrho\>'^I^I,'ϱ')
вызов function <SNR>22_Greek('texGreek', '\\varrho\>', 'ϱ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\varrho\>' contained conceal cchar=ϱ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 918:   call s:Greek('texGreek','\\sigma\>'^I^I,'σ')
вызов function <SNR>22_Greek('texGreek', '\\sigma\>', 'σ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\sigma\>' contained conceal cchar=σ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 919:   call s:Greek('texGreek','\\varsigma\>'^I^I,'ς')
вызов function <SNR>22_Greek('texGreek', '\\varsigma\>', 'ς')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\varsigma\>' contained conceal cchar=ς
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 920:   call s:Greek('texGreek','\\tau\>'^I^I,'τ')
вызов function <SNR>22_Greek('texGreek', '\\tau\>', 'τ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\tau\>' contained conceal cchar=τ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 921:   call s:Greek('texGreek','\\upsilon\>'^I^I,'υ')
вызов function <SNR>22_Greek('texGreek', '\\upsilon\>', 'υ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\upsilon\>' contained conceal cchar=υ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 922:   call s:Greek('texGreek','\\phi\>'^I^I,'φ')
вызов function <SNR>22_Greek('texGreek', '\\phi\>', 'φ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\phi\>' contained conceal cchar=φ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 923:   call s:Greek('texGreek','\\varphi\>'^I^I,'ϕ')
вызов function <SNR>22_Greek('texGreek', '\\varphi\>', 'ϕ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\varphi\>' contained conceal cchar=ϕ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 924:   call s:Greek('texGreek','\\chi\>'^I^I,'χ')
вызов function <SNR>22_Greek('texGreek', '\\chi\>', 'χ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\chi\>' contained conceal cchar=χ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 925:   call s:Greek('texGreek','\\psi\>'^I^I,'ψ')
вызов function <SNR>22_Greek('texGreek', '\\psi\>', 'ψ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\psi\>' contained conceal cchar=ψ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 926:   call s:Greek('texGreek','\\omega\>'^I^I,'ω')
вызов function <SNR>22_Greek('texGreek', '\\omega\>', 'ω')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\omega\>' contained conceal cchar=ω
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 927:   call s:Greek('texGreek','\\Gamma\>'^I^I,'Γ')
вызов function <SNR>22_Greek('texGreek', '\\Gamma\>', 'Γ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\Gamma\>' contained conceal cchar=Γ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 928:   call s:Greek('texGreek','\\Delta\>'^I^I,'Δ')
вызов function <SNR>22_Greek('texGreek', '\\Delta\>', 'Δ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\Delta\>' contained conceal cchar=Δ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 929:   call s:Greek('texGreek','\\Theta\>'^I^I,'Θ')
вызов function <SNR>22_Greek('texGreek', '\\Theta\>', 'Θ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\Theta\>' contained conceal cchar=Θ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 930:   call s:Greek('texGreek','\\Lambda\>'^I^I,'Λ')
вызов function <SNR>22_Greek('texGreek', '\\Lambda\>', 'Λ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\Lambda\>' contained conceal cchar=Λ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 931:   call s:Greek('texGreek','\\Xi\>'^I^I,'Χ')
вызов function <SNR>22_Greek('texGreek', '\\Xi\>', 'Χ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\Xi\>' contained conceal cchar=Χ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 932:   call s:Greek('texGreek','\\Pi\>'^I^I,'Π')
вызов function <SNR>22_Greek('texGreek', '\\Pi\>', 'Π')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\Pi\>' contained conceal cchar=Π
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 933:   call s:Greek('texGreek','\\Sigma\>'^I^I,'Σ')
вызов function <SNR>22_Greek('texGreek', '\\Sigma\>', 'Σ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\Sigma\>' contained conceal cchar=Σ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 934:   call s:Greek('texGreek','\\Upsilon\>'^I^I,'Υ')
вызов function <SNR>22_Greek('texGreek', '\\Upsilon\>', 'Υ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\Upsilon\>' contained conceal cchar=Υ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 935:   call s:Greek('texGreek','\\Phi\>'^I^I,'Φ')
вызов function <SNR>22_Greek('texGreek', '\\Phi\>', 'Φ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\Phi\>' contained conceal cchar=Φ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 936:   call s:Greek('texGreek','\\Psi\>'^I^I,'Ψ')
вызов function <SNR>22_Greek('texGreek', '\\Psi\>', 'Ψ')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\Psi\>' contained conceal cchar=Ψ
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 937:   call s:Greek('texGreek','\\Omega\>'^I^I,'Ω')
вызов function <SNR>22_Greek('texGreek', '\\Omega\>', 'Ω')

строка 1:     exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texGreek '\\Omega\>' contained conceal cchar=Ω
function <SNR>22_Greek возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 938:   delfun s:Greek
строка 939:  endif
строка 940: 
строка 941:  " Superscripts/Subscripts {{{2
строка 942:  if s:tex_conceal =~ 's'
строка 943:   syn region texSuperscript^Imatchgroup=Delimiter start='\^{'^Iskip="\\\\\|\\[{}]" end='}'^Icontained concealends contains=texSpecialChar,texSuperscripts,texStatement,texSubscript,texSuperscript,texMathMatcher
строка 944:   syn region texSubscript^Imatchgroup=Delimiter start='_{'^I^Iskip="\\\\\|\\[{}]" end='}'^Icontained concealends contains=texSpecialChar,texSubscripts,texStatement,texSubscript,texSuperscript,texMathMatcher
строка 945:   fun! s:SuperSub(group,leader,pat,cchar)
строка 949:   call s:SuperSub('texSuperscript','\^','0','⁰')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '0', '⁰')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^0' contained conceal cchar=⁰
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '0' contained conceal cchar=⁰ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 950:   call s:SuperSub('texSuperscript','\^','1','¹')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '1', '¹')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^1' contained conceal cchar=¹
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '1' contained conceal cchar=¹ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 951:   call s:SuperSub('texSuperscript','\^','2','²')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '2', '²')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^2' contained conceal cchar=²
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '2' contained conceal cchar=² nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 952:   call s:SuperSub('texSuperscript','\^','3','³')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '3', '³')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^3' contained conceal cchar=³
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '3' contained conceal cchar=³ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 953:   call s:SuperSub('texSuperscript','\^','4','⁴')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '4', '⁴')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^4' contained conceal cchar=⁴
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '4' contained conceal cchar=⁴ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 954:   call s:SuperSub('texSuperscript','\^','5','⁵')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '5', '⁵')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^5' contained conceal cchar=⁵
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '5' contained conceal cchar=⁵ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 955:   call s:SuperSub('texSuperscript','\^','6','⁶')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '6', '⁶')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^6' contained conceal cchar=⁶
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '6' contained conceal cchar=⁶ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 956:   call s:SuperSub('texSuperscript','\^','7','⁷')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '7', '⁷')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^7' contained conceal cchar=⁷
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '7' contained conceal cchar=⁷ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 957:   call s:SuperSub('texSuperscript','\^','8','⁸')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '8', '⁸')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^8' contained conceal cchar=⁸
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '8' contained conceal cchar=⁸ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 958:   call s:SuperSub('texSuperscript','\^','9','⁹')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '9', '⁹')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^9' contained conceal cchar=⁹
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '9' contained conceal cchar=⁹ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 959:   call s:SuperSub('texSuperscript','\^','a','ᵃ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'a', 'ᵃ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^a' contained conceal cchar=ᵃ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'a' contained conceal cchar=ᵃ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 960:   call s:SuperSub('texSuperscript','\^','b','ᵇ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'b', 'ᵇ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^b' contained conceal cchar=ᵇ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'b' contained conceal cchar=ᵇ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 961:   call s:SuperSub('texSuperscript','\^','c','ᶜ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'c', 'ᶜ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^c' contained conceal cchar=ᶜ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'c' contained conceal cchar=ᶜ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 962:   call s:SuperSub('texSuperscript','\^','d','ᵈ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'd', 'ᵈ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^d' contained conceal cchar=ᵈ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'd' contained conceal cchar=ᵈ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 963:   call s:SuperSub('texSuperscript','\^','e','ᵉ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'e', 'ᵉ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^e' contained conceal cchar=ᵉ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'e' contained conceal cchar=ᵉ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 964:   call s:SuperSub('texSuperscript','\^','f','ᶠ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'f', 'ᶠ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^f' contained conceal cchar=ᶠ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'f' contained conceal cchar=ᶠ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 965:   call s:SuperSub('texSuperscript','\^','g','ᵍ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'g', 'ᵍ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^g' contained conceal cchar=ᵍ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'g' contained conceal cchar=ᵍ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 966:   call s:SuperSub('texSuperscript','\^','h','ʰ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'h', 'ʰ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^h' contained conceal cchar=ʰ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'h' contained conceal cchar=ʰ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 967:   call s:SuperSub('texSuperscript','\^','i','ⁱ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'i', 'ⁱ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^i' contained conceal cchar=ⁱ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'i' contained conceal cchar=ⁱ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 968:   call s:SuperSub('texSuperscript','\^','j','ʲ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'j', 'ʲ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^j' contained conceal cchar=ʲ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'j' contained conceal cchar=ʲ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 969:   call s:SuperSub('texSuperscript','\^','k','ᵏ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'k', 'ᵏ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^k' contained conceal cchar=ᵏ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'k' contained conceal cchar=ᵏ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 970:   call s:SuperSub('texSuperscript','\^','l','ˡ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'l', 'ˡ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^l' contained conceal cchar=ˡ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'l' contained conceal cchar=ˡ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 971:   call s:SuperSub('texSuperscript','\^','m','ᵐ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'm', 'ᵐ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^m' contained conceal cchar=ᵐ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'm' contained conceal cchar=ᵐ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 972:   call s:SuperSub('texSuperscript','\^','n','ⁿ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'n', 'ⁿ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^n' contained conceal cchar=ⁿ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'n' contained conceal cchar=ⁿ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 973:   call s:SuperSub('texSuperscript','\^','o','ᵒ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'o', 'ᵒ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^o' contained conceal cchar=ᵒ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'o' contained conceal cchar=ᵒ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 974:   call s:SuperSub('texSuperscript','\^','p','ᵖ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'p', 'ᵖ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^p' contained conceal cchar=ᵖ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'p' contained conceal cchar=ᵖ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 975:   call s:SuperSub('texSuperscript','\^','r','ʳ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'r', 'ʳ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^r' contained conceal cchar=ʳ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'r' contained conceal cchar=ʳ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 976:   call s:SuperSub('texSuperscript','\^','s','ˢ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 's', 'ˢ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^s' contained conceal cchar=ˢ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 's' contained conceal cchar=ˢ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 977:   call s:SuperSub('texSuperscript','\^','t','ᵗ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 't', 'ᵗ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^t' contained conceal cchar=ᵗ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 't' contained conceal cchar=ᵗ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 978:   call s:SuperSub('texSuperscript','\^','u','ᵘ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'u', 'ᵘ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^u' contained conceal cchar=ᵘ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'u' contained conceal cchar=ᵘ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 979:   call s:SuperSub('texSuperscript','\^','v','ᵛ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'v', 'ᵛ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^v' contained conceal cchar=ᵛ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'v' contained conceal cchar=ᵛ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 980:   call s:SuperSub('texSuperscript','\^','w','ʷ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'w', 'ʷ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^w' contained conceal cchar=ʷ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'w' contained conceal cchar=ʷ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 981:   call s:SuperSub('texSuperscript','\^','x','ˣ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'x', 'ˣ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^x' contained conceal cchar=ˣ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'x' contained conceal cchar=ˣ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 982:   call s:SuperSub('texSuperscript','\^','y','ʸ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'y', 'ʸ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^y' contained conceal cchar=ʸ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'y' contained conceal cchar=ʸ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 983:   call s:SuperSub('texSuperscript','\^','z','ᶻ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'z', 'ᶻ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^z' contained conceal cchar=ᶻ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'z' contained conceal cchar=ᶻ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 984:   call s:SuperSub('texSuperscript','\^','A','ᴬ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'A', 'ᴬ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^A' contained conceal cchar=ᴬ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'A' contained conceal cchar=ᴬ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 985:   call s:SuperSub('texSuperscript','\^','B','ᴮ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'B', 'ᴮ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^B' contained conceal cchar=ᴮ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'B' contained conceal cchar=ᴮ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 986:   call s:SuperSub('texSuperscript','\^','D','ᴰ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'D', 'ᴰ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^D' contained conceal cchar=ᴰ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'D' contained conceal cchar=ᴰ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 987:   call s:SuperSub('texSuperscript','\^','E','ᴱ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'E', 'ᴱ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^E' contained conceal cchar=ᴱ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'E' contained conceal cchar=ᴱ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 988:   call s:SuperSub('texSuperscript','\^','G','ᴳ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'G', 'ᴳ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^G' contained conceal cchar=ᴳ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'G' contained conceal cchar=ᴳ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 989:   call s:SuperSub('texSuperscript','\^','H','ᴴ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'H', 'ᴴ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^H' contained conceal cchar=ᴴ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'H' contained conceal cchar=ᴴ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 990:   call s:SuperSub('texSuperscript','\^','I','ᴵ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'I', 'ᴵ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^I' contained conceal cchar=ᴵ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'I' contained conceal cchar=ᴵ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 991:   call s:SuperSub('texSuperscript','\^','J','ᴶ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'J', 'ᴶ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^J' contained conceal cchar=ᴶ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'J' contained conceal cchar=ᴶ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 992:   call s:SuperSub('texSuperscript','\^','K','ᴷ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'K', 'ᴷ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^K' contained conceal cchar=ᴷ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'K' contained conceal cchar=ᴷ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 993:   call s:SuperSub('texSuperscript','\^','L','ᴸ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'L', 'ᴸ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^L' contained conceal cchar=ᴸ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'L' contained conceal cchar=ᴸ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 994:   call s:SuperSub('texSuperscript','\^','M','ᴹ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'M', 'ᴹ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^M' contained conceal cchar=ᴹ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'M' contained conceal cchar=ᴹ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 995:   call s:SuperSub('texSuperscript','\^','N','ᴺ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'N', 'ᴺ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^N' contained conceal cchar=ᴺ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'N' contained conceal cchar=ᴺ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 996:   call s:SuperSub('texSuperscript','\^','O','ᴼ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'O', 'ᴼ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^O' contained conceal cchar=ᴼ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'O' contained conceal cchar=ᴼ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 997:   call s:SuperSub('texSuperscript','\^','P','ᴾ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'P', 'ᴾ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^P' contained conceal cchar=ᴾ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'P' contained conceal cchar=ᴾ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 998:   call s:SuperSub('texSuperscript','\^','R','ᴿ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'R', 'ᴿ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^R' contained conceal cchar=ᴿ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'R' contained conceal cchar=ᴿ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 999:   call s:SuperSub('texSuperscript','\^','T','ᵀ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'T', 'ᵀ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^T' contained conceal cchar=ᵀ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'T' contained conceal cchar=ᵀ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1000:   call s:SuperSub('texSuperscript','\^','U','ᵁ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'U', 'ᵁ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^U' contained conceal cchar=ᵁ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'U' contained conceal cchar=ᵁ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1001:   call s:SuperSub('texSuperscript','\^','W','ᵂ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', 'W', 'ᵂ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^W' contained conceal cchar=ᵂ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts 'W' contained conceal cchar=ᵂ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1002:   call s:SuperSub('texSuperscript','\^','+','⁺')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '+', '⁺')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^+' contained conceal cchar=⁺
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '+' contained conceal cchar=⁺ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1003:   call s:SuperSub('texSuperscript','\^','-','⁻')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '-', '⁻')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^-' contained conceal cchar=⁻
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '-' contained conceal cchar=⁻ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1004:   call s:SuperSub('texSuperscript','\^','<','˂')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '<', '˂')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^<' contained conceal cchar=˂
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '<' contained conceal cchar=˂ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1005:   call s:SuperSub('texSuperscript','\^','>','˃')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '>', '˃')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^>' contained conceal cchar=˃
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '>' contained conceal cchar=˃ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1006:   call s:SuperSub('texSuperscript','\^','/','ˊ')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '/', 'ˊ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^/' contained conceal cchar=ˊ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '/' contained conceal cchar=ˊ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1007:   call s:SuperSub('texSuperscript','\^','(','⁽')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '(', '⁽')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^(' contained conceal cchar=⁽
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '(' contained conceal cchar=⁽ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1008:   call s:SuperSub('texSuperscript','\^',')','⁾')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', ')', '⁾')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^)' contained conceal cchar=⁾
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts ')' contained conceal cchar=⁾ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1009:   call s:SuperSub('texSuperscript','\^','\.','˙')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '\.', '˙')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^\.' contained conceal cchar=˙
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '\.' contained conceal cchar=˙ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1010:   call s:SuperSub('texSuperscript','\^','=','˭')
вызов function <SNR>22_SuperSub('texSuperscript', '\^', '=', '˭')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSuperscript '\^=' contained conceal cchar=˭
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSuperscripts '=' contained conceal cchar=˭ nextgroup=texSuperscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1011:   call s:SuperSub('texSubscript','_','0','₀')
вызов function <SNR>22_SuperSub('texSubscript', '_', '0', '₀')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_0' contained conceal cchar=₀
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '0' contained conceal cchar=₀ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1012:   call s:SuperSub('texSubscript','_','1','₁')
вызов function <SNR>22_SuperSub('texSubscript', '_', '1', '₁')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_1' contained conceal cchar=₁
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '1' contained conceal cchar=₁ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1013:   call s:SuperSub('texSubscript','_','2','₂')
вызов function <SNR>22_SuperSub('texSubscript', '_', '2', '₂')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_2' contained conceal cchar=₂
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '2' contained conceal cchar=₂ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1014:   call s:SuperSub('texSubscript','_','3','₃')
вызов function <SNR>22_SuperSub('texSubscript', '_', '3', '₃')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_3' contained conceal cchar=₃
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '3' contained conceal cchar=₃ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1015:   call s:SuperSub('texSubscript','_','4','₄')
вызов function <SNR>22_SuperSub('texSubscript', '_', '4', '₄')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_4' contained conceal cchar=₄
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '4' contained conceal cchar=₄ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1016:   call s:SuperSub('texSubscript','_','5','₅')
вызов function <SNR>22_SuperSub('texSubscript', '_', '5', '₅')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_5' contained conceal cchar=₅
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '5' contained conceal cchar=₅ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1017:   call s:SuperSub('texSubscript','_','6','₆')
вызов function <SNR>22_SuperSub('texSubscript', '_', '6', '₆')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_6' contained conceal cchar=₆
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '6' contained conceal cchar=₆ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1018:   call s:SuperSub('texSubscript','_','7','₇')
вызов function <SNR>22_SuperSub('texSubscript', '_', '7', '₇')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_7' contained conceal cchar=₇
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '7' contained conceal cchar=₇ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1019:   call s:SuperSub('texSubscript','_','8','₈')
вызов function <SNR>22_SuperSub('texSubscript', '_', '8', '₈')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_8' contained conceal cchar=₈
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '8' contained conceal cchar=₈ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1020:   call s:SuperSub('texSubscript','_','9','₉')
вызов function <SNR>22_SuperSub('texSubscript', '_', '9', '₉')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_9' contained conceal cchar=₉
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '9' contained conceal cchar=₉ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1021:   call s:SuperSub('texSubscript','_','a','ₐ')
вызов function <SNR>22_SuperSub('texSubscript', '_', 'a', 'ₐ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_a' contained conceal cchar=ₐ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts 'a' contained conceal cchar=ₐ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1022:   call s:SuperSub('texSubscript','_','e','ₑ')
вызов function <SNR>22_SuperSub('texSubscript', '_', 'e', 'ₑ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_e' contained conceal cchar=ₑ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts 'e' contained conceal cchar=ₑ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1023:   call s:SuperSub('texSubscript','_','i','ᵢ')
вызов function <SNR>22_SuperSub('texSubscript', '_', 'i', 'ᵢ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_i' contained conceal cchar=ᵢ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts 'i' contained conceal cchar=ᵢ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1024:   call s:SuperSub('texSubscript','_','o','ₒ')
вызов function <SNR>22_SuperSub('texSubscript', '_', 'o', 'ₒ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_o' contained conceal cchar=ₒ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts 'o' contained conceal cchar=ₒ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1025:   call s:SuperSub('texSubscript','_','u','ᵤ')
вызов function <SNR>22_SuperSub('texSubscript', '_', 'u', 'ᵤ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_u' contained conceal cchar=ᵤ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts 'u' contained conceal cchar=ᵤ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1026:   call s:SuperSub('texSubscript','_','+','₊')
вызов function <SNR>22_SuperSub('texSubscript', '_', '+', '₊')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_+' contained conceal cchar=₊
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '+' contained conceal cchar=₊ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1027:   call s:SuperSub('texSubscript','_','-','₋')
вызов function <SNR>22_SuperSub('texSubscript', '_', '-', '₋')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_-' contained conceal cchar=₋
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '-' contained conceal cchar=₋ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1028:   call s:SuperSub('texSubscript','_','/','ˏ')
вызов function <SNR>22_SuperSub('texSubscript', '_', '/', 'ˏ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_/' contained conceal cchar=ˏ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '/' contained conceal cchar=ˏ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1029:   call s:SuperSub('texSubscript','_','(','₍')
вызов function <SNR>22_SuperSub('texSubscript', '_', '(', '₍')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_(' contained conceal cchar=₍
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '(' contained conceal cchar=₍ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1030:   call s:SuperSub('texSubscript','_',')','₎')
вызов function <SNR>22_SuperSub('texSubscript', '_', ')', '₎')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_)' contained conceal cchar=₎
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts ')' contained conceal cchar=₎ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1031:   call s:SuperSub('texSubscript','_','\.','‸')
вызов function <SNR>22_SuperSub('texSubscript', '_', '\.', '‸')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_\.' contained conceal cchar=‸
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '\.' contained conceal cchar=‸ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1032:   call s:SuperSub('texSubscript','_','r','ᵣ')
вызов function <SNR>22_SuperSub('texSubscript', '_', 'r', 'ᵣ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_r' contained conceal cchar=ᵣ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts 'r' contained conceal cchar=ᵣ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1033:   call s:SuperSub('texSubscript','_','v','ᵥ')
вызов function <SNR>22_SuperSub('texSubscript', '_', 'v', 'ᵥ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_v' contained conceal cchar=ᵥ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts 'v' contained conceal cchar=ᵥ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1034:   call s:SuperSub('texSubscript','_','x','ₓ')
вызов function <SNR>22_SuperSub('texSubscript', '_', 'x', 'ₓ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_x' contained conceal cchar=ₓ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts 'x' contained conceal cchar=ₓ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1035:   call s:SuperSub('texSubscript','_','\\beta\>' ,'ᵦ')
вызов function <SNR>22_SuperSub('texSubscript', '_', '\\beta\>', 'ᵦ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_\\beta\>' contained conceal cchar=ᵦ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '\\beta\>' contained conceal cchar=ᵦ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1036:   call s:SuperSub('texSubscript','_','\\delta\>','ᵨ')
вызов function <SNR>22_SuperSub('texSubscript', '_', '\\delta\>', 'ᵨ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_\\delta\>' contained conceal cchar=ᵨ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '\\delta\>' contained conceal cchar=ᵨ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1037:   call s:SuperSub('texSubscript','_','\\phi\>'  ,'ᵩ')
вызов function <SNR>22_SuperSub('texSubscript', '_', '\\phi\>', 'ᵩ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_\\phi\>' contained conceal cchar=ᵩ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '\\phi\>' contained conceal cchar=ᵩ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1038:   call s:SuperSub('texSubscript','_','\\gamma\>','ᵧ')
вызов function <SNR>22_SuperSub('texSubscript', '_', '\\gamma\>', 'ᵧ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_\\gamma\>' contained conceal cchar=ᵧ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '\\gamma\>' contained conceal cchar=ᵧ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1039:   call s:SuperSub('texSubscript','_','\\chi\>'  ,'ᵪ')
вызов function <SNR>22_SuperSub('texSubscript', '_', '\\chi\>', 'ᵪ')

строка 1:     exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
строка 1: syn match texSubscript '_\\chi\>' contained conceal cchar=ᵪ
строка 2:     exe 'syn match '.a:group."s '".a:pat."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
строка 2: syn match texSubscripts '\\chi\>' contained conceal cchar=ᵪ nextgroup=texSubscripts
function <SNR>22_SuperSub возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1040:   delfun s:SuperSub
строка 1041:  endif
строка 1042: 
строка 1043:  " Accented characters: {{{2
строка 1044:  if s:tex_conceal =~ 'a'
строка 1045:   if b:tex_stylish
строка 1046:    syn match texAccent^I^I"\\[bcdvuH][^a-zA-Z@]"me=e-1
строка 1047:    syn match texLigature^I^I"\\\([ijolL]\|ae\|oe\|ss\|AA\|AE\|OE\)[^a-zA-Z@]"me=e-1
строка 1048:   else
строка 1049:    fun! s:Accents(chr,...)
строка 1067:    "                  \`  \'  \^  \"  \~  \.  \c  \H  \k  \r  \u  \v
строка 1068:    call s:Accents('a','à','á','â','ä','ã','ȧ',' ',' ','ą','å','ă','ă')
вызов function <SNR>22_Accents('a', 'à', 'á', 'â', 'ä', 'ã', 'ȧ', ' ', ' ', 'ą', 'å', 'ă', 'ă')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({a}\|a\)' conceal cchar=à
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({a}\|a\)' conceal cchar=á
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({a}\|a\)' conceal cchar=â
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({a}\|a\)' conceal cchar=ä
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({a}\|a\)' conceal cchar=ã
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({a}\|a\)' conceal cchar=ȧ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\k\(\s*{a}\|\s\+a\)' conceal cchar=ą
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\r\(\s*{a}\|\s\+a\)' conceal cchar=å
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{a}\|\s\+a\)' conceal cchar=ă
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{a}\|\s\+a\)' conceal cchar=ă
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1069:    call s:Accents('A','À','Á','Â','Ä','Ã','Ȧ',' ',' ','Ą','Å','Ă','Ă')
вызов function <SNR>22_Accents('A', 'À', 'Á', 'Â', 'Ä', 'Ã', 'Ȧ', ' ', ' ', 'Ą', 'Å', 'Ă', 'Ă')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({A}\|A\)' conceal cchar=À
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({A}\|A\)' conceal cchar=Á
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({A}\|A\)' conceal cchar=Â
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({A}\|A\)' conceal cchar=Ä
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({A}\|A\)' conceal cchar=Ã
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({A}\|A\)' conceal cchar=Ȧ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\k\(\s*{A}\|\s\+A\)' conceal cchar=Ą
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\r\(\s*{A}\|\s\+A\)' conceal cchar=Å
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{A}\|\s\+A\)' conceal cchar=Ă
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{A}\|\s\+A\)' conceal cchar=Ă
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1070:    call s:Accents('c',' ','ć','ĉ',' ',' ','ċ','ç',' ',' ',' ',' ','č')
вызов function <SNR>22_Accents('c', ' ', 'ć', 'ĉ', ' ', ' ', 'ċ', 'ç', ' ', ' ', ' ', ' ', 'č')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({c}\|c\)' conceal cchar=ć
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({c}\|c\)' conceal cchar=ĉ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({c}\|c\)' conceal cchar=ċ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{c}\|\s\+c\)' conceal cchar=ç
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{c}\|\s\+c\)' conceal cchar=č
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1071:    call s:Accents('C',' ','Ć','Ĉ',' ',' ','Ċ','Ç',' ',' ',' ',' ','Č')
вызов function <SNR>22_Accents('C', ' ', 'Ć', 'Ĉ', ' ', ' ', 'Ċ', 'Ç', ' ', ' ', ' ', ' ', 'Č')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({C}\|C\)' conceal cchar=Ć
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({C}\|C\)' conceal cchar=Ĉ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({C}\|C\)' conceal cchar=Ċ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{C}\|\s\+C\)' conceal cchar=Ç
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{C}\|\s\+C\)' conceal cchar=Č
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1072:    call s:Accents('d',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','ď')
вызов function <SNR>22_Accents('d', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'ď')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{d}\|\s\+d\)' conceal cchar=ď
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1073:    call s:Accents('D',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','Ď')
вызов function <SNR>22_Accents('D', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Ď')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{D}\|\s\+D\)' conceal cchar=Ď
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1074:    call s:Accents('e','è','é','ê','ë','ẽ','ė','ȩ',' ','ę',' ','ĕ','ě')
вызов function <SNR>22_Accents('e', 'è', 'é', 'ê', 'ë', 'ẽ', 'ė', 'ȩ', ' ', 'ę', ' ', 'ĕ', 'ě')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({e}\|e\)' conceal cchar=è
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({e}\|e\)' conceal cchar=é
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({e}\|e\)' conceal cchar=ê
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({e}\|e\)' conceal cchar=ë
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({e}\|e\)' conceal cchar=ẽ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({e}\|e\)' conceal cchar=ė
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{e}\|\s\+e\)' conceal cchar=ȩ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\k\(\s*{e}\|\s\+e\)' conceal cchar=ę
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{e}\|\s\+e\)' conceal cchar=ĕ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{e}\|\s\+e\)' conceal cchar=ě
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1075:    call s:Accents('E','È','É','Ê','Ë','Ẽ','Ė','Ȩ',' ','Ę',' ','Ĕ','Ě')
вызов function <SNR>22_Accents('E', 'È', 'É', 'Ê', 'Ë', 'Ẽ', 'Ė', 'Ȩ', ' ', 'Ę', ' ', 'Ĕ', 'Ě')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({E}\|E\)' conceal cchar=È
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({E}\|E\)' conceal cchar=É
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({E}\|E\)' conceal cchar=Ê
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({E}\|E\)' conceal cchar=Ë
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({E}\|E\)' conceal cchar=Ẽ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({E}\|E\)' conceal cchar=Ė
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{E}\|\s\+E\)' conceal cchar=Ȩ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\k\(\s*{E}\|\s\+E\)' conceal cchar=Ę
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{E}\|\s\+E\)' conceal cchar=Ĕ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{E}\|\s\+E\)' conceal cchar=Ě
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1076:    call s:Accents('g',' ','ǵ','ĝ',' ',' ','ġ','ģ',' ',' ',' ','ğ',' ')
вызов function <SNR>22_Accents('g', ' ', 'ǵ', 'ĝ', ' ', ' ', 'ġ', 'ģ', ' ', ' ', ' ', 'ğ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({g}\|g\)' conceal cchar=ǵ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({g}\|g\)' conceal cchar=ĝ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({g}\|g\)' conceal cchar=ġ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{g}\|\s\+g\)' conceal cchar=ģ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{g}\|\s\+g\)' conceal cchar=ğ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1077:    call s:Accents('G',' ','Ǵ','Ĝ',' ',' ','Ġ','Ģ',' ',' ',' ','Ğ',' ')
вызов function <SNR>22_Accents('G', ' ', 'Ǵ', 'Ĝ', ' ', ' ', 'Ġ', 'Ģ', ' ', ' ', ' ', 'Ğ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({G}\|G\)' conceal cchar=Ǵ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({G}\|G\)' conceal cchar=Ĝ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({G}\|G\)' conceal cchar=Ġ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{G}\|\s\+G\)' conceal cchar=Ģ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{G}\|\s\+G\)' conceal cchar=Ğ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1078:    call s:Accents('h',' ',' ','ĥ',' ',' ',' ',' ',' ',' ',' ',' ','ȟ')
вызов function <SNR>22_Accents('h', ' ', ' ', 'ĥ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'ȟ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({h}\|h\)' conceal cchar=ĥ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{h}\|\s\+h\)' conceal cchar=ȟ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1079:    call s:Accents('H',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','Ȟ')
вызов function <SNR>22_Accents('H', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Ȟ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{H}\|\s\+H\)' conceal cchar=Ȟ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1080:    call s:Accents('i','ì','í','î','ï','ĩ','į',' ',' ',' ',' ','ĭ',' ')
вызов function <SNR>22_Accents('i', 'ì', 'í', 'î', 'ï', 'ĩ', 'į', ' ', ' ', ' ', ' ', 'ĭ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({i}\|i\)' conceal cchar=ì
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({i}\|i\)' conceal cchar=í
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({i}\|i\)' conceal cchar=î
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({i}\|i\)' conceal cchar=ï
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({i}\|i\)' conceal cchar=ĩ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({i}\|i\)' conceal cchar=į
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{i}\|\s\+i\)' conceal cchar=ĭ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1081:    call s:Accents('I','Ì','Í','Î','Ï','Ĩ','İ',' ',' ',' ',' ','Ĭ',' ')
вызов function <SNR>22_Accents('I', 'Ì', 'Í', 'Î', 'Ï', 'Ĩ', 'İ', ' ', ' ', ' ', ' ', 'Ĭ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({I}\|I\)' conceal cchar=Ì
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({I}\|I\)' conceal cchar=Í
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({I}\|I\)' conceal cchar=Î
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({I}\|I\)' conceal cchar=Ï
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({I}\|I\)' conceal cchar=Ĩ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({I}\|I\)' conceal cchar=İ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{I}\|\s\+I\)' conceal cchar=Ĭ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1082:    call s:Accents('J',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','ǰ')
вызов function <SNR>22_Accents('J', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'ǰ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{J}\|\s\+J\)' conceal cchar=ǰ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1083:    call s:Accents('k',' ',' ',' ',' ',' ',' ','ķ',' ',' ',' ',' ',' ')
вызов function <SNR>22_Accents('k', ' ', ' ', ' ', ' ', ' ', ' ', 'ķ', ' ', ' ', ' ', ' ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{k}\|\s\+k\)' conceal cchar=ķ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1084:    call s:Accents('K',' ',' ',' ',' ',' ',' ','Ķ',' ',' ',' ',' ',' ')
вызов function <SNR>22_Accents('K', ' ', ' ', ' ', ' ', ' ', ' ', 'Ķ', ' ', ' ', ' ', ' ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{K}\|\s\+K\)' conceal cchar=Ķ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1085:    call s:Accents('l',' ','ĺ','ľ',' ',' ',' ','ļ',' ',' ',' ',' ','ľ')
вызов function <SNR>22_Accents('l', ' ', 'ĺ', 'ľ', ' ', ' ', ' ', 'ļ', ' ', ' ', ' ', ' ', 'ľ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({l}\|l\)' conceal cchar=ĺ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({l}\|l\)' conceal cchar=ľ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{l}\|\s\+l\)' conceal cchar=ļ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{l}\|\s\+l\)' conceal cchar=ľ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1086:    call s:Accents('L',' ','Ĺ','Ľ',' ',' ',' ','Ļ',' ',' ',' ',' ','Ľ')
вызов function <SNR>22_Accents('L', ' ', 'Ĺ', 'Ľ', ' ', ' ', ' ', 'Ļ', ' ', ' ', ' ', ' ', 'Ľ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({L}\|L\)' conceal cchar=Ĺ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({L}\|L\)' conceal cchar=Ľ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{L}\|\s\+L\)' conceal cchar=Ļ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{L}\|\s\+L\)' conceal cchar=Ľ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1087:    call s:Accents('n',' ','ń',' ',' ','ñ',' ','ņ',' ',' ',' ',' ','ň')
вызов function <SNR>22_Accents('n', ' ', 'ń', ' ', ' ', 'ñ', ' ', 'ņ', ' ', ' ', ' ', ' ', 'ň')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({n}\|n\)' conceal cchar=ń
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({n}\|n\)' conceal cchar=ñ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{n}\|\s\+n\)' conceal cchar=ņ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{n}\|\s\+n\)' conceal cchar=ň
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1088:    call s:Accents('N',' ','Ń',' ',' ','Ñ',' ','Ņ',' ',' ',' ',' ','Ň')
вызов function <SNR>22_Accents('N', ' ', 'Ń', ' ', ' ', 'Ñ', ' ', 'Ņ', ' ', ' ', ' ', ' ', 'Ň')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({N}\|N\)' conceal cchar=Ń
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({N}\|N\)' conceal cchar=Ñ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{N}\|\s\+N\)' conceal cchar=Ņ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{N}\|\s\+N\)' conceal cchar=Ň
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1089:    call s:Accents('o','ò','ó','ô','ö','õ','ȯ',' ','ő','ǫ',' ','ŏ',' ')
вызов function <SNR>22_Accents('o', 'ò', 'ó', 'ô', 'ö', 'õ', 'ȯ', ' ', 'ő', 'ǫ', ' ', 'ŏ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({o}\|o\)' conceal cchar=ò
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({o}\|o\)' conceal cchar=ó
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({o}\|o\)' conceal cchar=ô
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({o}\|o\)' conceal cchar=ö
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({o}\|o\)' conceal cchar=õ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({o}\|o\)' conceal cchar=ȯ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\H\(\s*{o}\|\s\+o\)' conceal cchar=ő
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\k\(\s*{o}\|\s\+o\)' conceal cchar=ǫ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{o}\|\s\+o\)' conceal cchar=ŏ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1090:    call s:Accents('O','Ò','Ó','Ô','Ö','Õ','Ȯ',' ','Ő','Ǫ',' ','Ŏ',' ')
вызов function <SNR>22_Accents('O', 'Ò', 'Ó', 'Ô', 'Ö', 'Õ', 'Ȯ', ' ', 'Ő', 'Ǫ', ' ', 'Ŏ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({O}\|O\)' conceal cchar=Ò
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({O}\|O\)' conceal cchar=Ó
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({O}\|O\)' conceal cchar=Ô
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({O}\|O\)' conceal cchar=Ö
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({O}\|O\)' conceal cchar=Õ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({O}\|O\)' conceal cchar=Ȯ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\H\(\s*{O}\|\s\+O\)' conceal cchar=Ő
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\k\(\s*{O}\|\s\+O\)' conceal cchar=Ǫ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{O}\|\s\+O\)' conceal cchar=Ŏ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1091:    call s:Accents('r',' ','ŕ',' ',' ',' ',' ','ŗ',' ',' ',' ',' ','ř')
вызов function <SNR>22_Accents('r', ' ', 'ŕ', ' ', ' ', ' ', ' ', 'ŗ', ' ', ' ', ' ', ' ', 'ř')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({r}\|r\)' conceal cchar=ŕ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{r}\|\s\+r\)' conceal cchar=ŗ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{r}\|\s\+r\)' conceal cchar=ř
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1092:    call s:Accents('R',' ','Ŕ',' ',' ',' ',' ','Ŗ',' ',' ',' ',' ','Ř')
вызов function <SNR>22_Accents('R', ' ', 'Ŕ', ' ', ' ', ' ', ' ', 'Ŗ', ' ', ' ', ' ', ' ', 'Ř')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({R}\|R\)' conceal cchar=Ŕ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{R}\|\s\+R\)' conceal cchar=Ŗ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{R}\|\s\+R\)' conceal cchar=Ř
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1093:    call s:Accents('s',' ','ś','ŝ',' ',' ',' ','ş',' ','ȿ',' ',' ','š')
вызов function <SNR>22_Accents('s', ' ', 'ś', 'ŝ', ' ', ' ', ' ', 'ş', ' ', 'ȿ', ' ', ' ', 'š')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({s}\|s\)' conceal cchar=ś
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({s}\|s\)' conceal cchar=ŝ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{s}\|\s\+s\)' conceal cchar=ş
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\k\(\s*{s}\|\s\+s\)' conceal cchar=ȿ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{s}\|\s\+s\)' conceal cchar=š
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1094:    call s:Accents('S',' ','Ś','Ŝ',' ',' ',' ','Ş',' ',' ',' ',' ','Š')
вызов function <SNR>22_Accents('S', ' ', 'Ś', 'Ŝ', ' ', ' ', ' ', 'Ş', ' ', ' ', ' ', ' ', 'Š')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({S}\|S\)' conceal cchar=Ś
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({S}\|S\)' conceal cchar=Ŝ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{S}\|\s\+S\)' conceal cchar=Ş
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{S}\|\s\+S\)' conceal cchar=Š
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1095:    call s:Accents('t',' ',' ',' ',' ',' ',' ','ţ',' ',' ',' ',' ','ť')
вызов function <SNR>22_Accents('t', ' ', ' ', ' ', ' ', ' ', ' ', 'ţ', ' ', ' ', ' ', ' ', 'ť')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{t}\|\s\+t\)' conceal cchar=ţ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{t}\|\s\+t\)' conceal cchar=ť
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1096:    call s:Accents('T',' ',' ',' ',' ',' ',' ','Ţ',' ',' ',' ',' ','Ť')
вызов function <SNR>22_Accents('T', ' ', ' ', ' ', ' ', ' ', ' ', 'Ţ', ' ', ' ', ' ', ' ', 'Ť')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\c\(\s*{T}\|\s\+T\)' conceal cchar=Ţ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{T}\|\s\+T\)' conceal cchar=Ť
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1097:    call s:Accents('u','ù','ú','û','ü','ũ',' ',' ','ű','ų','ů','ŭ','ǔ')
вызов function <SNR>22_Accents('u', 'ù', 'ú', 'û', 'ü', 'ũ', ' ', ' ', 'ű', 'ų', 'ů', 'ŭ', 'ǔ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({u}\|u\)' conceal cchar=ù
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({u}\|u\)' conceal cchar=ú
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({u}\|u\)' conceal cchar=û
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({u}\|u\)' conceal cchar=ü
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({u}\|u\)' conceal cchar=ũ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\H\(\s*{u}\|\s\+u\)' conceal cchar=ű
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\k\(\s*{u}\|\s\+u\)' conceal cchar=ų
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\r\(\s*{u}\|\s\+u\)' conceal cchar=ů
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{u}\|\s\+u\)' conceal cchar=ŭ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{u}\|\s\+u\)' conceal cchar=ǔ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1098:    call s:Accents('U','Ù','Ú','Û','Ü','Ũ',' ',' ','Ű','Ų','Ů','Ŭ','Ǔ')
вызов function <SNR>22_Accents('U', 'Ù', 'Ú', 'Û', 'Ü', 'Ũ', ' ', ' ', 'Ű', 'Ų', 'Ů', 'Ŭ', 'Ǔ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({U}\|U\)' conceal cchar=Ù
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({U}\|U\)' conceal cchar=Ú
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({U}\|U\)' conceal cchar=Û
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({U}\|U\)' conceal cchar=Ü
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({U}\|U\)' conceal cchar=Ũ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\H\(\s*{U}\|\s\+U\)' conceal cchar=Ű
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\k\(\s*{U}\|\s\+U\)' conceal cchar=Ų
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\r\(\s*{U}\|\s\+U\)' conceal cchar=Ů
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{U}\|\s\+U\)' conceal cchar=Ŭ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{U}\|\s\+U\)' conceal cchar=Ǔ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1099:    call s:Accents('w',' ',' ','ŵ',' ',' ',' ',' ',' ',' ',' ',' ',' ')
вызов function <SNR>22_Accents('w', ' ', ' ', 'ŵ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({w}\|w\)' conceal cchar=ŵ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1100:    call s:Accents('W',' ',' ','Ŵ',' ',' ',' ',' ',' ',' ',' ',' ',' ')
вызов function <SNR>22_Accents('W', ' ', ' ', 'Ŵ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({W}\|W\)' conceal cchar=Ŵ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1101:    call s:Accents('y','ỳ','ý','ŷ','ÿ','ỹ',' ',' ',' ',' ',' ',' ',' ')
вызов function <SNR>22_Accents('y', 'ỳ', 'ý', 'ŷ', 'ÿ', 'ỹ', ' ', ' ', ' ', ' ', ' ', ' ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({y}\|y\)' conceal cchar=ỳ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({y}\|y\)' conceal cchar=ý
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({y}\|y\)' conceal cchar=ŷ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({y}\|y\)' conceal cchar=ÿ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({y}\|y\)' conceal cchar=ỹ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1102:    call s:Accents('Y','Ỳ','Ý','Ŷ','Ÿ','Ỹ',' ',' ',' ',' ',' ',' ',' ')
вызов function <SNR>22_Accents('Y', 'Ỳ', 'Ý', 'Ŷ', 'Ÿ', 'Ỹ', ' ', ' ', ' ', ' ', ' ', ' ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({Y}\|Y\)' conceal cchar=Ỳ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({Y}\|Y\)' conceal cchar=Ý
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({Y}\|Y\)' conceal cchar=Ŷ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({Y}\|Y\)' conceal cchar=Ÿ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({Y}\|Y\)' conceal cchar=Ỹ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1103:    call s:Accents('z',' ','ź',' ',' ',' ','ż',' ',' ',' ',' ',' ','ž')
вызов function <SNR>22_Accents('z', ' ', 'ź', ' ', ' ', ' ', 'ż', ' ', ' ', ' ', ' ', ' ', 'ž')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({z}\|z\)' conceal cchar=ź
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({z}\|z\)' conceal cchar=ż
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{z}\|\s\+z\)' conceal cchar=ž
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1104:    call s:Accents('Z',' ','Ź',' ',' ',' ','Ż',' ',' ',' ',' ',' ','Ž')
вызов function <SNR>22_Accents('Z', ' ', 'Ź', ' ', ' ', ' ', 'Ż', ' ', ' ', ' ', ' ', ' ', 'Ž')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({Z}\|Z\)' conceal cchar=Ź
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({Z}\|Z\)' conceal cchar=Ż
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\v\(\s*{Z}\|\s\+Z\)' conceal cchar=Ž
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1105:    call s:Accents('\\i','ì','í','î','ï','ĩ','į',' ',' ',' ',' ','ĭ',' ')
вызов function <SNR>22_Accents('\\i', 'ì', 'í', 'î', 'ï', 'ĩ', 'į', ' ', ' ', ' ', ' ', 'ĭ', ' ')

строка 1:      let i= 1
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\`\s*\({\\i}\|\\i\)' conceal cchar=ì
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\'\s*\({\\i}\|\\i\)' conceal cchar=í
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\^\s*\({\\i}\|\\i\)' conceal cchar=î
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\"\s*\({\\i}\|\\i\)' conceal cchar=ï
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\~\s*\({\\i}\|\\i\)' conceal cchar=ĩ
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 13: syn match texAccent '\\\.\s*\({\\i}\|\\i\)' conceal cchar=į
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 11: syn match texAccent '\\u\(\s*{\\i}\|\s\+\\i\)' conceal cchar=ĭ
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 2:      for accent in ["`","\\'","^",'"','\~','\.',"c","H","k","r","u","v"]
строка 3:       if i > a:0
строка 4:        break
строка 5:       endif
строка 6:       if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
строка 7:        let i= i + 1
строка 8:        continue
строка 9:       endif
строка 10:       if accent =~ '\a'
строка 11:        exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 12:       else
строка 13:        exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
строка 14:       endif
строка 15:       let i= i + 1
строка 16:      endfor
function <SNR>22_Accents возвращает #0

продолжение в /usr/share/vim/syntax/tex.vim

строка 1106:    "                  \`  \'  \^  \"  \~  \.  \c  \H  \k  \r  \u  \v
строка 1107:    delfun s:Accents
строка 1108:    syn match texAccent   '\\aa\>'^Iconceal cchar=å
строка 1109:    syn match texAccent   '\\AA\>'^Iconceal cchar=Å
строка 1110:    syn match texAccent^I'\\o\>'^I^Iconceal cchar=ø
строка 1111:    syn match texAccent^I'\\O\>'^I^Iconceal cchar=Ø
строка 1112:    syn match texLigature^I'\\AE\>'^Iconceal cchar=Æ
строка 1113:    syn match texLigature^I'\\ae\>'^Iconceal cchar=æ
строка 1114:    syn match texLigature^I'\\oe\>'^Iconceal cchar=œ
строка 1115:    syn match texLigature^I'\\OE\>'^Iconceal cchar=Œ
строка 1116:    syn match texLigature^I'\\ss\>'^Iconceal cchar=ß
строка 1117:   endif
строка 1118:  endif
строка 1119: endif
строка 1120: 
строка 1121: " ---------------------------------------------------------------------
строка 1122: " LaTeX synchronization: {{{1
строка 1123: syn sync maxlines=200
строка 1124: syn sync minlines=50
строка 1125: 
строка 1126: syn  sync match texSyncStop^I^I^Igroupthere NONE^I^I"%stopzone\>"
строка 1127: 
строка 1128: " Synchronization: {{{1
строка 1129: " The $..$ and $$..$$ make for impossible sync patterns
строка 1130: " (one can't tell if a "$$" starts or stops a math zone by itself)
строка 1131: " The following grouptheres coupled with minlines above
строка 1132: " help improve the odds of good syncing.
строка 1133: if !exists("tex_no_math")
строка 1134:  syn sync match texSyncMathZoneA^I^Igroupthere NONE^I^I"\\end{abstract}"
строка 1135:  syn sync match texSyncMathZoneA^I^Igroupthere NONE^I^I"\\end{center}"
строка 1136:  syn sync match texSyncMathZoneA^I^Igroupthere NONE^I^I"\\end{description}"
строка 1137:  syn sync match texSyncMathZoneA^I^Igroupthere NONE^I^I"\\end{enumerate}"
строка 1138:  syn sync match texSyncMathZoneA^I^Igroupthere NONE^I^I"\\end{itemize}"
строка 1139:  syn sync match texSyncMathZoneA^I^Igroupthere NONE^I^I"\\end{table}"
строка 1140:  syn sync match texSyncMathZoneA^I^Igroupthere NONE^I^I"\\end{tabular}"
строка 1141:  syn sync match texSyncMathZoneA^I^Igroupthere NONE^I^I"\\\(sub\)*section\>"
строка 1142: endif
строка 1143: 
строка 1144: " ---------------------------------------------------------------------
строка 1145: " Highlighting: {{{1
строка 1146: if did_tex_syntax_inits == 1
строка 1147:  let did_tex_syntax_inits= 2
строка 1148:   " TeX highlighting groups which should share similar highlighting
строка 1149:   if !exists("g:tex_no_error")
строка 1150:    if !exists("tex_no_math")
строка 1151:     HiLink texBadMath^I^ItexError
строка 1151: hi def link texBadMath^I^ItexError
строка 1152:     HiLink texMathDelimBad^ItexError
строка 1152: hi def link texMathDelimBad^ItexError
строка 1153:     HiLink texMathError^I^ItexError
строка 1153: hi def link texMathError^I^ItexError
строка 1154:     if !b:tex_stylish
строка 1155:       HiLink texOnlyMath^ItexError
строка 1155: hi def link texOnlyMath^ItexError
строка 1156:     endif
строка 1157:    endif
строка 1158:    HiLink texError^I^IError
строка 1158: hi def link texError^I^IError
строка 1159:   endif
строка 1160: 
строка 1161:   HiLink texCite^I^ItexRefZone
строка 1161: hi def link texCite^I^ItexRefZone
строка 1162:   HiLink texDefCmd^I^ItexDef
строка 1162: hi def link texDefCmd^I^ItexDef
строка 1163:   HiLink texDefName^I^ItexDef
строка 1163: hi def link texDefName^I^ItexDef
строка 1164:   HiLink texDocType^I^ItexCmdName
строка 1164: hi def link texDocType^I^ItexCmdName
строка 1165:   HiLink texDocTypeArgs^I^ItexCmdArgs
строка 1165: hi def link texDocTypeArgs^I^ItexCmdArgs
строка 1166:   HiLink texInputFileOpt^ItexCmdArgs
строка 1166: hi def link texInputFileOpt^ItexCmdArgs
строка 1167:   HiLink texInputCurlies^ItexDelimiter
строка 1167: hi def link texInputCurlies^ItexDelimiter
строка 1168:   HiLink texLigature^I^ItexSpecialChar
строка 1168: hi def link texLigature^I^ItexSpecialChar
строка 1169:   if !exists("tex_no_math")
строка 1170:    HiLink texMathDelimSet1^ItexMathDelim
строка 1170: hi def link texMathDelimSet1^ItexMathDelim
строка 1171:    HiLink texMathDelimSet2^ItexMathDelim
строка 1171: hi def link texMathDelimSet2^ItexMathDelim
строка 1172:    HiLink texMathDelimKey^ItexMathDelim
строка 1172: hi def link texMathDelimKey^ItexMathDelim
строка 1173:    HiLink texMathMatcher^ItexMath
строка 1173: hi def link texMathMatcher^ItexMath
строка 1174:    HiLink texAccent^I^ItexStatement
строка 1174: hi def link texAccent^I^ItexStatement
строка 1175:    HiLink texGreek^I^ItexStatement
строка 1175: hi def link texGreek^I^ItexStatement
строка 1176:    HiLink texSuperscript^ItexStatement
строка 1176: hi def link texSuperscript^ItexStatement
строка 1177:    HiLink texSubscript^I^ItexStatement
строка 1177: hi def link texSubscript^I^ItexStatement
строка 1178:    HiLink texMathSymbol^I^ItexStatement
строка 1178: hi def link texMathSymbol^I^ItexStatement
строка 1179:    HiLink texMathZoneV^I^ItexMath
строка 1179: hi def link texMathZoneV^I^ItexMath
строка 1180:    HiLink texMathZoneW^I^ItexMath
строка 1180: hi def link texMathZoneW^I^ItexMath
строка 1181:    HiLink texMathZoneX^I^ItexMath
строка 1181: hi def link texMathZoneX^I^ItexMath
строка 1182:    HiLink texMathZoneY^I^ItexMath
строка 1182: hi def link texMathZoneY^I^ItexMath
строка 1183:    HiLink texMathZoneV^I^ItexMath
строка 1183: hi def link texMathZoneV^I^ItexMath
строка 1184:    HiLink texMathZoneZ^I^ItexMath
строка 1184: hi def link texMathZoneZ^I^ItexMath
строка 1185:   endif
строка 1186:   HiLink texSectionMarker^ItexCmdName
строка 1186: hi def link texSectionMarker^ItexCmdName
строка 1187:   HiLink texSectionName^I^ItexSection
строка 1187: hi def link texSectionName^I^ItexSection
строка 1188:   HiLink texSpaceCode^I^ItexStatement
строка 1188: hi def link texSpaceCode^I^ItexStatement
строка 1189:   HiLink texStyleStatement^ItexStatement
строка 1189: hi def link texStyleStatement^ItexStatement
строка 1190:   HiLink texTypeSize^I^ItexType
строка 1190: hi def link texTypeSize^I^ItexType
строка 1191:   HiLink texTypeStyle^I^ItexType
строка 1191: hi def link texTypeStyle^I^ItexType
строка 1192: 
строка 1193:    " Basic TeX highlighting groups
строка 1194:   HiLink texCmdArgs^I^INumber
строка 1194: hi def link texCmdArgs^I^INumber
строка 1195:   HiLink texCmdName^I^IStatement
строка 1195: hi def link texCmdName^I^IStatement
строка 1196:   HiLink texComment^I^IComment
строка 1196: hi def link texComment^I^IComment
строка 1197:   HiLink texDef^I^I^IStatement
строка 1197: hi def link texDef^I^I^IStatement
строка 1198:   HiLink texDefParm^I^ISpecial
строка 1198: hi def link texDefParm^I^ISpecial
строка 1199:   HiLink texDelimiter^I^IDelimiter
строка 1199: hi def link texDelimiter^I^IDelimiter
строка 1200:   HiLink texInput^I^ISpecial
строка 1200: hi def link texInput^I^ISpecial
строка 1201:   HiLink texInputFile^I^ISpecial
строка 1201: hi def link texInputFile^I^ISpecial
строка 1202:   HiLink texLength^I^INumber
строка 1202: hi def link texLength^I^INumber
строка 1203:   HiLink texMath^I^ISpecial
строка 1203: hi def link texMath^I^ISpecial
строка 1204:   HiLink texMathDelim^I^IStatement
строка 1204: hi def link texMathDelim^I^IStatement
строка 1205:   HiLink texMathOper^I^IOperator
строка 1205: hi def link texMathOper^I^IOperator
строка 1206:   HiLink texNewCmd^I^IStatement
строка 1206: hi def link texNewCmd^I^IStatement
строка 1207:   HiLink texNewEnv^I^IStatement
строка 1207: hi def link texNewEnv^I^IStatement
строка 1208:   HiLink texOption^I^INumber
строка 1208: hi def link texOption^I^INumber
строка 1209:   HiLink texRefZone^I^ISpecial
строка 1209: hi def link texRefZone^I^ISpecial
строка 1210:   HiLink texSection^I^IPreCondit
строка 1210: hi def link texSection^I^IPreCondit
строка 1211:   HiLink texSpaceCodeChar^ISpecial
строка 1211: hi def link texSpaceCodeChar^ISpecial
строка 1212:   HiLink texSpecialChar^I^ISpecialChar
строка 1212: hi def link texSpecialChar^I^ISpecialChar
строка 1213:   HiLink texStatement^I^IStatement
строка 1213: hi def link texStatement^I^IStatement
строка 1214:   HiLink texString^I^IString
строка 1214: hi def link texString^I^IString
строка 1215:   HiLink texTodo^I^ITodo
строка 1215: hi def link texTodo^I^ITodo
строка 1216:   HiLink texType^I^IType
строка 1216: hi def link texType^I^IType
строка 1217:   HiLink texZone^I^IPreCondit
строка 1217: hi def link texZone^I^IPreCondit
строка 1218: 
строка 1219:   delcommand HiLink
строка 1220: endif
строка 1221: 
строка 1222: " Cleanup: {{{1
строка 1223: unlet s:extfname
строка 1224: let   b:current_syntax = "tex"
строка 1225: let &cpo               = s:keepcpo
строка 1226: unlet s:keepcpo
строка 1227: " vim: ts=8 fdm=marker
считывание сценария /usr/share/vim/syntax/tex.vim завершено
продолжение в function <SNR>3_SynSet
Поиск "/usr/share/vim/syntax/tex/*.vim"
Поиск "/usr/share/vim/vimfiles/after/syntax/tex.vim"
Поиск "/usr/share/vim/vimfiles/after/syntax/tex/*.vim"
Поиск "/home/black/.vim/after/syntax/tex.vim"
Поиск "/home/black/.vim/after/syntax/tex/*.vim"
строка 23:     endfor
строка 21:     for name in split(s, '\.')
строка 22:       exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
строка 23:     endfor
строка 24:   endif
function <SNR>3_SynSet возвращает #0

продолжение в Syntax Автокоманды для "*"

Выполнение FileType Автокоманды для "*"
автокоманда call s:LoadFTPlugin()

строка 0: call s:LoadFTPlugin()
вызов function <SNR>7_LoadFTPlugin()

строка 1:     if exists("b:undo_ftplugin")
строка 2:       exe b:undo_ftplugin
строка 3:       unlet! b:undo_ftplugin b:did_ftplugin
строка 4:     endif
строка 5: 
строка 6:     let s = expand("<amatch>")
строка 7:     if s != ""
строка 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
строка 9: ^I" In compatible mode options are reset to the global values, need to
строка 10: ^I" set the local values also when a plugin was already used.
строка 11: ^Iunlet b:did_ftplugin
строка 12:       endif
строка 13: 
строка 14:       " When there is a dot it is used to separate filetype names.  Thus for
строка 15:       " "aaa.bbb" load "aaa" and then "bbb".
строка 16:       for name in split(s, '\.')
строка 17: ^Iexe 'runtime! ftplugin/' . name . '.vim ftplugin/' . name . '_*.vim ftplugin/' . name . '/*.vim'
строка 17: runtime! ftplugin/tex.vim ftplugin/tex_*.vim ftplugin/tex/*.vim
Поиск "ftplugin/tex.vim ftplugin/tex_*.vim ftplugin/tex/*.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/ftplugin/tex.vim"
Поиск "/home/black/.vim/ftplugin/tex_*.vim"
Поиск "/home/black/.vim/ftplugin/tex/*.vim"
Поиск "/usr/share/vim/vimfiles/ftplugin/tex.vim"
Поиск "/usr/share/vim/vimfiles/ftplugin/tex_*.vim"
Поиск "/usr/share/vim/vimfiles/ftplugin/tex/*.vim"
Поиск "/usr/share/vim/ftplugin/tex.vim"
chdir(/usr/share/vim/ftplugin)
fchdir() to previous dir
строка 17: считывание "/usr/share/vim/ftplugin/tex.vim"
строка 1: " LaTeX filetype plugin
строка 2: " Language:     LaTeX (ft=tex)
строка 3: " Maintainer:   Benji Fisher, Ph.D. <benji@member.AMS.org>
строка 4: " Version:^I1.4
строка 5: " Last Change:^IWed 19 Apr 2006
строка 6: "  URL:^I^Ihttp://www.vim.org/script.php?script_id=411
строка 7: 
строка 8: " Only do this when not done yet for this buffer.
строка 9: if exists("b:did_ftplugin")
строка 10:   finish
строка 11: endif
строка 12: 
строка 13: " Start with plain TeX.  This will also define b:did_ftplugin .
строка 14: source $VIMRUNTIME/ftplugin/plaintex.vim
chdir(/usr/share/vim/ftplugin)
fchdir() to previous dir
строка 14: считывание "/usr/share/vim/ftplugin/plaintex.vim"
строка 1: " plain TeX filetype plugin
строка 2: " Language:     plain TeX (ft=plaintex)
строка 3: " Maintainer:   Benji Fisher, Ph.D. <benji@member.AMS.org>
строка 4: " Version:^I1.1
строка 5: " Last Change:^IWed 19 Apr 2006
строка 6: 
строка 7: " Only do this when not done yet for this buffer.
строка 8: if exists("b:did_ftplugin")
строка 9:   finish
строка 10: endif
строка 11: 
строка 12: " Start with initex.  This will also define b:did_ftplugin and b:undo_ftplugin .
строка 13: source $VIMRUNTIME/ftplugin/initex.vim
chdir(/usr/share/vim/ftplugin)
fchdir() to previous dir
строка 13: считывание "/usr/share/vim/ftplugin/initex.vim"
строка 1: " filetype plugin for TeX and variants
строка 2: " Language:     TeX (ft=initex)
строка 3: " Maintainer:   Benji Fisher, Ph.D. <benji@member.AMS.org>
строка 4: " Version:^I1.0
строка 5: " Last Change:^IWed 19 Apr 2006
строка 6: 
строка 7: " Only do this when not done yet for this buffer.
строка 8: if exists("b:did_ftplugin")
строка 9:   finish
строка 10: endif
строка 11: 
строка 12: " Don't load another plugin for this buffer.
строка 13: let b:did_ftplugin = 1
строка 14: 
строка 15: " Avoid problems if running in 'compatible' mode.
строка 16: let s:save_cpo = &cpo
строка 17: set cpo&vim
строка 18: 
строка 19: let b:undo_ftplugin = "setl com< cms< define< include< sua<"
строка 20: 
строка 21: " Set 'comments' to format dashed lists in comments
строка 22: setlocal com=sO:%\ -,mO:%\ \ ,eO:%%,:%
строка 23: 
строка 24: " Set 'commentstring' to recognize the % comment character:
строка 25: " (Thanks to Ajit Thakkar.)
строка 26: setlocal cms=%%s
строка 27: 
строка 28: " Allow "[d" to be used to find a macro definition:
строка 30: let &l:define='\\\([egx]\|char\|mathchar\|count\|dimen\|muskip\|skip\|toks\)\=' .^I'def\|\\font\|\\\(future\)\=let'
строка 31: 
строка 32: " Tell Vim to recognize \input bar :
строка 33: let &l:include = '\\input'
строка 34: setlocal suffixesadd=.tex
строка 35: 
строка 36: let &cpo = s:save_cpo
строка 37: 
строка 38: " vim:sts=2:sw=2:
считывание сценария /usr/share/vim/ftplugin/initex.vim завершено
продолжение в /usr/share/vim/ftplugin/plaintex.vim
строка 14: 
строка 15: " Avoid problems if running in 'compatible' mode.
строка 16: let s:save_cpo = &cpo
строка 17: set cpo&vim
строка 18: 
строка 19: let b:undo_ftplugin .= "| unlet! b:match_ignorecase b:match_skip b:match_words"
строка 20: 
строка 21: " Allow "[d" to be used to find a macro definition:
строка 23: let &l:define .= '\|\\new\(count\|dimen\|skip\|muskip\|box\|toks\|read\|write' .^I'\|fam\|insert\)'
строка 24: 
строка 25: " The following lines enable the macros/matchit.vim plugin for
строка 26: " extended matching with the % key.
строка 27: " There is no default meaning for \(...\) etc., but many users define one.
строка 28: if exists("loaded_matchit")
строка 31:   let b:match_ignorecase = 0 | let b:match_skip = 'r:\\\@<!\%(\\\\\)*%' | let b:match_words = '(:),\[:],{:},\\(:\\),\\\[:\\],\\{:\\}'
строка 31:  let b:match_skip = 'r:\\\@<!\%(\\\\\)*%' | let b:match_words = '(:),\[:],{:},\\(:\\),\\\[:\\],\\{:\\}'
строка 31:  let b:match_words = '(:),\[:],{:},\\(:\\),\\\[:\\],\\{:\\}'
строка 32: endif " exists("loaded_matchit")
строка 33: 
строка 34: let &cpo = s:save_cpo
строка 35: 
строка 36: " vim:sts=2:sw=2:
считывание сценария /usr/share/vim/ftplugin/plaintex.vim завершено
продолжение в /usr/share/vim/ftplugin/tex.vim
строка 15: 
строка 16: " Avoid problems if running in 'compatible' mode.
строка 17: let s:save_cpo = &cpo
строка 18: set cpo&vim
строка 19: 
строка 20: let b:undo_ftplugin .= "| setl inex<"
строка 21: 
строка 22: " Allow "[d" to be used to find a macro definition:
строка 23: " Recognize plain TeX \def as well as LaTeX \newcommand and \renewcommand .
строка 24: " I may as well add the AMS-LaTeX DeclareMathOperator as well.
строка 27: let &l:define .= '\|\\\(re\)\=new\(boolean\|command\|counter\|environment\|font' . '\|if\|length\|savebox\|theorem\(style\)\=\)\s*\*\=\s*{\=' . '\|DeclareMathOperator\s*{\=\s*'
строка 28: 
строка 29: " Tell Vim how to recognize LaTeX \include{foo} and plain \input bar :
строка 30: let &l:include .= '\|\\include{'
строка 31: " On some file systems, "{" and "}" are inluded in 'isfname'.  In case the
строка 32: " TeX file has \include{fname} (LaTeX only), strip everything except "fname".
строка 33: let &l:includeexpr = "substitute(v:fname, '^.\\{-}{\\|}.*', '', 'g')"
строка 34: 
строка 35: " The following lines enable the macros/matchit.vim plugin for
строка 36: " extended matching with the % key.
строка 37: " ftplugin/plaintex.vim already defines b:match_skip and b:match_ignorecase
строка 38: " and matches \(, \), \[, \], \{, and \} .
строка 39: if exists("loaded_matchit")
строка 40:   let b:match_words .= ',\\begin\s*\({\a\+\*\=}\):\\end\s*\1'
строка 41: endif " exists("loaded_matchit")
строка 42: 
строка 43: let &cpo = s:save_cpo
строка 44: 
строка 45: " vim:sts=2:sw=2:
считывание сценария /usr/share/vim/ftplugin/tex.vim завершено
продолжение в function <SNR>7_LoadFTPlugin
Поиск "/usr/share/vim/ftplugin/tex_*.vim"
Поиск "/usr/share/vim/ftplugin/tex/*.vim"
Поиск "/usr/share/vim/vimfiles/after/ftplugin/tex.vim"
Поиск "/usr/share/vim/vimfiles/after/ftplugin/tex_*.vim"
Поиск "/usr/share/vim/vimfiles/after/ftplugin/tex/*.vim"
Поиск "/home/black/.vim/after/ftplugin/tex.vim"
Поиск "/home/black/.vim/after/ftplugin/tex_*.vim"
Поиск "/home/black/.vim/after/ftplugin/tex/*.vim"
строка 18:       endfor
строка 16:       for name in split(s, '\.')
строка 17: ^Iexe 'runtime! ftplugin/' . name . '.vim ftplugin/' . name . '_*.vim ftplugin/' . name . '/*.vim'
строка 18:       endfor
строка 19:     endif
function <SNR>7_LoadFTPlugin возвращает #0

продолжение в FileType Автокоманды для "*"

Выполнение FileType Автокоманды для "*"
автокоманда call s:LoadIndent()

строка 0: call s:LoadIndent()
вызов function <SNR>8_LoadIndent()

строка 1:     if exists("b:undo_indent")
строка 2:       exe b:undo_indent
строка 3:       unlet! b:undo_indent b:did_indent
строка 4:     endif
строка 5:     let s = expand("<amatch>")
строка 6:     if s != ""
строка 7:       if exists("b:did_indent")
строка 8: ^Iunlet b:did_indent
строка 9:       endif
строка 10: 
строка 11:       " When there is a dot it is used to separate filetype names.  Thus for
строка 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
строка 13:       for name in split(s, '\.')
строка 14: ^Iexe 'runtime! indent/' . name . '.vim'
строка 14: runtime! indent/tex.vim
Поиск "indent/tex.vim" в "/home/black/.vim,/usr/share/vim/vimfiles,/usr/share/vim,/usr/share/vim/vimfiles/after,/home/black/.vim/after"
Поиск "/home/black/.vim/indent/tex.vim"
Поиск "/usr/share/vim/vimfiles/indent/tex.vim"
Поиск "/usr/share/vim/indent/tex.vim"
Поиск "/usr/share/vim/vimfiles/after/indent/tex.vim"
Поиск "/home/black/.vim/after/indent/tex.vim"
не найдено в 'runtimepath': "indent/tex.vim"
строка 15:       endfor
строка 13:       for name in split(s, '\.')
строка 14: ^Iexe 'runtime! indent/' . name . '.vim'
строка 15:       endfor
строка 16:     endif
function <SNR>8_LoadIndent возвращает #0

продолжение в FileType Автокоманды для "*"

строка 44:   endif
строка 45:   return
function <SNR>5_FTtex возвращает #0

продолжение в BufRead Автокоманды для "*.tex"

Выполнение BufRead Автокоманды для "*"
автокоманда if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

строка 0: if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
строка 0:  runtime! scripts.vim | endif
строка 0:  endif
Выполнение BufRead Автокоманды для "*"
автокоманда if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif

строка 0: if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
строка 0:    setf conf | endif
строка 0:  endif
Выполнение BufEnter Автокоманды для "*"
автокоманда sil! call s:LocalBrowse(expand("<amatch>"))

строка 0: sil! call s:LocalBrowse(expand("<amatch>"))
вызов function <SNR>15_LocalBrowse('/home/black/qt-c-book/books-qtC++/bo...k/qt-c-book/books-qtC++/book/glava6.tex')

строка 1:   " unfortunate interaction -- debugging calls can't be used here;
строка 2:   " the BufEnter event causes triggering when attempts to write to
строка 3:   " the DBG buffer are made.
строка 4: "  echomsg "dirname<".a:dirname.">"
строка 5:   if has("amiga")
строка 6:    " The check against '' is made for the Amiga, where the empty
строка 7:    " string is the current directory and not checking would break
строка 8:    " things such as the help command.
строка 9:    if a:dirname != '' && isdirectory(a:dirname)
строка 10:     sil! call netrw#LocalBrowseCheck(a:dirname)
строка 11:    endif
строка 12:   elseif isdirectory(a:dirname)
строка 13: "   echomsg "dirname<".dirname."> isdir"
строка 14:    sil! call netrw#LocalBrowseCheck(a:dirname)
строка 15:   endif
строка 16:   " not a directory, ignore it
function <SNR>15_LocalBrowse возвращает #0

продолжение в BufEnter Автокоманды для "*"

Выполнение VimEnter Автокоманды для "*"
автокоманда sil! call s:VimEnter(expand("<amatch>"))

строка 0: sil! call s:VimEnter(expand("<amatch>"))
вызов function <SNR>15_VimEnter('/home/black/qt-c-book/books-qtC++/bo...k/qt-c-book/books-qtC++/book/glava6.tex')

строка 1:   let curwin= winnr()
строка 2:   windo if a:dirname != expand("%")|call s:LocalBrowse(expand("%:p"))|endif
строка 2: if a:dirname != expand("%")|call s:LocalBrowse(expand("%:p"))|endif
строка 2: call s:LocalBrowse(expand("%:p"))|endif
вызов function <SNR>15_VimEnter..<SNR>15_LocalBrowse('/home/black/qt-c-book/books-qtC++/bo...k/qt-c-book/books-qtC++/book/glava6.tex')

строка 1:   " unfortunate interaction -- debugging calls can't be used here;
строка 2:   " the BufEnter event causes triggering when attempts to write to
строка 3:   " the DBG buffer are made.
строка 4: "  echomsg "dirname<".a:dirname.">"
строка 5:   if has("amiga")
строка 6:    " The check against '' is made for the Amiga, where the empty
строка 7:    " string is the current directory and not checking would break
строка 8:    " things such as the help command.
строка 9:    if a:dirname != '' && isdirectory(a:dirname)
строка 10:     sil! call netrw#LocalBrowseCheck(a:dirname)
строка 11:    endif
строка 12:   elseif isdirectory(a:dirname)
строка 13: "   echomsg "dirname<".dirname."> isdir"
строка 14:    sil! call netrw#LocalBrowseCheck(a:dirname)
строка 15:   endif
строка 16:   " not a directory, ignore it
function <SNR>15_VimEnter..<SNR>15_LocalBrowse возвращает #0

продолжение в function <SNR>15_VimEnter

строка 2: endif
строка 3:   exe curwin."wincmd w"
строка 3: 1wincmd w
function <SNR>15_VimEnte